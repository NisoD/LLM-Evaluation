{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "description": "Schema for storing and validating LLMs evaluation data, including model configuration, prompts, instances, Output, and evaluation metrics",
    "required": ["EvaluationId","Model", "Prompt", "Instance", "Output", "Evaluation"],
    "properties": {
        "EvaluationId": {
            "type": "string",
            "description": "Unique identifier for this specific evaluation run, including the model configuration, prompt, instance, output and evaluation results"
        },
        "Model": {
            "type": "object",
            "description": "Complete model specification including basic information, technical configuration and inference settings",
            "required": ["ModelInfo", "Configuration", "InferenceSettings"],
            "properties": {
                "ModelInfo": {
                    "type": "object",
                    "description": "Basic identifying information about the model - represents the core identity and naming of the model without technical details",
                    "required": ["name"],
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Model name and version (e.g., 'Llama-2-13b-chat-hf')"
                        },
                        "family": {
                            "type": ["string", "null"],
                            "enum": ["llama", "mistral", "gemma", "gpt", "palm", "claude", "falcon", null],
                            "description": "Model family"
                        }
                    }
                },
                "Configuration": {
                    "type": "object",
                    "description": "Technical specifications and implementation details of the model - defines how the model is structured and where it's hosted",
                    "required": ["context_window"],
                    "properties": {
                        "architecture": {
                            "type": ["string", "null"],
                            "enum": ["transformer", "moe", "ssm", null],
                            "description": "Model architecture type"
                        },
                        "parameters": {
                            "type": ["integer", "null"],
                            "minimum": 1,
                            "description": "Number of parameters in billions"
                        },
                        "context_window": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Maximum context window size in tokens"
                        },
                        "is_instruct": {
                            "type": "boolean",
                            "description": "Whether the model is instruction-tuned"
                        },
                        "hf_path": {
                            "type": ["string", "null"],
                            "description": "HuggingFace model path"
                        },
                        "revision": {
                            "type": ["string", "null"],
                            "description": "Model revision/commit hash"
                        }
                    }
                },
                "InferenceSettings": {
                    "type": "object",
                    "description": "Runtime settings and parameters for model inference - controls how the model generates outputs and performs during execution",
                    "required": ["quantization", "generation_args"],
                    "properties": {
                        "quantization": {
                            "type": "object",
                            "required": ["bit_precision", "method"],
                            "properties": {
                                "bit_precision": {
                                    "type": "string",
                                    "enum": ["none", "4bit", "8bit", "16bit"],
                                    "description": "Quantization bit precision"
                                },
                                "method": {
                                    "type": "string",
                                    "enum": ["none", "dynamic", "static"],
                                    "description": "Quantization method"
                                }
                            }
                        },
                        "generation_args": {
                            "type": "object",
                            "properties": {
                                "use_vllm": {
                                    "type": "boolean",
                                    "description": "Whether VLLM was used for inference"
                                },
                                "temperature": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 2,
                                    "description": "Sampling temperature"
                                },
                                "top_p": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 1,
                                    "description": "Nucleus sampling parameter"
                                },
                                "top_k": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "description": "Top-k sampling parameter"
                                },
                                "max_tokens": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "description": "Maximum number of tokens to generate"
                                },
                                "stop_sequences": {
                                    "type": "array",
                                    "description": "Sequences that stop generation",
                                    "items": {
                                        "type": "string"
                                    },
                                    "default": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "Prompt": {
            "type": "object",
            "description": "Configuration of the prompt template and formatting",
            "required": ["promptClass", "format"],
            "properties": {
                "promptClass": {
                    "type": "string",
                    "description": "Type of prompt template and its formatting requirements",
                    "enum": ["MultipleChoice", "OpenEnded", "Completion"]
                },
                "format": {
                    "type": "object",
                    "description": "Format-specific configuration",
                    "oneOf": [
                        {
                            "type": "object",
                            "required": ["type", "template", "separator", "enumerator", "shuffleChoices", "shots"],
                            "properties": {
                                "type": {
                                    "const": "MultipleChoice"
                                },
                                "template": {
                                    "type": "string",
                                    "description": "Base template format with placeholders for topic, question, choices, and answer"
                                },
                                "separator": {
                                    "type": "string",
                                    "description": "Character(s) used to separate multiple choice options",
                                    "enum": [" ", "\n", ", ", "; ", " | ", " OR ", " or "]
                                },
                                "enumerator": {
                                    "type": "string",
                                    "description": "Style of enumeration for multiple choice options",
                                    "enum": ["capitals", "lowercase", "numbers", "roman", "αβγδεζηθικ", "!@#$%^₪*)("]
                                },
                                "shuffleChoices": {
                                    "type": "boolean",
                                    "description": "Whether the order of choices is randomized"
                                },
                                "shots": {
                                    "type": "integer",
                                    "description": "Number of examples provided in the prompt",
                                    "minimum": 0,
                                    "maximum": 10
                                }
                            }
                        }
                    ]
                }
            }
    },
        "Instance": {
            "type": "object",
            "description": "Specific instance and its metadata",
            "required": ["TaskType", "RawInput", "SampleIdentifier", "TokenIds","Perplexity"],
            "additionalProperties": true,
            "properties": {
                "TaskType": {
                    "type": "string",
                    "description": "Type of the task",
                    "enum": ["classification", "generation"]
                },
                "RawInput": {
                    "type": "string",
                    "description": "Original input text as it appears in the dataset, without any formatting or prompting"
                },
                "SampleIdentifier": {
                    "type": "object",
                    "description": "Metadata to help identify and match the sample to the dataset",
                    "required": ["dataset_name", "split"],
                    "properties": {
                        "dataset_name": {
                            "type": "string",
                            "description": "Name of the source dataset"
                        },
                        "split": {
                            "type": "string",
                            "description": "Dataset split (e.g., train, test, validation)",
                            "enum": ["train", "test", "validation"]
                        },
                        "hf_repo": {
                            "type": "string",
                            "description": "HuggingFace repository identifier"
                        },
                        "hf_index": {
                            "type": "integer",
                            "description": "Index in the HuggingFace dataset"
                        }
                    }
                },
                "TokenIds": {
                    "type": ["array", "null"],
                    "description": "Array of token IDs representing the tokenized prompt",
                    "items": {
                        "type": "integer"
                    }
                },
                "Perplexity": {
                    "type": ["number", "null"],
                    "description": "Perplexity score measuring the complexity of the input text"
                },
                "ClassificationFields": {
                    "type": "object",
                    "description": "Fields specific to classification tasks",
                    "if": {
                        "properties": { "TaskType": { "const": "classification" } }
                    },
                    "then": {
                        "required": ["Question", "Choices", "GroundTruth"],
                        "properties": {
                            "FullInput": {
                                "type": "string",
                                "description": "Full input text, including few shot examples and question"
                            },
                            "Question": {
                                "type": "string",
                                "description": "The actual question"
                            },
                            "Choices": {
                                "type": "array",
                                "description": "Array of all multiple choice options",
                                "items": {
                                    "type": "object",
                                    "required": ["id", "text"],
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "Choice identifier (e.g., 'A', '1', etc.)"
                                        },
                                        "text": {
                                            "type": "string",
                                            "description": "Choice text"
                                        }
                                    }
                                }
                            },
                            "GroundTruth": {
                                "required": ["id", "text"],
                                "description": "The correct answer for the classification task",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "Choice identifier (e.g., 'A', '1', etc.)"
                                    },
                                    "text": {
                                        "type": "string",
                                        "description": "Choice text"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "Output": {
            "type": "object",
            "description": "Model's response and associated probability metrics",
            "required": ["Response", "GeneratedTokensIds", "GeneratedTokensLogProbs", "MaxProb"],
            "properties": {
                "Response": {
                    "type": "string",
                    "description": "The model's complete text response"
                },
                "CumulativeLogProb": {
                    "type": ["number", "null"],
                    "description": "Cumulative log probability of the generated sequence from VLLM"
                },
                "GeneratedTokensIds": {
                    "type": ["array", "null"],
                    "description": "Array of token IDs for the model's response",
                    "items": {
                        "type": "integer"
                    }
                },
                "GeneratedTokensLogProbs": {
                    "type": ["array", "null"],
                    "description": "Per-token probabilities and top alternatives",
                    "items": {
                        "type": "object",
                        "required": ["token", "token_id", "top_5"],
                        "properties": {
                            "token": {
                                "type": "string",
                                "description": "The actual token string"
                            },
                            "token_id": {
                                "type": "integer",
                                "description": "ID of the token"
                            },
                            "top_5": {
                                "type": "array",
                                "description": "Top 5 most probable next tokens and their probabilities",
                                "minItems": 5,
                                "maxItems": 5,
                                "items": {
                                    "type": "object",
                                    "required": ["token", "token_id", "LogProb"],
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "description": "Candidate token string"
                                        },
                                        "token_id": {
                                            "type": "integer",
                                            "description": "ID of the candidate token"
                                        },
                                        "LogProb": {
                                            "type": "number",
                                            "description": "Log probability of the candidate token"
                                        },
                                        "rank": {
                                            "type": "integer",
                                            "description": "Rank of this token in the top 5 (1-5, where 1 is highest probability)",
                                            "minimum": 1,
                                            "maximum": 5
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "MaxProb": {
                    "type": "string",
                    "description": "The answer choice that received the highest probability among the specific answer options available in the sample (e.g., if the choices are A, B, C, we only compare probabilities between these three labels in the model's first token prediction)."
                }
            }
        },
        "Evaluation": {
            "type": "object",
            "description": "Evaluation metrics and ground truth",
            "required": ["GroundTruth", "Score"],
            "properties": {
                "EvaluationMethod": {
                    "type": "string",
                    "description": "Method used to evaluate the answer",
                    "enum": [
                        "label_only_match",
                        "content_similarity"
                    ],
                    "enumDescriptions": {
                       "label_only_match": "Compares only the choice identifier/label",
                        "content_similarity": "Finds the most similar answer among the given choices by comparing the textual content"
                    }
                },
                "GroundTruth": {
                    "type": "string",
                    "description": "The correct answer for evaluation"
                },
                "Score": {
                    "type": "number",
                    "description": "Binary score indicating whether the model's answer was correct (1.0) or incorrect (0.0)",
                    "minimum": 0,
                    "maximum": 1
                }
            }
        }
    }
}