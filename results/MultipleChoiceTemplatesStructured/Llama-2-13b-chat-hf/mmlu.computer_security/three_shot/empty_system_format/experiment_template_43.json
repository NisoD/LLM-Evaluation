{"card": "cards.mmlu.computer_security", "template_name": "template_43", "model_name": "meta-llama/Llama-2-13b-chat-hf", "system_format": "empty_system_format", "max_instances": 14000, "num_demos": 3, "demos_pool_size": 20, "results": {"test": [{"Index": 0, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following styles of fuzzer is more likely to explore paths covering every line of code in the following program? Choices: I. Whitebox II. Blackbox III. Generational IV. Mutation-based Answer:\n", "Result": "III. Generational\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider the following code: int x = 1; int y = 2; int z = x + y; int w = z + y; int v = w + x; int u = v + y", "MaxTokenProbability": "III", "Perplexity": 6.33, "GroundTruth": "I. Whitebox"}, {"Index": 1, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replaying bytes that a client sent earlier.\n2. An attacker impersonating the server. Choices: I. True, False II. True, True III. False, True IV. False, False Answer:\n", "Result": "II. True, True\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a hash function H(x)H(x) that is collision resistant. Which of the following statements is true? Choices: I. H(x) is deterministic. II. H(", "MaxTokenProbability": "II", "Perplexity": 6.58, "GroundTruth": "II. True, True"}, {"Index": 2, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: MIT\u2019s Kerberos KDC server has a maximum ticket lifetime of 24 hours (for most user principals). What ensures that an expired Kerberos ticket can no longer be used? Choices: I. When a client connects to a server, the server compares the ticket\u2019s expiration time to the server\u2019s current clock, and refuses to authenticate the user if the ticket expiration time is in the past. II. The Kerberos server (KDC) refuses to establish new connections between clients and servers for expired tickets. III. When a client connects to a server, the server sets a 24-hour timer to terminate the connection, which ensures a client cannot remain connected past the ticket\u2019s maximum lifetime. IV. When a client connects to a server, the server sends a query to the KDC to check if the ticket is still valid with respect to the KDC\u2019s clock, and refuses to authenticate the user if the KDC reports that the ticket is expired. Answer:\n", "Result": "IV. When a client connects to a server, the server sends a query to the KDC to check if the ticket is still valid with respect to the KDC\u2019s clock, and refuses to authenticate the user if the KDC reports that the ticket is expired.\n\nQuestion: [question] Choices: [cho", "MaxTokenProbability": "IV", "Perplexity": 5.77, "GroundTruth": "I. When a client connects to a server, the server compares the ticket\u2019s expiration time to the server\u2019s current clock, and refuses to authenticate the user if the ticket expiration time is in the past."}, {"Index": 3, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In Message Condentiality, the transmitted message must make sense to only intended Choices: I. Receiver II. Modulor III. Sender IV. Translator Answer:\n", "Result": "I. Receiver\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" in OAuth 2.0? Choices: I. To prevent replay attacks II. To authenticate the client III. To encrypt the client's secret", "MaxTokenProbability": "I", "Perplexity": 7.61, "GroundTruth": "I. Receiver"}, {"Index": 4, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a remote Trojan? Choices: I. BankerA II. Troya III. Game-Troj IV. DaCryptic Answer:\n", "Result": "III. Game-Troj\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the following code? Choices: I. To encrypt data using AES. II. To decrypt data using AES. III. To authenticate data using HMAC", "MaxTokenProbability": "III", "Perplexity": 7.45, "GroundTruth": "II. Troya"}, {"Index": 5, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ______________ is a widespread app\u2019s coding mistake made by developers which could be exploited by an attacker for gaining access or malfunctioning your system. Choices: I. Memory leakage II. Inefficient programming III. Less processing power IV. Buffer-overrun Answer:\n", "Result": "II. Inefficient programming\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201cSecure Boot\u201d feature in the system? Choices: I. To ensure that the system boots only the operating system that is installed and intended to be run. II", "MaxTokenProbability": "II", "Perplexity": 8.13, "GroundTruth": "IV. Buffer-overrun"}, {"Index": 6, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider the paper Native Client: A Sandbox for Portable, Untrusted x86 Native Code by Yee et al. Ben Bitdiddle notes that NaCl uses Intel x86 segmentation to ensure that the sandboxed module does not read or write memory outside its own data area, and does not execute instructions outside its own code. Ben thinks that with these restrictions alone, executing the sandboxed module must be safe; that is, he thinks validation is not needed. Ben is wrong. Circle the types of x86 machine instructions that the validator always forbids in sandboxed code. Please ignore trampoline and springboard code. Choices: I. all indirect jumps (via an address in a register or variable) II. all loads or stores to addresses that are not 0 mod 32 III. all instructions that modify segment state IV. all indirect loads or stores (via an address in a register or variable) Answer:\n", "Result": "III. all instructions that modify segment state\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201c-fno-PIC\u201d flag in the GCC compiler? Choices: I. To force the creation of position-independent code (PIC)", "MaxTokenProbability": "III", "Perplexity": 10.07, "GroundTruth": "III. all instructions that modify segment state"}, {"Index": 7, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ____________ is also a part of darknet that is employed for transferring files anonymously. Choices: I. Internet II. ARPANET III. Freenet IV. Stuxnet Answer:\n", "Result": "III. Freenet\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The following is a list of cryptographic primitives:\n\n1. Digital Signature\n2. Symmetric Encryption\n3. Asymmetric Encryption\n4. Hash Function\n5. Message Authentication", "MaxTokenProbability": "III", "Perplexity": 7.74, "GroundTruth": "III. Freenet"}, {"Index": 8, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why apps developed in languages like C, C++ is prone to Buffer-overflow? Choices: I. No processing power check II. No string boundary checks in predefined functions III. No storage check in the external memory IV. No database check Answer:\n", "Result": "III. No string boundary checks in predefined functions\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201csecure boot chain\u201d in the context of the paper? Choices: I. To ensure that the kernel is authentic and has not been tampered with", "MaxTokenProbability": "III", "Perplexity": 8.88, "GroundTruth": "II. No string boundary checks in predefined functions"}, {"Index": 9, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Man in the middle attack can endanger the security of Diffie Hellman method if two parties are not Choices: I. Authenticated II. Shared III. Submitted IV. Joined Answer:\n", "Result": "II. Authenticated\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A secure PRP can be constructed from a secure PRG by using Choices: I. The GGM PRF II. The Luby-Rackoff theorem III. The Goldwasser-Mical", "MaxTokenProbability": "II", "Perplexity": 6.34, "GroundTruth": "I. Authenticated"}, {"Index": 10, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: An integer overflow occurs when Choices: I. an integer expression's result \"wraps around\"; instead of creating a very large number, a very small (or negative) number ends up getting created II. an integer is used to access a buffer outside of the buffer's bounds III. an integer is used as if it was a pointer IV. there is no more space to hold integers in the program Answer:\n", "Result": "I. an integer expression's result \"wraps around\"\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"padding\" field in an SSL/TLS record? Choices: I. To provide additional data for the encryption algorithm to work with", "MaxTokenProbability": "I", "Perplexity": 8.24, "GroundTruth": "IV. there is no more space to hold integers in the program"}, {"Index": 11, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let HH be a Merkle-Damgard hash function is H:X^{\\leq L} \\to TH:X^\u2264L  \u2192T. Construct a MAC from this HH as follows: \\ \\ S(k,m) = H(k \\| m)  S(k,m)=H(k\u2225m). This mac is insecure because: Choices: I. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| \\text{PB} \\| w)H(k\u2225m\u2225PB\u2225w) for any ww II. Anyone can compute H( k \\| m )H(k\u2225m) for any mm III. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| w)H(k\u2225m\u2225w) for any ww IV. Given H(k \\| m)H(k\u2225m) anyone can compute H(w \\| k \\| m \\| \\text{PB})H(w\u2225k\u2225m\u2225PB) for any ww Answer:\n", "Result": "II. Anyone can compute H(k \\| m)H(k\u2225m) for any mm\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" in the OAuth 2.0 authorization flow? Choices: I. To prevent", "MaxTokenProbability": "II", "Perplexity": 6.64, "GroundTruth": "I. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| \\text{PB} \\| w)H(k\u2225m\u2225PB\u2225w) for any ww"}, {"Index": 12, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose that Alice and Bob sent confidential text messages to one another last month through an encrypted messaging system. Alice and Bob are worried that an adversary might compromise one of their computers today, while they are taking the 6.858 final exam, and would then be able to decrypt those messages. Which of the following security properties can address Alice and Bob\u2019s concern? Choices: I. Backward secrecy. II. Authentication. III. Forward secrecy IV. Deniability. Answer:\n", "Result": "III. Forward secrecy\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a secure communication system that uses a shared secret key. Which of the following attacks can be prevented by using a shared secret key? Choices: I. Man-in-the-middle attack.", "MaxTokenProbability": "III", "Perplexity": 7.26, "GroundTruth": "III. Forward secrecy"}, {"Index": 13, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The AH Protocol provides source authentication and data integrity, but not Choices: I. Nonrepudiation II. Both A & C III. Integrity IV. Privacy Answer:\n", "Result": "II. Both A & C\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a secure PRP, PRP(K), that takes a key K as input and produces a pseudorandom output. Suppose we have a secure PRG, PRG(K), that takes a", "MaxTokenProbability": "II", "Perplexity": 7.61, "GroundTruth": "IV. Privacy"}, {"Index": 14, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a security exploit? Choices: I. Authentication II. SQL Injection III. Eavesdropping IV. Cross-site scripting Answer:\n", "Result": "III. Eavesdropping\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security benefit of using a cloud service provider? Choices: I. Reduced cost II. Increased security III. Greater flexibility IV. Improved scal", "MaxTokenProbability": "III", "Perplexity": 5.35, "GroundTruth": "I. Authentication"}, {"Index": 15, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: _______________ is the central node of 802.11 wireless operations. Choices: I. Access Point II. WPA III. WAP IV. Access Port Answer:\n", "Result": "I. Access Point\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the Diffie-Hellman key exchange? Choices: I. To provide perfect forward secrecy II. To provide authentication III. To provide integrity IV. To provide confidentiality", "MaxTokenProbability": "I", "Perplexity": 6.62, "GroundTruth": "I. Access Point"}, {"Index": 16, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In MD-5 the length of the message digest is Choices: I. 64 II. 128 III. 160 IV. 54 Answer:\n", "Result": "III. 160\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a digital signature? Choices: I. To authenticate the sender II. To authenticate the receiver III. To ensure the integrity of the message IV. To ensure the confidential", "MaxTokenProbability": "III", "Perplexity": 6.33, "GroundTruth": "II. 128"}, {"Index": 17, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is Nmap? Choices: I. It is a network fuzz testing tool II. It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might be at those addresses, based on the responses III. It is a map of the Internet IV. It is a suite of tools for scripting attacks: probe, construct, encode, inject, wait for response Answer:\n", "Result": "III. It is a map of the Internet\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201c-n\u201d option in the Nmap command? Choices: I. It tells Nmap to use a specific network interface instead of the default one. II", "MaxTokenProbability": "III", "Perplexity": 7.73, "GroundTruth": "II. It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might be at those addresses, based on the responses"}, {"Index": 18, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: How do you prevent SQL injection? Choices: I. Interrupt requests II. All of the above III. Escape queries IV. Merge tables Answer:\n", "Result": "III. All of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a benefit of using a web application firewall (WAF)? Choices: I. It can detect and prevent SQL injection attacks. II. It can detect and prevent cross-site script", "MaxTokenProbability": "III", "Perplexity": 7.74, "GroundTruth": "III. Escape queries"}, {"Index": 19, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What does it mean to \"be stealthy\" during a penetration test? Choices: I. Performing penetration testing without the target organization knowing II. Taking care to avoid activities during a penetration test that might attract attention, e.g., by operators or IDS services III. Using encryption during tests to make the source of attacks impossible to determine IV. Performing the tests from an undisclosed location Answer:\n", "Result": "I. Performing penetration testing without the target organization knowing\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a \"payload\" in a penetration test? Choices: I. To test the target system's ability to handle large amounts of data", "MaxTokenProbability": "I", "Perplexity": 6.36, "GroundTruth": "II. Taking care to avoid activities during a penetration test that might attract attention, e.g., by operators or IDS services"}, {"Index": 20, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a transport layer vulnerability? Choices: I. Unauthorized network access II. Mishandling of undefined, poorly defined variables III. The Vulnerability that allows \u201cfingerprinting\u201d & other enumeration of host information IV. Overloading of transport-layer mechanisms Answer:\n", "Result": "III. The Vulnerability that allows \u201cfingerprinting\u201d & other enumeration of host information\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a denial of service (DoS) attack? Choices: I. The attack", "MaxTokenProbability": "III", "Perplexity": 6.88, "GroundTruth": "I. Unauthorized network access"}, {"Index": 21, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In Brumley and Boneh\u2019s paper on side-channel attacks, why does blinding prevent the timing attack from working? Choices: I. Blinding changes the p and q primes that are used, so an adversary cannot learn the server\u2019s true p and q values. II. Blinding adds a random amount of time to the decryption due to the multiplication and division by the blinding random value r, which obscures the timing differences used in the attack. III. Blinding randomizes the ciphertext being decrypted, thus obscuring the correlation between an adversary\u2019s input and the timing differences. IV. Blinding prevents the server from using the CRT optimization, which is essential to the timing attack. Answer:\n", "Result": "II. Blinding adds a random amount of time to the decryption due to the multiplication and division by the blinding random value r, which obscures the timing differences used in the attack.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a hash function H(x) that", "MaxTokenProbability": "II", "Perplexity": 6.95, "GroundTruth": "III. Blinding randomizes the ciphertext being decrypted, thus obscuring the correlation between an adversary\u2019s input and the timing differences."}, {"Index": 22, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. RS and KM\n2. RS and MR Choices: I. True, True II. True, False III. False, False IV. False, True Answer:\n", "Result": "II. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a secure cryptographic algorithm? Choices: I. It is easy to implement II. It is fast III. It is secure IV. It is insecure Answer:\n", "MaxTokenProbability": "II", "Perplexity": 4.65, "GroundTruth": "IV. False, True"}, {"Index": 23, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Public key encryption is advantageous over Symmetric key Cryptography because of Choices: I. Key length II. Key exchange III. Speed IV. Space Answer:\n", "Result": "II. Key exchange\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a digital signature? Choices: I. It is a symmetric key algorithm II. It is a public key algorithm III. It is a message authentication code IV. It is a", "MaxTokenProbability": "II", "Perplexity": 7.54, "GroundTruth": "II. Key exchange"}, {"Index": 24, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The __________ was a huge marketplace of Dark Web specifically famous for selling of illegal drugs & narcotics as well as you can find a wide range of other goods for sale. Choices: I. Cotton Road II. Drug Road III. Dark Road IV. Silk Road Answer:\n", "Result": "IV. Silk Road\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"padding\" field in an SSL/TLS record? Choices: I. To provide additional data that can be used for padding the record. II. To provide a random non", "MaxTokenProbability": "IV", "Perplexity": 7.58, "GroundTruth": "IV. Silk Road"}, {"Index": 25, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The ______________ is categorized as an unknown segment of the Deep Web which has been purposely kept hidden & is inaccessible using standard web browsers. Choices: I. World Wide Web II. Dark web III. Surface web IV. Haunted web Answer:\n", "Result": "III. Dark web\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The term \u201cZero-Day\u201d refers to: Choices: I. A vulnerability that has been known for at least one day. II. A vulnerability that has been fixed by the vendor. III. A", "MaxTokenProbability": "III", "Perplexity": 6.27, "GroundTruth": "II. Dark web"}, {"Index": 26, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What does EXE do when the STP solver times out on a constraint query for a particular path? Choices: I. Remove a subset of the constraints and retry the query. II. Assume that the query is satisfiable and continue executing the path. III. Restart STP and retry the query, up to a limited number of retries. IV. Assume that the query is not satisfiable and stop executing the path Answer:\n", "Result": "III. Restart STP and retry the query, up to a limited number of retries.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the STP solver in the context of the figure? Choices: I. To find a path from", "MaxTokenProbability": "III", "Perplexity": 6.22, "GroundTruth": "IV. Assume that the query is not satisfiable and stop executing the path"}, {"Index": 27, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: To verify a digital signature we need the Choices: I. Receiver\u2019s Private key II. Receiver\u2019s Public key III. Sender\u2019s Public key IV. Sender\u2019s Private key Answer:\n", "Result": "III. Sender\u2019s Public key\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a hash function H(x) that takes a message x as input and produces a fixed-size output. Which of the following properties does NOT hold for a good hash function? Choices:", "MaxTokenProbability": "III", "Perplexity": 6.31, "GroundTruth": "III. Sender\u2019s Public key"}, {"Index": 28, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose you want to use fuzzing on a program to try to find memory errors; which of the following statements is true? Choices: I. Fuzzing doesn't find memory errors, it finds crashes and hangs II. Compiling the program with address sanitizer (ASAN) will make errors harder to reproduce III. You should not use a grammar-based fuzzer, because its adherence to the grammar means it will not find memory errors IV. Compiling the program with address sanitizer (ASAN) will make the source of a memory error easier to find Answer:\n", "Result": "II. Compiling the program with address sanitizer (ASAN) will make errors harder to reproduce\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A security researcher is analyzing a binary file and wants to determine if it contains any known vulnerabilities. Which of the following tools", "MaxTokenProbability": "II", "Perplexity": 5.97, "GroundTruth": "IV. Compiling the program with address sanitizer (ASAN) will make the source of a memory error easier to find"}, {"Index": 29, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Based on the paper \u201cSoK: SSL and HTTPS: Revisiting past challenges and evaluating certificates trust model enhancements\u201d, which of the following statements are false? Choices: I. Server key-pinning makes it harder for an adversary to convince a CA to mint a certificate for a site and launch an MITM attack on that site. II. OCSP stapling allows a server to prove to a browser that its certificate hasn\u2019t been revoked. III. DANE makes it difficult for an adversary to launch a SSL stripping attack. IV. Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates. Answer:\n", "Result": "IV. Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security consideration for using a web application firewall (WAF)? Choices", "MaxTokenProbability": "IV", "Perplexity": 7.59, "GroundTruth": "IV. Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates."}, {"Index": 30, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What tool can be used to perform SNMP enumeration? Choices: I. Nslookup II. DNSlookup III. IP Network Browser IV. Whois Answer:\n", "Result": "III. IP Network Browser\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a strong password? Choices: I. It must contain at least one special character II. It must contain at least one number III. It must contain at least one upper", "MaxTokenProbability": "III", "Perplexity": 6.37, "GroundTruth": "III. IP Network Browser"}, {"Index": 31, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which among them has the strongest wireless security? Choices: I. WPA2 II. WPA III. WEP IV. WPA3 Answer:\n", "Result": "I. WPA2\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a digital signature? Choices: I. It is a one-way function II. It is a two-way function III. It is a symmetric encryption algorithm IV.", "MaxTokenProbability": "I", "Perplexity": 6.53, "GroundTruth": "IV. WPA3"}, {"Index": 32, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose Unix did not provide a way of passing file descriptors between processes, but still allowed inheriting file descriptors from a parent on fork and exec. What aspects of the OKWS design would break without file descriptor passing?\n1. It would be impossible for services to get a TCP connection to the client web browser.\n2. It would be impossible for okd to run as a non-root user. Choices: I. False, False II. True, True III. True, False IV. False, True Answer:\n", "Result": "II. True, True\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201c-f\u201d option in the following command?\ncat -f file.txt Choices: I. Force interpretation of backslash escapes. II. Force interpretation of octal", "MaxTokenProbability": "II", "Perplexity": 7.07, "GroundTruth": "III. True, False"}, {"Index": 33, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Failed sessions allow brute-force attacks on access credentials. This type of attacks are done in which layer of the OSI model? Choices: I. Presentation layer II. Data-link Layer III. Physical layer IV. Session layer Answer:\n", "Result": "III. Physical layer\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a secure PRF? Choices: I. It must be deterministic II. It must be non-deterministic III. It must be computable in polynomial", "MaxTokenProbability": "III", "Perplexity": 8.09, "GroundTruth": "IV. Session layer"}, {"Index": 34, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is an authentication method? Choices: I. All of the above II. Secret question III. Biometric IV. SMS code Answer:\n", "Result": "II. Secret question\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a secure boot chain? Choices: I. To ensure that the operating system is authentic and has not been tampered with II. To ensure that the firmware is authentic and has not", "MaxTokenProbability": "II", "Perplexity": 7.14, "GroundTruth": "I. All of the above"}, {"Index": 35, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: When does a buffer overflow occur, generally speaking? Choices: I. when copying a buffer from the stack to the heap II. when a pointer is used to access memory not allocated to it III. when the program notices a buffer has filled up, and so starts to reject requests IV. when writing to a pointer that has been freed Answer:\n", "Result": "III. when a pointer is used to access memory not allocated to it\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201c-fno-strict-overflow\u201d flag in GCC? Choices: I. To prevent integer overflows II. To", "MaxTokenProbability": "III", "Perplexity": 8.99, "GroundTruth": "II. when a pointer is used to access memory not allocated to it"}, {"Index": 36, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A digital signature needs a Choices: I. All of them II. Private-key system III. Shared-key system IV. Public-key system Answer:\n", "Result": "IV. Public-key system\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a hash function H that takes a message m as input and produces a fixed-size output h. Which of the following properties does NOT hold for a good hash function? Choices: I. Pre-", "MaxTokenProbability": "IV", "Perplexity": 8.86, "GroundTruth": "IV. Public-key system"}, {"Index": 37, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A packet filter firewall filters at the Choices: I. Data link layer II. Physical Layer III. Network or transport layer IV. Application or transport Answer:\n", "Result": "III. Network or transport layer\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a digital signature? Choices: I. To authenticate the sender of a message II. To ensure the integrity of a message III. To ensure the confidentiality of a message", "MaxTokenProbability": "III", "Perplexity": 6.47, "GroundTruth": "III. Network or transport layer"}, {"Index": 38, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let I = (S,V)I=(S,V) be a MAC. Suppose S(k,m)S(k,m) is always 5 bits long. Can this MAC be secure? Choices: I. Yes, the attacker cannot generate a valid tag for any message II. Yes, the PRG is pseudorandom III. It depends on the details of the MAC IV. No, an attacker can simply guess the tag for messages Answer:\n", "Result": "III. It depends on the details of the MAC\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a hash function H(x)H(x) that takes a message xxx as input and produces a fixed-size output. Suppose an attacker can compute H(x)", "MaxTokenProbability": "III", "Perplexity": 7.92, "GroundTruth": "IV. No, an attacker can simply guess the tag for messages"}, {"Index": 39, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following deals with network intrusion detection and real-time traffic analysis? Choices: I. Snort II. Nessus III. John the Ripper IV. L0phtCrack Answer:\n", "Result": "I. Snort\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201c-f\u201d option in the \u201cstrings\u201d command? Choices: I. To display only the first 10 lines of the output II. To display only the last 1", "MaxTokenProbability": "I", "Perplexity": 6.65, "GroundTruth": "I. Snort"}, {"Index": 40, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The Message condentiality or privacy means that the sender and the receiver expect Choices: I. Condentiality II. Authentication III. Integrity IV. Nonrepudiation Answer:\n", "Result": "I. Condentiality\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The purpose of a digital signature is to: Choices: I. Authenticate the sender II. Authenticate the receiver III. Ensure the integrity of the message IV. Ensure the confidentiality", "MaxTokenProbability": "I", "Perplexity": 7.76, "GroundTruth": "I. Condentiality"}, {"Index": 41, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: When a wireless user authenticates to any AP, both of them go in the course of four-step authentication progression which is called _____________ Choices: I. wireless handshaking II. 4-way handshake III. 4-way connection IV. AP-handshaking Answer:\n", "Result": "III. 4-way connection\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the nonce in the four-way handshake? Choices: I. To prevent replay attacks II. To provide a random number for the client to use in the", "MaxTokenProbability": "III", "Perplexity": 8.92, "GroundTruth": "II. 4-way handshake"}, {"Index": 42, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Message authentication is a service beyond Choices: I. Message Condentiality II. Message Splashing III. Message Integrity IV. Message Sending Answer:\n", "Result": "III. Message Integrity\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A company has a policy that all sensitive data must be encrypted before it is transmitted over the internet. Which of the following would be the most effective way to enforce this policy? Choices: I. Use", "MaxTokenProbability": "III", "Perplexity": 8.63, "GroundTruth": "III. Message Integrity"}, {"Index": 43, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following are most vulnerable to injection attacks? Choices: I. SQL queries based on user input II. Network communications III. Session IDs IV. Registry keys Answer:\n", "Result": "I. SQL queries based on user input\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the SSL/TLS protocol? Choices: I. To provide secure communication between a client and a server II. To provide secure communication between two servers III. To provide", "MaxTokenProbability": "I", "Perplexity": 7.46, "GroundTruth": "I. SQL queries based on user input"}, {"Index": 44, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replacing bytes sent by a client with bytes of the attacker\u2019s own choosing.\n2. An attacker reading the plaintext bytes sent by a client. Choices: I. True, False II. True, True III. False, False IV. False, True Answer:\n", "Result": "III. False, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a firewall? Choices: I. To protect against malware II. To protect against unauthorized access to the network III. To protect against denial of service attacks IV.", "MaxTokenProbability": "III", "Perplexity": 8.03, "GroundTruth": "II. True, True"}, {"Index": 45, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a Wireless traffic Sniffing tool? Choices: I. BurpSuit II. Nessus III. Maltego IV. Wireshark Answer:\n", "Result": "IV. Wireshark\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a vulnerability scanner? Choices: I. Nessus II. BurpSuit III. Maltego IV. Wireshark Answer:\nI. N", "MaxTokenProbability": "IV", "Perplexity": 6.41, "GroundTruth": "IV. Wireshark"}, {"Index": 46, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A ___________ is a method in which a computer security mechanism is bypassed untraceable for accessing the computer or its information. Choices: I. clickjacking II. front-door III. key-logging IV. backdoor Answer:\n", "Result": "IV. backdoor\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201cpadding\u201d field in an SSL/TLS record? Choices: I. To provide additional data for the receiver to perform integrity checking. II. To provide additional data for the sender", "MaxTokenProbability": "IV", "Perplexity": 8.14, "GroundTruth": "IV. backdoor"}, {"Index": 47, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a block cipher operating mode? Choices: I. CBF II. ECB III. CBC IV. CFB Answer:\n", "Result": "IV. CFB\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a hash function H(x) that takes a message x as input and produces a fixed-size output. Which of the following properties does NOT hold for a good hash function? Choices: I. Pre-", "MaxTokenProbability": "IV", "Perplexity": 6.46, "GroundTruth": "I. CBF"}, {"Index": 48, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a web proxy? Choices: I. An agent that makes decisions on the client's behalf when interacting with web applications II. A simulator for the web, for use when off-line III. A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server IV. A piece of software that makes a web application look like a standalone application, making it easier to test Answer:\n", "Result": "IV. A piece of software that makes a web application look like a standalone application, making it easier to test\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"Content-Security-Policy\" header in web applications? Choices: I. To specify", "MaxTokenProbability": "IV", "Perplexity": 7.14, "GroundTruth": "III. A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server"}, {"Index": 49, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Buffer-overflow may remain as a bug in apps if __________ are not done fully. Choices: I. boundary checks II. boundary hacks III. buffer checks IV. memory checks Answer:\n", "Result": "I. boundary checks\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider the following code: int x = y + z; if (x > 10) { System.out.println(\"x is greater than 10\"); } Choices: I. This code is", "MaxTokenProbability": "I", "Perplexity": 6.59, "GroundTruth": "I. boundary checks"}, {"Index": 50, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Applications developed by programming languages like ____ and ______ have this common buffer-overflow error. Choices: I. C, Ruby II. Tcl, C# III. C, C++ IV. Python, Ruby Answer:\n", "Result": "III. C, C++\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"chroot\" system call? Choices: I. To change the root directory of a process II. To change the current working directory of a process III. To change the", "MaxTokenProbability": "III", "Perplexity": 7.48, "GroundTruth": "III. C, C++"}, {"Index": 51, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Encryption and decryption provide secrecy, or condentiality, but not Choices: I. Integrity II. All of the above III. Privacy IV. Authentication Answer:\n", "Result": "III. Privacy", "MaxTokenProbability": "III", "Perplexity": 7.38, "GroundTruth": "I. Integrity"}, {"Index": 52, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A/an ___________ is a program that steals your logins & passwords for instant messaging applications. Choices: I. IM \u2013 Trojans II. Ransom Trojan III. Backdoor Trojans IV. Trojan-Downloader Answer:\n", "Result": "I. IM \u2013 Trojans\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"\u2013\" in the following command? Choices: I. To indicate that the command should be run in the background II. To indicate that the command should be run with", "MaxTokenProbability": "I", "Perplexity": 6.39, "GroundTruth": "I. IM \u2013 Trojans"}, {"Index": 53, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The sub key length at each round of DES is__________ Choices: I. 56 II. 64 III. 48 IV. 32 Answer:\n", "Result": "III. 48\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201cnonce\u201d in the OAuth 2.0 authorization flow? Choices: I. To authenticate the client application II. To authenticate the resource server III. To", "MaxTokenProbability": "III", "Perplexity": 6.56, "GroundTruth": "I. 56"}, {"Index": 54, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is true of mutation-based fuzzing? Choices: I. Each input is mutation that follows a given grammar II. It only makes sense for file-based fuzzing, not network-based fuzzing III. It works by making small mutations to the target program to induce faults IV. It generates each different input by modifying a prior input Answer:\n", "Result": "III. It works by making small mutations to the target program to induce faults\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a denial-of-service (DoS) attack? Choices: I. The attacker attempts", "MaxTokenProbability": "III", "Perplexity": 6.57, "GroundTruth": "IV. It generates each different input by modifying a prior input"}, {"Index": 55, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What are the types of scanning? Choices: I. Server, client, and network II. Passive, active, and interactive III. Network, vulnerability, and port  IV. Port, network, and services Answer:\n", "Result": "III. Network, vulnerability, and port\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A company has a policy that all employees must use strong passwords. Which of the following is the best way to enforce this policy? Choices: I. Use a password filter to reject any", "MaxTokenProbability": "III", "Perplexity": 5.63, "GroundTruth": "III. Network, vulnerability, and port "}, {"Index": 56, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A sender must not be able to deny sending a message that was sent, is known as Choices: I. Message Nonrepudiation II. Message Integrity III. Message Sending IV. Message Condentiality Answer:\n", "Result": "I. Message Nonrepudiation\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A protocol that uses a symmetric key for both encryption and decryption is called Choices: I. Symmetric encryption II. Asymmetric encryption III. Hash function IV. Digital signature Answer:\nI", "MaxTokenProbability": "I", "Perplexity": 6.0, "GroundTruth": "I. Message Nonrepudiation"}, {"Index": 57, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A proxy rewall lters at the Choices: I. Data link layer II. Physical layer III. Network layer IV. Application layer Answer:\n", "Result": "III. Network layer\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a firewall? Choices: I. To protect the internal network from the external network II. To protect the external network from the internal network III. To provide network address translation IV. To provide", "MaxTokenProbability": "III", "Perplexity": 7.76, "GroundTruth": "IV. Application layer"}, {"Index": 58, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Encapsulating Security Payload (ESP) belongs to which Internet Security Protocol? Choices: I. Secure Http Protocol II. Transport Layer Security Protocol III. Secure IP Protocol IV. Secure Socket Layer Protocol Answer:\n", "Result": "III. Secure IP Protocol\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a digital signature? Choices: I. It is a cryptographic mechanism to authenticate the source of a message II. It is a cryptographic mechanism to ensure", "MaxTokenProbability": "III", "Perplexity": 7.86, "GroundTruth": "III. Secure IP Protocol"}, {"Index": 59, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A special tool is necessary for entering the network which is _______________ that helps the anonymous internet users to access into the Tor\u2019s network and use various Tor services. Choices: I. Tor browser II. Firefox III. Opera browser IV. Chrome Answer:\n", "Result": "I. Tor browser\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the following command in Linux? \u201csudo chmod 777 /path/to/file\u201d Choices: I. To give read and execute permissions to the owner of the file.", "MaxTokenProbability": "I", "Perplexity": 7.51, "GroundTruth": "I. Tor browser"}, {"Index": 60, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: How does a buffer overflow on the stack facilitate running attacker-injected code? Choices: I. By writing directly to the instruction pointer register the address of the code II. By changing the name of the running executable, stored on the stack III. By writing directly to %eax the address of the code IV. By overwriting the return address to point to the location of that code Answer:\n", "Result": "I. By writing directly to the instruction pointer register the address of the code\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"return\" statement in C? Choices: I. To exit the current function II. To jump to the beginning of the function", "MaxTokenProbability": "I", "Perplexity": 5.79, "GroundTruth": "IV. By overwriting the return address to point to the location of that code"}, {"Index": 61, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The digest created by a hash function is normally called a Choices: I. Message authentication control II. Modication detection code (MDC) III. Modify authentication connection IV. Message authentication cipher Answer:\n", "Result": "III. Modify authentication connection\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a digital signature? Choices: I. It is a symmetric key algorithm II. It is a public key algorithm III. It is a one-way function IV.", "MaxTokenProbability": "III", "Perplexity": 7.92, "GroundTruth": "II. Modication detection code (MDC)"}, {"Index": 62, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let F: K \\times R \\to MF:K\u00d7R\u2192M be a secure PRF. For m \\in Mm\u2208M define E(k,m) = \\big[ r \\gets R,\\ \\text{output } \\big(r,\\ F(k,r) \\oplus m\\big)\\ \\big]E(k,m)=[r\u2190R, output (r, F(k,r)\u2295m) ] Is EE symantically secure under CPA? Choices: I. Yes, but only if R is large enough so r never repeats (w.h.p) II. No, there is always a CPA attack on this system III. Yes, whenever F is a secure PRF IV. It depends on what F is used Answer:\n", "Result": "II. No, there is always a CPA attack on this system\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the main advantage of using a secure PRF in a cryptographic protocol? Choices: I. It provides a secure key exchange II. It provides a secure", "MaxTokenProbability": "II", "Perplexity": 7.84, "GroundTruth": "I. Yes, but only if R is large enough so r never repeats (w.h.p)"}, {"Index": 63, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Old operating systems like _______ and NT-based systems have buffer-overflow attack a common vulnerability. Choices: I. IOS12 II. UNIX III. Windows 7 IV. Chrome Answer:\n", "Result": "III. Windows 7\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a digital signature? Choices: I. It can be used to verify the authenticity of a message. II. It can be used to verify the integrity of a message", "MaxTokenProbability": "III", "Perplexity": 6.61, "GroundTruth": "II. UNIX"}, {"Index": 64, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a replay attack? Choices: I. An attack that continuously repeats, probing for a weakness II. When the attacker replies to a message sent to it by the system III. The attacker resends a captured message, and the site accept its and responds in the attacker's favor IV. An attack that uses the system's own messages and so cannot be defended against Answer:\n", "Result": "III. The attacker resends a captured message, and the site accepts its and responds in the attacker's favor\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a man-in-the-middle attack? Choices: I. An attack where the attack", "MaxTokenProbability": "III", "Perplexity": 8.02, "GroundTruth": "III. The attacker resends a captured message, and the site accept its and responds in the attacker's favor"}, {"Index": 65, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| A U2F USB dongle prevents malware on the user\u2019s computer from stealing the user\u2019s second factor to authenticate as that user even when the user\u2019s computer is turned off. Statement 2| A server using U2F can reliably determine that the user who is attempting to login is indeed behind the computer that sent the login request. Choices: I. False, False II. True, True III. True, False IV. False, True Answer:\n", "Result": "III. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a secure multi-party computation protocol? Choices: I. The protocol must be zero-knowledge. II. The protocol must be homomorphic. III. The protocol", "MaxTokenProbability": "III", "Perplexity": 7.07, "GroundTruth": "III. True, False"}, {"Index": 66, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ____________________ is the anticipation of unauthorized access or break to computers or data by means of wireless networks. Choices: I. Wireless security II. Wired device apps III. Wired Security IV. Wireless access Answer:\n", "Result": "I. Wireless security\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A company has a policy that all employees must use strong passwords, and the company enforces this policy by requiring employees to change their passwords every 90 days. This policy is an example of: Choices", "MaxTokenProbability": "I", "Perplexity": 6.16, "GroundTruth": "I. Wireless security"}, {"Index": 67, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following are benefits of penetration testing? Choices: I. Full evidence of security: a clean test means a secure system II. Makes an adversarial neural network converge more quickly III. Compositionality of security properties means tested components are secure even if others change IV. Results are often reproducible Answer:\n", "Result": "IV. Results are often reproducible\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a secure multi-party computation (MPC) protocol for computing a function f(x,y)f(x,y) on private inputs x,yx,y. The protocol has", "MaxTokenProbability": "IV", "Perplexity": 7.72, "GroundTruth": "IV. Results are often reproducible"}, {"Index": 68, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: 1. _________ framework made cracking of vulnerabilities easy like point and click. Choices: I. Ettercap II. .Net III. Zeus IV. Metasploit Answer:\n", "Result": "IV. Metasploit\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"challenge-response\" mechanism in authentication protocols? Choices: I. To verify the user's identity II. To verify the server's identity III. To", "MaxTokenProbability": "IV", "Perplexity": 7.44, "GroundTruth": "IV. Metasploit"}, {"Index": 69, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: You are given a message (m) and its OTP encryption (c). Can you compute the OTP key from m and c ? Choices: I. Yes, the key is k = m xor m. II. I can only compute half the bits of the key. III. Yes, the key is k = m xor c. IV. No, I cannot compute the key. Answer:\n", "Result": "III. Yes, the key is k = m xor c.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"inner product\" in the Diffie-Hellman key exchange? Choices: I. To allow the client and server to", "MaxTokenProbability": "III", "Perplexity": 6.14, "GroundTruth": "III. Yes, the key is k = m xor c."}, {"Index": 70, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR and MR\n2. CR Choices: I. True, True II. False, False III. True, False IV. False, True Answer:\n", "Result": "III. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider the following statement: \u201cA secure PRP from a secure PRG can be built using the Luby-Rackoff theorem.\u201d Choices: I. True II. False III. It depends on the", "MaxTokenProbability": "III", "Perplexity": 8.48, "GroundTruth": "I. True, True"}, {"Index": 71, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: When the data must arrive at the receiver exactly as they were sent, its called Choices: I. Message Sending II. Message Condentiality III. Message Integrity IV. Message Splashing Answer:\n", "Result": "III. Message Integrity\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a system that uses a password-authenticated key exchange protocol to establish a secure connection between two parties. Which of the following attacks can the system protect against? Choices: I. Man-in-the", "MaxTokenProbability": "III", "Perplexity": 6.95, "GroundTruth": "III. Message Integrity"}, {"Index": 72, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the difference between a direct leak and a side channel? Choices: I. A direct leak comes via the software system's intended interaction mechanism, where as a side channel leak comes from measurements of other system features, like timing, power usage, or space usage II. A direct leak is one that is intentional, rather than by unintentional III. There is no difference IV. A direct leak creates a denial of service by failing to free memory, while a channel frees memory as a side effect Answer:\n", "Result": "I. A direct leak comes via the software system's intended interaction mechanism, where as a side channel leak comes from measurements of other system features, like timing, power usage, or space usage\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a", "MaxTokenProbability": "I", "Perplexity": 6.93, "GroundTruth": "I. A direct leak comes via the software system's intended interaction mechanism, where as a side channel leak comes from measurements of other system features, like timing, power usage, or space usage"}, {"Index": 73, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A session symmetric key between two parties is used Choices: I. Twice II. Conditions dependant III. Multiple times IV. Only once Answer:\n", "Result": "IV. Only once\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A secure communication protocol should be designed to prevent Choices: I. Eavesdropping II. Replay attacks III. Man-in-the-middle attacks IV. All of the above Answer:\nIV.", "MaxTokenProbability": "IV", "Perplexity": 8.64, "GroundTruth": "IV. Only once"}, {"Index": 74, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a nop sled Choices: I. It is another name for a branch instruction at the end of sequence of nops II. It is an anonymous version of a mop sled III. It is a sequence of nops preceding injected shellcode, useful when the return address is unknown IV. It is a method of removing zero bytes from shellcode Answer:\n", "Result": "II. It is another name for a branch instruction at the end of sequence of nops\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"return address\" in a shellcode Choices: I. It specifies the location of the next instruction to be", "MaxTokenProbability": "II", "Perplexity": 7.81, "GroundTruth": "III. It is a sequence of nops preceding injected shellcode, useful when the return address is unknown"}, {"Index": 75, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which Nmap scan is does not completely open a TCP connection? Choices: I. XMAS tree scan II. ACK scan III. SYN stealth scan IV. TCP connect Answer:\n", "Result": "III. SYN stealth scan\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"ping\" command in network administration? Choices: I. To test if a network is reachable from a specific host II. To test if a specific host is reach", "MaxTokenProbability": "III", "Perplexity": 5.76, "GroundTruth": "III. SYN stealth scan"}, {"Index": 76, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Based on the paper \u201cClick Trajectories: End-to-End Analysis of the Spam Value Chain\u201d, which of the following statements are true? \u201cSpammers\u201d here refer to operators of various parts of the \u201cspam value chain.\u201d Choices: I. B and C II. There is a high cost for spammers to switch acquiring banks. III. Spammers run their spam-advertised web sites on compromised user machines that are part of a botnet. IV. Spammers need to register domain names in order for their spam-based advertisements to be effective. Answer:\n", "Result": "I. B and C\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201cspam value chain\u201d in the paper \u201cClick Trajectories: End-to-End Analysis of the Spam Value Chain\u201d? Choices: I. To describe", "MaxTokenProbability": "I", "Perplexity": 6.33, "GroundTruth": "I. B and C"}, {"Index": 77, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In a _____________ attack, the extra data that holds some specific instructions in the memory for actions is projected by a cyber-criminal or penetration tester to crack the system. Choices: I. Buffer-overflow II. Phishing III. Clickjacking IV. MiTM Answer:\n", "Result": "I. Buffer-overflow\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A company has a policy that all employees must use strong passwords for their accounts. Which of the following is the MOST effective way to ensure that employees comply with this policy? Choices: I. Require", "MaxTokenProbability": "I", "Perplexity": 7.57, "GroundTruth": "I. Buffer-overflow"}, {"Index": 78, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: _______________ is a popular tool used for network analysis in multiprotocol diverse network. Choices: I. EtterPeak II. Snort III. SuperScan IV. Burp Suit Answer:\n", "Result": "III. SuperScan\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"root\" user in Linux? Choices: I. To allow the user to access all files and directories on the system II. To allow the user to execute all commands on the system", "MaxTokenProbability": "III", "Perplexity": 7.77, "GroundTruth": "I. EtterPeak"}, {"Index": 79, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ___________________ is alike as that of Access Point (AP) from 802.11, & the mobile operators uses it for offering signal coverage. Choices: I. Base Transmitter Station II. Base Signal Station III. Transceiver Station IV. Base Transceiver Station Answer:\n", "Result": "IV. Base Transceiver Station\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nmap\" command? Choices: I. To map the network and find hosts and services II. To scan for vulnerabilities in a network III. To create a", "MaxTokenProbability": "IV", "Perplexity": 6.99, "GroundTruth": "IV. Base Transceiver Station"}, {"Index": 80, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A __________ is a sequential segment of the memory location that is allocated for containing some data such as a character string or an array of integers. Choices: I. stack II. queue III. external storage IV. buffer Answer:\n", "Result": "III. external storage\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A __________ is a type of attack in which an attacker attempts to trick a user into revealing sensitive information such as passwords or credit card numbers. Choices: I. Phishing II. Spear ph", "MaxTokenProbability": "III", "Perplexity": 7.05, "GroundTruth": "IV. buffer"}, {"Index": 81, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which form of encryption does WPA use? Choices: I. TKIP II. LEAP III. Shared key IV. AES Answer:\n", "Result": "IV. AES\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A company has a policy that all sensitive data must be encrypted when stored on portable devices. Which of the following is the most appropriate encryption algorithm for this purpose? Choices: I. AES-256", "MaxTokenProbability": "IV", "Perplexity": 7.12, "GroundTruth": "I. TKIP"}, {"Index": 82, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let suppose a search box of an application can take at most 200 words, and you\u2019ve inserted more than that and pressed the search button; the system crashes. Usually this is because of limited __________ Choices: I. buffer II. local storage III. external storage IV. processing power Answer:\n", "Result": "I. buffer\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201cContent-Security-Policy\u201d header in a web application? Choices: I. To specify the types of scripts that can be executed in a web page. II. To specify the types", "MaxTokenProbability": "I", "Perplexity": 8.23, "GroundTruth": "I. buffer"}, {"Index": 83, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ___________________ began to show up few years back on wireless access points as a new way of adding or connecting new devices. Choices: I. WPS II. WPA III. WEP IV. WPA2 Answer:\n", "Result": "I. WPS\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The following is a characteristic of a ________________. Choices: I. Symmetric encryption II. Asymmetric encryption III. Hash function IV. Digital signature Answer:\nIII. Hash function\n\nQuestion", "MaxTokenProbability": "I", "Perplexity": 6.81, "GroundTruth": "I. WPS"}, {"Index": 84, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What are the port states determined by Nmap? Choices: I. Active, closed, unused II. Open, filtered, unfiltered III. Open, half-open, closed  IV. Active, inactive, standby Answer:\n", "Result": "III. Open, filtered, unfiltered\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nmap -sS\" command? Choices: I. To scan a target host with the SYN scan technique II. To scan a target host with", "MaxTokenProbability": "III", "Perplexity": 6.01, "GroundTruth": "II. Open, filtered, unfiltered"}, {"Index": 85, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which among the following is the least strong security encryption standard? Choices: I. WEP II. WPA2 III. WPA IV. WPA3 Answer:\n", "Result": "III. WPA\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" in OAuth 2.0? Choices: I. To prevent replay attacks II. To authenticate the client application III. To encrypt the client secret IV", "MaxTokenProbability": "III", "Perplexity": 5.36, "GroundTruth": "I. WEP"}, {"Index": 86, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that the compiler does not know the absolute address of a local variable? Choices: I. Compiler writers are not very good at that sort of thing II. As a stack-allocated variable, it could have different addresses depending on when its containing function is called III. The size of the address depends on the architecture the program will run on IV. Programs are not allowed to reference memory using absolute addresses Answer:\n", "Result": "III. The size of the address depends on the architecture the program will run on\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201cvolatile\u201d keyword in C? Choices: I. To indicate that a variable is a pointer to a function II.", "MaxTokenProbability": "III", "Perplexity": 6.15, "GroundTruth": "II. As a stack-allocated variable, it could have different addresses depending on when its containing function is called"}, {"Index": 87, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The stack is memory for storing Choices: I. Global variables II. Local variables III. Dynamically linked libraries IV. Program code Answer:\n", "Result": "III. Dynamically linked libraries\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A secure communication protocol should be designed to protect against Choices: I. Eavesdropping II. Replay attacks III. Man-in-the-middle attacks IV. All of the above Answer:", "MaxTokenProbability": "III", "Perplexity": 6.53, "GroundTruth": "II. Local variables"}, {"Index": 88, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can a stream cipher have perfect secrecy? Choices: I. No, since the key is shorter than the message II. No, there are no ciphers with perfect secrecy III. Yes, if the PRG is really \u201csecure\u201d IV. Yes, every cipher has perfect secrecy Answer:\n", "Result": "III. No, there are no ciphers with perfect secrecy\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201cnonce\u201d in OCSP stapling? Choices: I. To prove that the client has a valid certificate II.", "MaxTokenProbability": "III", "Perplexity": 7.01, "GroundTruth": "I. No, since the key is shorter than the message"}, {"Index": 89, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authorization aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Flag the user if he/she misbehaves III. Determine if the user is an attacker IV. Determine who the user is Answer:\n", "Result": "II. Flag the user if he/she misbehaves\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider the following protocol: Alice wants to send a message to Bob, but she wants to ensure that only Bob can read it. She uses a public key to encrypt the message", "MaxTokenProbability": "II", "Perplexity": 5.54, "GroundTruth": "I. Restrict what operations/data the user can access"}, {"Index": 90, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The message must be encrypted at the sender site and decrypted at the Choices: I. Site II. Sender Site III. Conferencing IV. Receiver site Answer:\n", "Result": "III. Conferencing\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the padding in the SSL/TLS handshake? Choices: I. To provide additional data for the client to process II. To provide additional data for the server to process III", "MaxTokenProbability": "III", "Perplexity": 7.51, "GroundTruth": "IV. Receiver site"}, {"Index": 91, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A _________________ may be a hidden part of a program, a separate infected program a Trojan in disguise of an executable or code in the firmware of any system\u2019s hardware. Choices: I. virus II. crypter III. backdoor IV. key-logger Answer:\n", "Result": "I. virus\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a firewall? Choices: I. To protect against malware and unauthorized access II. To provide a secure connection between two endpoints III. To encrypt data and prevent interception IV", "MaxTokenProbability": "I", "Perplexity": 7.05, "GroundTruth": "III. backdoor"}, {"Index": 92, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: How is IP address spoofing detected? Choices: I. Identify all TCP sessions that are initiated but does not complete successfully II. Comparing the TTL values of the actual and spoofed addresses III. Installing and configuring a IDS that can read the IP header IV. Implementing a firewall to the network Answer:\n", "Result": "III. Comparing the TTL values of the actual and spoofed addresses\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the Diffie-Hellman key exchange? Choices: I. To provide a shared secret between two parties II. To", "MaxTokenProbability": "III", "Perplexity": 6.09, "GroundTruth": "II. Comparing the TTL values of the actual and spoofed addresses"}, {"Index": 93, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not an example of presentation layer issues? Choices: I. Cryptographic flaws in the system may get exploited to evade privacy II. Poor handling of unexpected input can lead to the execution of arbitrary instructions III. Weak or non-existent authentication mechanisms IV. Unintentional or ill-directed use of superficially supplied input Answer:\n", "Result": "IV. Unintentional or ill-directed use of superficially supplied input\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider the following scenario: Alice wants to send an encrypted message to Bob. She uses a public key to encrypt the message, and then sends it to", "MaxTokenProbability": "IV", "Perplexity": 7.21, "GroundTruth": "III. Weak or non-existent authentication mechanisms"}, {"Index": 94, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose Unix did not provide a way of passing file descriptors between processes, but still allowed inheriting file descriptors from a parent on fork and exec. What aspects of the OKWS design would break without file descriptor passing?\n1. It would be impossible for services to send messages to oklogd.\n2. It would be impossible for services to get a TCP connection to a database proxy. Choices: I. True, False II. False, False III. True, True IV. False, True Answer:\n", "Result": "III. True, True\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201c-f\u201d option in the \u201cstrings\u201d command? Choices: I. To display only the file name of the input file II. To display only the file contents of the", "MaxTokenProbability": "III", "Perplexity": 8.13, "GroundTruth": "II. False, False"}, {"Index": 95, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why would a ping sweep be used? Choices: I. To identify open ports II. To locate firewalls III. To identify live systems IV. To locate live systems Answer:\n", "Result": "I. To identify open ports\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a firewall? Choices: I. To protect against malware II. To protect against unauthorized access III. To protect against denial of service attacks IV. To protect", "MaxTokenProbability": "I", "Perplexity": 6.36, "GroundTruth": "III. To identify live systems"}, {"Index": 96, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The four Primary Security Principles related to messages are Choices: I. Confidentiality, Access Control, Integrity, Non repudiation II. Availability, Authorization, Confidentiality, Integrity III. Confidentiality, Integrity, Non repudiation and Authentication IV. Authentication, Authorization, Availability, Integrity Answer:\n", "Result": "III. Confidentiality, Integrity, Non repudiation and Authentication\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a digital signature? Choices: I. It is a digital message that is encrypted with a private key II. It", "MaxTokenProbability": "III", "Perplexity": 5.43, "GroundTruth": "III. Confidentiality, Integrity, Non repudiation and Authentication"}, {"Index": 97, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What was the first buffer overflow attack? Choices: I. Morris Worm II. Code Red III. Love Bug IV. SQL Slammer Answer:\n", "Result": "I. Morris Worm\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a firewall? Choices: I. To protect the internal network from the external network II. To protect the external network from the internal network III. To provide network address translation IV. To", "MaxTokenProbability": "I", "Perplexity": 6.73, "GroundTruth": "I. Morris Worm"}, {"Index": 98, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The ______________ can cost you money, by sending text messages from your mobile phone numbers. Choices: I. Ransom Trojan II. SMS Trojan III. IM \u2013 Trojans IV. Backdoor Trojans Answer:\n", "Result": "II. SMS Trojan\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a strong password? Choices: I. It contains only lowercase letters. II. It contains only uppercase letters. III. It contains only digits. IV.", "MaxTokenProbability": "II", "Perplexity": 6.59, "GroundTruth": "II. SMS Trojan"}, {"Index": 99, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Three of the following are classic security properties; which one is not? Choices: I. Correctness II. Integrity III. Confidentiality IV. Availability Answer:\n", "Result": "III. Confidentiality\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the primary purpose of a firewall? Choices: I. To protect the network from unauthorized access II. To protect the system from unauthorized access III. To protect the system", "MaxTokenProbability": "III", "Perplexity": 5.56, "GroundTruth": "IV. Availability"}]}}