{"card": "cards.mmlu.computer_security", "template_name": "template_35", "model_name": "meta-llama/Llama-2-13b-chat-hf", "system_format": "empty_system_format", "max_instances": 14000, "num_demos": 3, "demos_pool_size": 20, "results": {"test": [{"Index": 0, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following styles of fuzzer is more likely to explore paths covering every line of code in the following program? Choices: 1. Whitebox; 2. Blackbox; 3. Generational; 4. Mutation-based Answer:\n", "Result": "3. Generational\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider the following code: int x = 1; int y = 2; int z = x + y; int w = z + y; int v = w + x; int u = v + y", "MaxTokenProbability": "3", "Perplexity": 5.77, "GroundTruth": "1. Whitebox"}, {"Index": 1, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replaying bytes that a client sent earlier.\n2. An attacker impersonating the server. Choices: 1. True, False; 2. True, True; 3. False, True; 4. False, False Answer:\n", "Result": "2. True, True\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a hash function H(x)H(x) that is collision resistant. Which of the following statements is true? Choices: 1. H(x)H(x) is deterministic", "MaxTokenProbability": "2", "Perplexity": 6.02, "GroundTruth": "2. True, True"}, {"Index": 2, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: MIT\u2019s Kerberos KDC server has a maximum ticket lifetime of 24 hours (for most user principals). What ensures that an expired Kerberos ticket can no longer be used? Choices: 1. When a client connects to a server, the server compares the ticket\u2019s expiration time to the server\u2019s current clock, and refuses to authenticate the user if the ticket expiration time is in the past.; 2. The Kerberos server (KDC) refuses to establish new connections between clients and servers for expired tickets.; 3. When a client connects to a server, the server sets a 24-hour timer to terminate the connection, which ensures a client cannot remain connected past the ticket\u2019s maximum lifetime.; 4. When a client connects to a server, the server sends a query to the KDC to check if the ticket is still valid with respect to the KDC\u2019s clock, and refuses to authenticate the user if the KDC reports that the ticket is expired. Answer:\n", "Result": "4. When a client connects to a server, the server sends a query to the KDC to check if the ticket is still valid with respect to the KDC\u2019s clock, and refuses to authenticate the user if the KDC reports that the ticket is expired.\n\nQuestion: [question] Choices: [cho", "MaxTokenProbability": "4", "Perplexity": 5.57, "GroundTruth": "1. When a client connects to a server, the server compares the ticket\u2019s expiration time to the server\u2019s current clock, and refuses to authenticate the user if the ticket expiration time is in the past."}, {"Index": 3, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In Message Condentiality, the transmitted message must make sense to only intended Choices: 1. Receiver; 2. Modulor; 3. Sender; 4. Translator Answer:\n", "Result": "1. Receiver\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" in OAuth 2.0? Choices: 1. To prevent replay attacks; 2. To authenticate the client; 3. To authentic", "MaxTokenProbability": "1", "Perplexity": 6.79, "GroundTruth": "1. Receiver"}, {"Index": 4, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a remote Trojan? Choices: 1. BankerA; 2. Troya; 3. Game-Troj; 4. DaCryptic Answer:\n", "Result": "1. BankerA\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the Open Web Application Security Project (OWASP)? Choices: 1. To provide a comprehensive framework for web application security; 2. To provide a comprehensive framework for", "MaxTokenProbability": "1", "Perplexity": 6.54, "GroundTruth": "2. Troya"}, {"Index": 5, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ______________ is a widespread app\u2019s coding mistake made by developers which could be exploited by an attacker for gaining access or malfunctioning your system. Choices: 1. Memory leakage; 2. Inefficient programming; 3. Less processing power; 4. Buffer-overrun Answer:\n", "Result": "4. Buffer-overrun\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the secure boot chain in the paper? Choices: 1. To prevent malware from running on the device; 2. To ensure that the device boots only secure software", "MaxTokenProbability": "4", "Perplexity": 7.34, "GroundTruth": "4. Buffer-overrun"}, {"Index": 6, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider the paper Native Client: A Sandbox for Portable, Untrusted x86 Native Code by Yee et al. Ben Bitdiddle notes that NaCl uses Intel x86 segmentation to ensure that the sandboxed module does not read or write memory outside its own data area, and does not execute instructions outside its own code. Ben thinks that with these restrictions alone, executing the sandboxed module must be safe; that is, he thinks validation is not needed. Ben is wrong. Circle the types of x86 machine instructions that the validator always forbids in sandboxed code. Please ignore trampoline and springboard code. Choices: 1. all indirect jumps (via an address in a register or variable); 2. all loads or stores to addresses that are not 0 mod 32; 3. all instructions that modify segment state; 4. all indirect loads or stores (via an address in a register or variable) Answer:\n", "Result": "3. all instructions that modify segment state\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201cpadding\u201d field in an SSL/TLS record? Choices: 1. To provide additional data for the receiver to process; 2. To ensure that", "MaxTokenProbability": "3", "Perplexity": 8.96, "GroundTruth": "3. all instructions that modify segment state"}, {"Index": 7, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ____________ is also a part of darknet that is employed for transferring files anonymously. Choices: 1. Internet; 2. ARPANET; 3. Freenet; 4. Stuxnet Answer:\n", "Result": "3. Freenet\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The following is a characteristic of a ________________. Choices: 1. Public Key; 2. Private Key; 3. Certificate; 4. Signature Answer:\n2.", "MaxTokenProbability": "3", "Perplexity": 6.98, "GroundTruth": "3. Freenet"}, {"Index": 8, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why apps developed in languages like C, C++ is prone to Buffer-overflow? Choices: 1. No processing power check; 2. No string boundary checks in predefined functions; 3. No storage check in the external memory; 4. No database check Answer:\n", "Result": "2. No string boundary checks in predefined functions\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the secure boot chain? Choices: 1. To ensure that the operating system is authentic; 2. To ensure that the operating system is not tamper", "MaxTokenProbability": "2", "Perplexity": 8.03, "GroundTruth": "2. No string boundary checks in predefined functions"}, {"Index": 9, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Man in the middle attack can endanger the security of Diffie Hellman method if two parties are not Choices: 1. Authenticated; 2. Shared; 3. Submitted; 4. Joined Answer:\n", "Result": "2. Shared\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the nonce in the OAuth 2.0 flow? Choices: 1. To prevent replay attacks; 2. To authenticate the client; 3. To encrypt the", "MaxTokenProbability": "2", "Perplexity": 5.8, "GroundTruth": "1. Authenticated"}, {"Index": 10, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: An integer overflow occurs when Choices: 1. an integer expression's result \"wraps around\"; instead of creating a very large number, a very small (or negative) number ends up getting created; 2. an integer is used to access a buffer outside of the buffer's bounds; 3. an integer is used as if it was a pointer; 4. there is no more space to hold integers in the program Answer:\n", "Result": "1. an integer expression's result \"wraps around\"\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"padding\" field in an SSL/TLS record? Choices: 1. To provide additional data for the encryption algorithm; ", "MaxTokenProbability": "1", "Perplexity": 7.21, "GroundTruth": "4. there is no more space to hold integers in the program"}, {"Index": 11, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let HH be a Merkle-Damgard hash function is H:X^{\\leq L} \\to TH:X^\u2264L  \u2192T. Construct a MAC from this HH as follows: \\ \\ S(k,m) = H(k \\| m)  S(k,m)=H(k\u2225m). This mac is insecure because: Choices: 1. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| \\text{PB} \\| w)H(k\u2225m\u2225PB\u2225w) for any ww; 2. Anyone can compute H( k \\| m )H(k\u2225m) for any mm; 3. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| w)H(k\u2225m\u2225w) for any ww; 4. Given H(k \\| m)H(k\u2225m) anyone can compute H(w \\| k \\| m \\| \\text{PB})H(w\u2225k\u2225m\u2225PB) for any ww Answer:\n", "Result": "3. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| w)H(k\u2225m\u2225w) for any ww\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" in", "MaxTokenProbability": "3", "Perplexity": 5.95, "GroundTruth": "1. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| \\text{PB} \\| w)H(k\u2225m\u2225PB\u2225w) for any ww"}, {"Index": 12, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose that Alice and Bob sent confidential text messages to one another last month through an encrypted messaging system. Alice and Bob are worried that an adversary might compromise one of their computers today, while they are taking the 6.858 final exam, and would then be able to decrypt those messages. Which of the following security properties can address Alice and Bob\u2019s concern? Choices: 1. Backward secrecy.; 2. Authentication.; 3. Forward secrecy; 4. Deniability. Answer:\n", "Result": "3. Forward secrecy\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a secure communication system that uses a shared secret key. Which of the following attacks can be prevented by using a shared secret key? Choices: 1. Man-in-the-middle attack", "MaxTokenProbability": "3", "Perplexity": 6.64, "GroundTruth": "3. Forward secrecy"}, {"Index": 13, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The AH Protocol provides source authentication and data integrity, but not Choices: 1. Nonrepudiation; 2. Both A & C; 3. Integrity; 4. Privacy Answer:\n", "Result": "2. Both A & C\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the padding in the AES-GCM mode of operation? Choices: 1. To provide nonce functionality; 2. To provide randomization of the plaintext;", "MaxTokenProbability": "2", "Perplexity": 6.79, "GroundTruth": "4. Privacy"}, {"Index": 14, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a security exploit? Choices: 1. Authentication; 2. SQL Injection; 3. Eavesdropping; 4. Cross-site scripting Answer:\n", "Result": "1. Authentication\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security benefit of using a password manager? Choices: 1. Reduced risk of phishing attacks; 2. Improved password security; 3. Increased risk", "MaxTokenProbability": "1", "Perplexity": 4.94, "GroundTruth": "1. Authentication"}, {"Index": 15, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: _______________ is the central node of 802.11 wireless operations. Choices: 1. Access Point; 2. WPA; 3. WAP; 4. Access Port Answer:\n", "Result": "1. Access Point\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the Diffie-Hellman key exchange? Choices: 1. To allow a client to authenticate a server; 2. To allow a server to authenticate a client", "MaxTokenProbability": "1", "Perplexity": 5.96, "GroundTruth": "1. Access Point"}, {"Index": 16, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In MD-5 the length of the message digest is Choices: 1. 64; 2. 128; 3. 160; 4. 54 Answer:\n", "Result": "3. 160\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a digital signature? Choices: 1. To authenticate the sender; 2. To authenticate the receiver; 3. To ensure the integrity of the message; ", "MaxTokenProbability": "3", "Perplexity": 5.67, "GroundTruth": "2. 128"}, {"Index": 17, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is Nmap? Choices: 1. It is a network fuzz testing tool; 2. It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might be at those addresses, based on the responses; 3. It is a map of the Internet; 4. It is a suite of tools for scripting attacks: probe, construct, encode, inject, wait for response Answer:\n", "Result": "2. It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might be at those addresses, based on the responses.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201c-sS\u201d", "MaxTokenProbability": "2", "Perplexity": 6.89, "GroundTruth": "2. It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might be at those addresses, based on the responses"}, {"Index": 18, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: How do you prevent SQL injection? Choices: 1. Interrupt requests; 2. All of the above; 3. Escape queries; 4. Merge tables Answer:\n", "Result": "3. Escape queries\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security consideration for a web application that uses a web-based interface? Choices: 1. The web application should use a secure communication protocol such as HTTPS; 2.", "MaxTokenProbability": "3", "Perplexity": 7.06, "GroundTruth": "3. Escape queries"}, {"Index": 19, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What does it mean to \"be stealthy\" during a penetration test? Choices: 1. Performing penetration testing without the target organization knowing; 2. Taking care to avoid activities during a penetration test that might attract attention, e.g., by operators or IDS services; 3. Using encryption during tests to make the source of attacks impossible to determine; 4. Performing the tests from an undisclosed location Answer:\n", "Result": "1. Performing penetration testing without the target organization knowing\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a penetration test? Choices: 1. To identify vulnerabilities in a system; 2. To determine if an attacker can", "MaxTokenProbability": "1", "Perplexity": 5.66, "GroundTruth": "2. Taking care to avoid activities during a penetration test that might attract attention, e.g., by operators or IDS services"}, {"Index": 20, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a transport layer vulnerability? Choices: 1. Unauthorized network access; 2. Mishandling of undefined, poorly defined variables; 3. The Vulnerability that allows \u201cfingerprinting\u201d & other enumeration of host information; 4. Overloading of transport-layer mechanisms Answer:\n", "Result": "1. Unauthorized network access\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a denial of service (DoS) attack? Choices: 1. The attacker attempts to steal or modify sensitive data; 2. The", "MaxTokenProbability": "1", "Perplexity": 6.16, "GroundTruth": "1. Unauthorized network access"}, {"Index": 21, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In Brumley and Boneh\u2019s paper on side-channel attacks, why does blinding prevent the timing attack from working? Choices: 1. Blinding changes the p and q primes that are used, so an adversary cannot learn the server\u2019s true p and q values.; 2. Blinding adds a random amount of time to the decryption due to the multiplication and division by the blinding random value r, which obscures the timing differences used in the attack.; 3. Blinding randomizes the ciphertext being decrypted, thus obscuring the correlation between an adversary\u2019s input and the timing differences.; 4. Blinding prevents the server from using the CRT optimization, which is essential to the timing attack. Answer:\n", "Result": "2. Blinding adds a random amount of time to the decryption due to the multiplication and division by the blinding random value r, which obscures the timing differences used in the attack.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a hash function H(x) that", "MaxTokenProbability": "2", "Perplexity": 6.62, "GroundTruth": "3. Blinding randomizes the ciphertext being decrypted, thus obscuring the correlation between an adversary\u2019s input and the timing differences."}, {"Index": 22, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. RS and KM\n2. RS and MR Choices: 1. True, True; 2. True, False; 3. False, False; 4. False, True Answer:\n", "Result": "2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a secure authentication protocol? Choices: 1. It must be easy to use; 2. It must be secure; 3. It must be fast; ", "MaxTokenProbability": "2", "Perplexity": 4.27, "GroundTruth": "4. False, True"}, {"Index": 23, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Public key encryption is advantageous over Symmetric key Cryptography because of Choices: 1. Key length; 2. Key exchange; 3. Speed; 4. Space Answer:\n", "Result": "2. Key exchange\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a digital signature? Choices: 1. It is a symmetric key; 2. It is a one-way function; 3. It is a public key;", "MaxTokenProbability": "2", "Perplexity": 6.59, "GroundTruth": "2. Key exchange"}, {"Index": 24, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The __________ was a huge marketplace of Dark Web specifically famous for selling of illegal drugs & narcotics as well as you can find a wide range of other goods for sale. Choices: 1. Cotton Road; 2. Drug Road; 3. Dark Road; 4. Silk Road Answer:\n", "Result": "4. Silk Road\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"padding\" field in an SSL/TLS record? Choices: 1. To provide additional data that can be used for padding the record; 2. To provide a", "MaxTokenProbability": "4", "Perplexity": 6.88, "GroundTruth": "4. Silk Road"}, {"Index": 25, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The ______________ is categorized as an unknown segment of the Deep Web which has been purposely kept hidden & is inaccessible using standard web browsers. Choices: 1. World Wide Web; 2. Dark web; 3. Surface web; 4. Haunted web Answer:\n", "Result": "2. Dark web", "MaxTokenProbability": "2", "Perplexity": 5.83, "GroundTruth": "2. Dark web"}, {"Index": 26, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What does EXE do when the STP solver times out on a constraint query for a particular path? Choices: 1. Remove a subset of the constraints and retry the query.; 2. Assume that the query is satisfiable and continue executing the path.; 3. Restart STP and retry the query, up to a limited number of retries.; 4. Assume that the query is not satisfiable and stop executing the path Answer:\n", "Result": "3. Restart STP and retry the query, up to a limited number of retries.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the STP solver in the context of the figure? Choices: 1. To find a path", "MaxTokenProbability": "3", "Perplexity": 5.96, "GroundTruth": "4. Assume that the query is not satisfiable and stop executing the path"}, {"Index": 27, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: To verify a digital signature we need the Choices: 1. Receiver\u2019s Private key; 2. Receiver\u2019s Public key; 3. Sender\u2019s Public key; 4. Sender\u2019s Private key Answer:\n", "Result": "3. Sender\u2019s Public key\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider the following statement: \u201cA digital signature scheme is secure if it is computationally infeasible to find a message m such that the scheme\u2019s output is G = E(m,", "MaxTokenProbability": "3", "Perplexity": 5.91, "GroundTruth": "3. Sender\u2019s Public key"}, {"Index": 28, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose you want to use fuzzing on a program to try to find memory errors; which of the following statements is true? Choices: 1. Fuzzing doesn't find memory errors, it finds crashes and hangs; 2. Compiling the program with address sanitizer (ASAN) will make errors harder to reproduce; 3. You should not use a grammar-based fuzzer, because its adherence to the grammar means it will not find memory errors; 4. Compiling the program with address sanitizer (ASAN) will make the source of a memory error easier to find Answer:\n", "Result": "2. Compiling the program with address sanitizer (ASAN) will make errors harder to reproduce\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A company has a policy that all passwords must be at least 8 characters long and contain at least one uppercase letter, one lower", "MaxTokenProbability": "2", "Perplexity": 5.49, "GroundTruth": "4. Compiling the program with address sanitizer (ASAN) will make the source of a memory error easier to find"}, {"Index": 29, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Based on the paper \u201cSoK: SSL and HTTPS: Revisiting past challenges and evaluating certificates trust model enhancements\u201d, which of the following statements are false? Choices: 1. Server key-pinning makes it harder for an adversary to convince a CA to mint a certificate for a site and launch an MITM attack on that site.; 2. OCSP stapling allows a server to prove to a browser that its certificate hasn\u2019t been revoked.; 3. DANE makes it difficult for an adversary to launch a SSL stripping attack.; 4. Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates. Answer:\n", "Result": "4. Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a digital signature scheme? Choices: 1. It", "MaxTokenProbability": "4", "Perplexity": 7.03, "GroundTruth": "4. Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates."}, {"Index": 30, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What tool can be used to perform SNMP enumeration? Choices: 1. Nslookup; 2. DNSlookup; 3. IP Network Browser; 4. Whois Answer:\n", "Result": "3. IP Network Browser\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a strong password? Choices: 1. It is easy to remember; 2. It is easy to guess; 3. It is long; 4.", "MaxTokenProbability": "3", "Perplexity": 5.57, "GroundTruth": "3. IP Network Browser"}, {"Index": 31, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which among them has the strongest wireless security? Choices: 1. WPA2; 2. WPA; 3. WEP; 4. WPA3 Answer:\n", "Result": "1. WPA2\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a digital signature? Choices: 1. It is a one-way function; 2. It is a two-way function; 3. It is a", "MaxTokenProbability": "1", "Perplexity": 5.7, "GroundTruth": "4. WPA3"}, {"Index": 32, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose Unix did not provide a way of passing file descriptors between processes, but still allowed inheriting file descriptors from a parent on fork and exec. What aspects of the OKWS design would break without file descriptor passing?\n1. It would be impossible for services to get a TCP connection to the client web browser.\n2. It would be impossible for okd to run as a non-root user. Choices: 1. False, False; 2. True, True; 3. True, False; 4. False, True Answer:\n", "Result": "2. True, True\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201c-f\u201d option in the following command:\ncat -f file.txt Choices: 1. To force the output of the file to be interpreted as a binary file", "MaxTokenProbability": "2", "Perplexity": 6.22, "GroundTruth": "3. True, False"}, {"Index": 33, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Failed sessions allow brute-force attacks on access credentials. This type of attacks are done in which layer of the OSI model? Choices: 1. Presentation layer; 2. Data-link Layer; 3. Physical layer; 4. Session layer Answer:\n", "Result": "2. Data-link Layer\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a secure PRF? Choices: 1. It must be deterministic; 2. It must be non-deterministic; 3.", "MaxTokenProbability": "2", "Perplexity": 7.09, "GroundTruth": "4. Session layer"}, {"Index": 34, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is an authentication method? Choices: 1. All of the above; 2. Secret question; 3. Biometric; 4. SMS code Answer:\n", "Result": "3. Biometric\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a vulnerability? Choices: 1. A weakness in a system that can be exploited by an attacker; 2. A security feature that protects a system from attack; 3", "MaxTokenProbability": "3", "Perplexity": 6.33, "GroundTruth": "1. All of the above"}, {"Index": 35, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: When does a buffer overflow occur, generally speaking? Choices: 1. when copying a buffer from the stack to the heap; 2. when a pointer is used to access memory not allocated to it; 3. when the program notices a buffer has filled up, and so starts to reject requests; 4. when writing to a pointer that has been freed Answer:\n", "Result": "2. when a pointer is used to access memory not allocated to it\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201c-fno-strict-overflow\u201d flag in GCC? Choices: 1. To prevent integer overflows; ", "MaxTokenProbability": "2", "Perplexity": 7.41, "GroundTruth": "2. when a pointer is used to access memory not allocated to it"}, {"Index": 36, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A digital signature needs a Choices: 1. All of them; 2. Private-key system; 3. Shared-key system; 4. Public-key system Answer:\n", "Result": "3. Shared-key system\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider the following statement: \u201cA secure PRF is one that is computationally infeasible to distinguish from a truly random function.\u201d Which of the following options is the best interpretation of this statement? Cho", "MaxTokenProbability": "3", "Perplexity": 7.76, "GroundTruth": "4. Public-key system"}, {"Index": 37, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A packet filter firewall filters at the Choices: 1. Data link layer; 2. Physical Layer; 3. Network or transport layer; 4. Application or transport Answer:\n", "Result": "3. Network or transport layer\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a digital signature? Choices: 1. To authenticate the sender; 2. To authenticate the receiver; 3. To ensure the integrity of the message; ", "MaxTokenProbability": "3", "Perplexity": 5.62, "GroundTruth": "3. Network or transport layer"}, {"Index": 38, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let I = (S,V)I=(S,V) be a MAC. Suppose S(k,m)S(k,m) is always 5 bits long. Can this MAC be secure? Choices: 1. Yes, the attacker cannot generate a valid tag for any message; 2. Yes, the PRG is pseudorandom; 3. It depends on the details of the MAC; 4. No, an attacker can simply guess the tag for messages Answer:\n", "Result": "3. It depends on the details of the MAC\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a hash function H(x)H(x) that takes a message xxx as input and produces a fixed-size output. Suppose an attacker can compute H(x)", "MaxTokenProbability": "3", "Perplexity": 7.05, "GroundTruth": "4. No, an attacker can simply guess the tag for messages"}, {"Index": 39, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following deals with network intrusion detection and real-time traffic analysis? Choices: 1. Snort; 2. Nessus; 3. John the Ripper; 4. L0phtCrack Answer:\n", "Result": "1. Snort\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201c-f\u201d option in the \u201cstrings\u201d command? Choices: 1. To display only the first 100 characters of each line; 2. To display only", "MaxTokenProbability": "1", "Perplexity": 5.85, "GroundTruth": "1. Snort"}, {"Index": 40, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The Message condentiality or privacy means that the sender and the receiver expect Choices: 1. Condentiality; 2. Authentication; 3. Integrity; 4. Nonrepudiation Answer:\n", "Result": "1. Condentiality\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A digital signature scheme should provide Choices: 1. Authentication; 2. Integrity; 3. Nonrepudiation; 4. Condentiality Answer:\n3. Nonrepudiation", "MaxTokenProbability": "1", "Perplexity": 6.75, "GroundTruth": "1. Condentiality"}, {"Index": 41, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: When a wireless user authenticates to any AP, both of them go in the course of four-step authentication progression which is called _____________ Choices: 1. wireless handshaking; 2. 4-way handshake; 3. 4-way connection; 4. AP-handshaking Answer:\n", "Result": "2. 4-way handshake\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the nonce in the 4-way handshake? Choices: 1. To prevent replay attacks; 2. To provide a random number;", "MaxTokenProbability": "2", "Perplexity": 7.91, "GroundTruth": "2. 4-way handshake"}, {"Index": 42, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Message authentication is a service beyond Choices: 1. Message Condentiality; 2. Message Splashing; 3. Message Integrity; 4. Message Sending Answer:\n", "Result": "3. Message Integrity\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A company has a policy that all sensitive data must be encrypted before it is transmitted over the internet. Which of the following would be the most effective way to enforce this policy? Choices: 1.", "MaxTokenProbability": "3", "Perplexity": 7.59, "GroundTruth": "3. Message Integrity"}, {"Index": 43, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following are most vulnerable to injection attacks? Choices: 1. SQL queries based on user input; 2. Network communications; 3. Session IDs; 4. Registry keys Answer:\n", "Result": "1. SQL queries based on user input\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the SSL/TLS protocol? Choices: 1. To provide secure communication between a client and a server; 2. To provide secure communication between two servers;", "MaxTokenProbability": "1", "Perplexity": 6.61, "GroundTruth": "1. SQL queries based on user input"}, {"Index": 44, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replacing bytes sent by a client with bytes of the attacker\u2019s own choosing.\n2. An attacker reading the plaintext bytes sent by a client. Choices: 1. True, False; 2. True, True; 3. False, False; 4. False, True Answer:\n", "Result": "2. True, True\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a firewall? Choices: 1. To protect the network from external threats; 2. To protect the internal network from the external network; 3. To protect the internal", "MaxTokenProbability": "2", "Perplexity": 7.13, "GroundTruth": "2. True, True"}, {"Index": 45, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a Wireless traffic Sniffing tool? Choices: 1. BurpSuit; 2. Nessus; 3. Maltego; 4. Wireshark Answer:\n", "Result": "4. Wireshark\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a vulnerability scanner? Choices: 1. Nessus; 2. BurpSuit; 3. Maltego; 4. Wiresh", "MaxTokenProbability": "4", "Perplexity": 5.72, "GroundTruth": "4. Wireshark"}, {"Index": 46, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A ___________ is a method in which a computer security mechanism is bypassed untraceable for accessing the computer or its information. Choices: 1. clickjacking; 2. front-door; 3. key-logging; 4. backdoor Answer:\n", "Result": "4. backdoor\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201cnonce\u201d in the OAuth 2.0 protocol? Choices: 1. To provide a unique identifier for the client; 2. To provide a unique identifier for", "MaxTokenProbability": "4", "Perplexity": 6.94, "GroundTruth": "4. backdoor"}, {"Index": 47, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a block cipher operating mode? Choices: 1. CBF; 2. ECB; 3. CBC; 4. CFB Answer:\n", "Result": "4. CFB\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a hash function H(x) that takes a message x as input and produces a fixed-size output. Which of the following properties does NOT hold for a good hash function? Choices: 1. Pre", "MaxTokenProbability": "4", "Perplexity": 5.88, "GroundTruth": "1. CBF"}, {"Index": 48, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a web proxy? Choices: 1. An agent that makes decisions on the client's behalf when interacting with web applications; 2. A simulator for the web, for use when off-line; 3. A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server; 4. A piece of software that makes a web application look like a standalone application, making it easier to test Answer:\n", "Result": "3. A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"Content-Security-Policy\" header in web development? Choices: 1", "MaxTokenProbability": "3", "Perplexity": 6.43, "GroundTruth": "3. A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server"}, {"Index": 49, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Buffer-overflow may remain as a bug in apps if __________ are not done fully. Choices: 1. boundary checks; 2. boundary hacks; 3. buffer checks; 4. memory checks Answer:\n", "Result": "3. buffer checks\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The most effective way to prevent a timing attack is to: Choices: 1. Use a secure random number generator; 2. Use a non-linear function; 3. Use a constant-time function", "MaxTokenProbability": "3", "Perplexity": 6.09, "GroundTruth": "1. boundary checks"}, {"Index": 50, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Applications developed by programming languages like ____ and ______ have this common buffer-overflow error. Choices: 1. C, Ruby; 2. Tcl, C#; 3. C, C++; 4. Python, Ruby Answer:\n", "Result": "3. C, C++\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nmap -p 80 -sS <target>\" command? Choices: 1. To scan a target for open ports; 2. To scan a", "MaxTokenProbability": "3", "Perplexity": 6.52, "GroundTruth": "3. C, C++"}, {"Index": 51, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Encryption and decryption provide secrecy, or condentiality, but not Choices: 1. Integrity; 2. All of the above; 3. Privacy; 4. Authentication Answer:\n", "Result": "2. All of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a web application that uses SSL/TLS to protect the confidentiality and integrity of user data. Which of the following attacks can SSL/TLS protect against? Choices: 1. Man", "MaxTokenProbability": "2", "Perplexity": 6.64, "GroundTruth": "1. Integrity"}, {"Index": 52, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A/an ___________ is a program that steals your logins & passwords for instant messaging applications. Choices: 1. IM \u2013 Trojans; 2. Ransom Trojan; 3. Backdoor Trojans; 4. Trojan-Downloader Answer:\n", "Result": "1. IM \u2013 Trojans\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201c\u2013\u201d option in the \u201c\u2013help\u201d command? Choices: 1. To display the version number of the program; 2. To display the usage of", "MaxTokenProbability": "1", "Perplexity": 5.67, "GroundTruth": "1. IM \u2013 Trojans"}, {"Index": 53, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The sub key length at each round of DES is__________ Choices: 1. 56; 2. 64; 3. 48; 4. 32 Answer:\n", "Result": "2. 64\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201cnonce\u201d in the OAuth 2.0 authorization flow? Choices: 1. To provide a unique identifier for the client; 2. To provide a unique", "MaxTokenProbability": "2", "Perplexity": 5.87, "GroundTruth": "1. 56"}, {"Index": 54, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is true of mutation-based fuzzing? Choices: 1. Each input is mutation that follows a given grammar; 2. It only makes sense for file-based fuzzing, not network-based fuzzing; 3. It works by making small mutations to the target program to induce faults; 4. It generates each different input by modifying a prior input Answer:\n", "Result": "3. It works by making small mutations to the target program to induce faults\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a disadvantage of using a hash function as a message authentication code (MAC)? Choices: 1. It", "MaxTokenProbability": "3", "Perplexity": 6.02, "GroundTruth": "4. It generates each different input by modifying a prior input"}, {"Index": 55, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What are the types of scanning? Choices: 1. Server, client, and network; 2. Passive, active, and interactive; 3. Network, vulnerability, and port ; 4. Port, network, and services Answer:\n", "Result": "3. Network, vulnerability, and port\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a strong password? Choices: 1. It is easy to remember; 2. It is easy to guess; 3. It is long", "MaxTokenProbability": "3", "Perplexity": 5.18, "GroundTruth": "3. Network, vulnerability, and port "}, {"Index": 56, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A sender must not be able to deny sending a message that was sent, is known as Choices: 1. Message Nonrepudiation; 2. Message Integrity; 3. Message Sending; 4. Message Condentiality Answer:\n", "Result": "1. Message Nonrepudiation\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A digital signature scheme is secure if it is Choices: 1. Computationally insecure; 2. Verifiably secure; 3. Secure under random oracle assumptions; 4", "MaxTokenProbability": "1", "Perplexity": 5.61, "GroundTruth": "1. Message Nonrepudiation"}, {"Index": 57, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A proxy rewall lters at the Choices: 1. Data link layer; 2. Physical layer; 3. Network layer; 4. Application layer Answer:\n", "Result": "3. Network layer\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a firewall? Choices: 1. To protect the internal network from the external network; 2. To protect the external network from the internal network; 3. To provide network address", "MaxTokenProbability": "3", "Perplexity": 6.84, "GroundTruth": "4. Application layer"}, {"Index": 58, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Encapsulating Security Payload (ESP) belongs to which Internet Security Protocol? Choices: 1. Secure Http Protocol; 2. Transport Layer Security Protocol; 3. Secure IP Protocol; 4. Secure Socket Layer Protocol Answer:\n", "Result": "2. Transport Layer Security Protocol\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a digital signature? Choices: 1. It is a cryptographic mechanism to ensure the authenticity of a message; 2. It is a crypt", "MaxTokenProbability": "2", "Perplexity": 6.91, "GroundTruth": "3. Secure IP Protocol"}, {"Index": 59, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A special tool is necessary for entering the network which is _______________ that helps the anonymous internet users to access into the Tor\u2019s network and use various Tor services. Choices: 1. Tor browser; 2. Firefox; 3. Opera browser; 4. Chrome Answer:\n", "Result": "1. Tor browser", "MaxTokenProbability": "1", "Perplexity": 6.77, "GroundTruth": "1. Tor browser"}, {"Index": 60, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: How does a buffer overflow on the stack facilitate running attacker-injected code? Choices: 1. By writing directly to the instruction pointer register the address of the code; 2. By changing the name of the running executable, stored on the stack; 3. By writing directly to %eax the address of the code; 4. By overwriting the return address to point to the location of that code Answer:\n", "Result": "2. By changing the name of the running executable, stored on the stack\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"return\" statement in C? Choices: 1. To exit a function; 2. To jump to another location in", "MaxTokenProbability": "2", "Perplexity": 5.27, "GroundTruth": "4. By overwriting the return address to point to the location of that code"}, {"Index": 61, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The digest created by a hash function is normally called a Choices: 1. Message authentication control; 2. Modication detection code (MDC); 3. Modify authentication connection; 4. Message authentication cipher Answer:\n", "Result": "4. Message authentication cipher\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a digital signature? Choices: 1. It is a symmetric key cryptographic primitive; 2. It is a public key cryptographic primitive; 3.", "MaxTokenProbability": "4", "Perplexity": 6.99, "GroundTruth": "2. Modication detection code (MDC)"}, {"Index": 62, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let F: K \\times R \\to MF:K\u00d7R\u2192M be a secure PRF. For m \\in Mm\u2208M define E(k,m) = \\big[ r \\gets R,\\ \\text{output } \\big(r,\\ F(k,r) \\oplus m\\big)\\ \\big]E(k,m)=[r\u2190R, output (r, F(k,r)\u2295m) ] Is EE symantically secure under CPA? Choices: 1. Yes, but only if R is large enough so r never repeats (w.h.p); 2. No, there is always a CPA attack on this system; 3. Yes, whenever F is a secure PRF; 4. It depends on what F is used Answer:\n", "Result": "2. No, there is always a CPA attack on this system\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the main advantage of using a secure PRF in a cryptographic protocol? Choices: 1. It provides a secure key exchange; 2. It", "MaxTokenProbability": "2", "Perplexity": 7.06, "GroundTruth": "1. Yes, but only if R is large enough so r never repeats (w.h.p)"}, {"Index": 63, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Old operating systems like _______ and NT-based systems have buffer-overflow attack a common vulnerability. Choices: 1. IOS12; 2. UNIX; 3. Windows 7; 4. Chrome Answer:\n", "Result": "2. UNIX\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a digital signature? Choices: 1. It is a cryptographic mechanism to ensure the authenticity of a message; 2. It is a cryptographic mechanism to ensure", "MaxTokenProbability": "2", "Perplexity": 6.0, "GroundTruth": "2. UNIX"}, {"Index": 64, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a replay attack? Choices: 1. An attack that continuously repeats, probing for a weakness; 2. When the attacker replies to a message sent to it by the system; 3. The attacker resends a captured message, and the site accept its and responds in the attacker's favor; 4. An attack that uses the system's own messages and so cannot be defended against Answer:\n", "Result": "3. The attacker resends a captured message, and the site accepts its and responds in the attacker's favor\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a man-in-the-middle attack? Choices: 1. An attack where the", "MaxTokenProbability": "3", "Perplexity": 7.21, "GroundTruth": "3. The attacker resends a captured message, and the site accept its and responds in the attacker's favor"}, {"Index": 65, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| A U2F USB dongle prevents malware on the user\u2019s computer from stealing the user\u2019s second factor to authenticate as that user even when the user\u2019s computer is turned off. Statement 2| A server using U2F can reliably determine that the user who is attempting to login is indeed behind the computer that sent the login request. Choices: 1. False, False; 2. True, True; 3. True, False; 4. False, True Answer:\n", "Result": "2. True, True\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a secure multi-factor authentication system? Choices: 1. The system must use a single factor that is both memorized and possessed. 2. The system must", "MaxTokenProbability": "2", "Perplexity": 6.4, "GroundTruth": "3. True, False"}, {"Index": 66, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ____________________ is the anticipation of unauthorized access or break to computers or data by means of wireless networks. Choices: 1. Wireless security; 2. Wired device apps; 3. Wired Security; 4. Wireless access Answer:\n", "Result": "1. Wireless security\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A company has a policy that all employees must use strong passwords, and the company enforces this policy by requiring employees to change their passwords every 90 days. This policy is an example of: Choices", "MaxTokenProbability": "1", "Perplexity": 5.74, "GroundTruth": "1. Wireless security"}, {"Index": 67, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following are benefits of penetration testing? Choices: 1. Full evidence of security: a clean test means a secure system; 2. Makes an adversarial neural network converge more quickly; 3. Compositionality of security properties means tested components are secure even if others change; 4. Results are often reproducible Answer:\n", "Result": "3. Compositionality of security properties means tested components are secure even if others change\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following are limitations of penetration testing? Choices: 1. It is not possible to test all possible inputs; 2.", "MaxTokenProbability": "3", "Perplexity": 7.0, "GroundTruth": "4. Results are often reproducible"}, {"Index": 68, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: 1. _________ framework made cracking of vulnerabilities easy like point and click. Choices: 1. Ettercap; 2. .Net; 3. Zeus; 4. Metasploit Answer:\n", "Result": "4. Metasploit\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the Kerckhoffs\u2019 principle? Choices: 1. To ensure that cryptographic systems are secure; 2. To make cryptographic systems easy to understand; 3", "MaxTokenProbability": "4", "Perplexity": 6.4, "GroundTruth": "4. Metasploit"}, {"Index": 69, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: You are given a message (m) and its OTP encryption (c). Can you compute the OTP key from m and c ? Choices: 1. Yes, the key is k = m xor m.; 2. I can only compute half the bits of the key.; 3. Yes, the key is k = m xor c.; 4. No, I cannot compute the key. Answer:\n", "Result": "2. I can only compute half the bits of the key.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" in OAuth 2.0? Choices: 1. To prevent replay attacks; 2. To authentic", "MaxTokenProbability": "2", "Perplexity": 5.78, "GroundTruth": "3. Yes, the key is k = m xor c."}, {"Index": 70, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR and MR\n2. CR Choices: 1. True, True; 2. False, False; 3. True, False; 4. False, True Answer:\n", "Result": "3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a secure PRP, P, that is based on a secure PRG, G. If we want to use P to generate keys for a secure communication system, which of the following statements is true? Cho", "MaxTokenProbability": "3", "Perplexity": 7.48, "GroundTruth": "1. True, True"}, {"Index": 71, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: When the data must arrive at the receiver exactly as they were sent, its called Choices: 1. Message Sending; 2. Message Condentiality; 3. Message Integrity; 4. Message Splashing Answer:\n", "Result": "3. Message Integrity\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a system that uses a trusted third party to perform fair exchange of values between two parties. The system is vulnerable to Choices: 1. Replay attacks; 2. Man-in-", "MaxTokenProbability": "3", "Perplexity": 6.38, "GroundTruth": "3. Message Integrity"}, {"Index": 72, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the difference between a direct leak and a side channel? Choices: 1. A direct leak comes via the software system's intended interaction mechanism, where as a side channel leak comes from measurements of other system features, like timing, power usage, or space usage; 2. A direct leak is one that is intentional, rather than by unintentional; 3. There is no difference; 4. A direct leak creates a denial of service by failing to free memory, while a channel frees memory as a side effect Answer:\n", "Result": "1. A direct leak comes via the software system's intended interaction mechanism, where as a side channel leak comes from measurements of other system features, like timing, power usage, or space usage.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of", "MaxTokenProbability": "1", "Perplexity": 6.31, "GroundTruth": "1. A direct leak comes via the software system's intended interaction mechanism, where as a side channel leak comes from measurements of other system features, like timing, power usage, or space usage"}, {"Index": 73, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A session symmetric key between two parties is used Choices: 1. Twice; 2. Conditions dependant; 3. Multiple times; 4. Only once Answer:\n", "Result": "3. Multiple times\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A secure communication protocol should be designed to prevent Choices: 1. Eavesdropping; 2. Tampering; 3. Replay attacks; 4. Man-in-the-middle", "MaxTokenProbability": "3", "Perplexity": 7.62, "GroundTruth": "4. Only once"}, {"Index": 74, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a nop sled Choices: 1. It is another name for a branch instruction at the end of sequence of nops; 2. It is an anonymous version of a mop sled; 3. It is a sequence of nops preceding injected shellcode, useful when the return address is unknown; 4. It is a method of removing zero bytes from shellcode Answer:\n", "Result": "3. It is a sequence of nops preceding injected shellcode, useful when the return address is unknown\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nop sled\" in the exploit of the Heartbleed bug Choices: ", "MaxTokenProbability": "3", "Perplexity": 6.97, "GroundTruth": "3. It is a sequence of nops preceding injected shellcode, useful when the return address is unknown"}, {"Index": 75, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which Nmap scan is does not completely open a TCP connection? Choices: 1. XMAS tree scan; 2. ACK scan; 3. SYN stealth scan; 4. TCP connect Answer:\n", "Result": "1. XMAS tree scan\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"ping\" command in network administration? Choices: 1. To test if a network is reachable; 2. To test if a network is secure; ", "MaxTokenProbability": "1", "Perplexity": 5.34, "GroundTruth": "3. SYN stealth scan"}, {"Index": 76, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Based on the paper \u201cClick Trajectories: End-to-End Analysis of the Spam Value Chain\u201d, which of the following statements are true? \u201cSpammers\u201d here refer to operators of various parts of the \u201cspam value chain.\u201d Choices: 1. B and C; 2. There is a high cost for spammers to switch acquiring banks.; 3. Spammers run their spam-advertised web sites on compromised user machines that are part of a botnet.; 4. Spammers need to register domain names in order for their spam-based advertisements to be effective. Answer:\n", "Result": "1. B and C\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201cSpam Traffic\u201d tab in the Splunk Web UI? Choices: 1. To view and analyze spam traffic in Splunk; 2. To", "MaxTokenProbability": "1", "Perplexity": 6.06, "GroundTruth": "1. B and C"}, {"Index": 77, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In a _____________ attack, the extra data that holds some specific instructions in the memory for actions is projected by a cyber-criminal or penetration tester to crack the system. Choices: 1. Buffer-overflow; 2. Phishing; 3. Clickjacking; 4. MiTM Answer:\n", "Result": "1. Buffer-overflow", "MaxTokenProbability": "1", "Perplexity": 7.06, "GroundTruth": "1. Buffer-overflow"}, {"Index": 78, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: _______________ is a popular tool used for network analysis in multiprotocol diverse network. Choices: 1. EtterPeak; 2. Snort; 3. SuperScan; 4. Burp Suit Answer:\n", "Result": "2. Snort\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"root\" user in Linux? Choices: 1. To allow the user to access all files and directories on the system; 2. To allow the user to execute all commands", "MaxTokenProbability": "2", "Perplexity": 6.86, "GroundTruth": "1. EtterPeak"}, {"Index": 79, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ___________________ is alike as that of Access Point (AP) from 802.11, & the mobile operators uses it for offering signal coverage. Choices: 1. Base Transmitter Station; 2. Base Signal Station; 3. Transceiver Station; 4. Base Transceiver Station Answer:\n", "Result": "4. Base Transceiver Station\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nmap\" command? Choices: 1. To scan a network for open ports and services; 2. To scan a network for vulnerabilities; 3", "MaxTokenProbability": "4", "Perplexity": 6.14, "GroundTruth": "4. Base Transceiver Station"}, {"Index": 80, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A __________ is a sequential segment of the memory location that is allocated for containing some data such as a character string or an array of integers. Choices: 1. stack; 2. queue; 3. external storage; 4. buffer Answer:\n", "Result": "4. buffer\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A __________ is a type of attack in which an attacker attempts to trick a user into revealing sensitive information such as passwords or credit card numbers. Choices: 1. phishing; 2. spe", "MaxTokenProbability": "4", "Perplexity": 6.22, "GroundTruth": "4. buffer"}, {"Index": 81, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which form of encryption does WPA use? Choices: 1. TKIP; 2. LEAP; 3. Shared key; 4. AES Answer:\n", "Result": "1. TKIP\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the Diffie-Hellman key exchange? Choices: 1. To authenticate the parties; 2. To establish a shared secret key; 3. To encrypt", "MaxTokenProbability": "1", "Perplexity": 6.62, "GroundTruth": "1. TKIP"}, {"Index": 82, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let suppose a search box of an application can take at most 200 words, and you\u2019ve inserted more than that and pressed the search button; the system crashes. Usually this is because of limited __________ Choices: 1. buffer; 2. local storage; 3. external storage; 4. processing power Answer:\n", "Result": "1. buffer\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201cContent-Security-Policy\u201d header in a web application? Choices: 1. To specify the types of scripts that can be executed by the web application; 2. To specify", "MaxTokenProbability": "1", "Perplexity": 7.11, "GroundTruth": "1. buffer"}, {"Index": 83, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ___________________ began to show up few years back on wireless access points as a new way of adding or connecting new devices. Choices: 1. WPS; 2. WPA; 3. WEP; 4. WPA2 Answer:\n", "Result": "1. WPS\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The following is a true statement about the use of RSA in SSL/TLS: Choices: 1. RSA is used for key exchange; 2. RSA is used for digital signatures;", "MaxTokenProbability": "1", "Perplexity": 6.13, "GroundTruth": "1. WPS"}, {"Index": 84, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What are the port states determined by Nmap? Choices: 1. Active, closed, unused; 2. Open, filtered, unfiltered; 3. Open, half-open, closed ; 4. Active, inactive, standby Answer:\n", "Result": "2. Open, filtered, unfiltered\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nmap -p\" option? Choices: 1. To specify the port range to scan; 2. To specify the protocol to use; ", "MaxTokenProbability": "2", "Perplexity": 5.42, "GroundTruth": "2. Open, filtered, unfiltered"}, {"Index": 85, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which among the following is the least strong security encryption standard? Choices: 1. WEP; 2. WPA2; 3. WPA; 4. WPA3 Answer:\n", "Result": "1. WEP\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" in the OAuth 2.0 authorization flow? Choices: 1. To provide a unique identifier for the client; 2. To provide a unique identifier", "MaxTokenProbability": "1", "Perplexity": 5.05, "GroundTruth": "1. WEP"}, {"Index": 86, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that the compiler does not know the absolute address of a local variable? Choices: 1. Compiler writers are not very good at that sort of thing; 2. As a stack-allocated variable, it could have different addresses depending on when its containing function is called; 3. The size of the address depends on the architecture the program will run on; 4. Programs are not allowed to reference memory using absolute addresses Answer:\n", "Result": "2. As a stack-allocated variable, it could have different addresses depending on when its containing function is called\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201cvolatile\u201d keyword in C? Choices: 1. To indicate that a variable", "MaxTokenProbability": "2", "Perplexity": 5.58, "GroundTruth": "2. As a stack-allocated variable, it could have different addresses depending on when its containing function is called"}, {"Index": 87, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The stack is memory for storing Choices: 1. Global variables; 2. Local variables; 3. Dynamically linked libraries; 4. Program code Answer:\n", "Result": "2. Local variables\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A secure communication protocol should be designed to prevent Choices: 1. Eavesdropping; 2. Replay attacks; 3. Man-in-the-middle attacks; 4. All of", "MaxTokenProbability": "2", "Perplexity": 5.87, "GroundTruth": "2. Local variables"}, {"Index": 88, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can a stream cipher have perfect secrecy? Choices: 1. No, since the key is shorter than the message; 2. No, there are no ciphers with perfect secrecy; 3. Yes, if the PRG is really \u201csecure\u201d; 4. Yes, every cipher has perfect secrecy Answer:\n", "Result": "2. No, there are no ciphers with perfect secrecy\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the secure enclave in iOS? Choices: 1. To store the user's private information; 2. To provide secure storage", "MaxTokenProbability": "2", "Perplexity": 6.36, "GroundTruth": "1. No, since the key is shorter than the message"}, {"Index": 89, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authorization aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Flag the user if he/she misbehaves; 3. Determine if the user is an attacker; 4. Determine who the user is Answer:\n", "Result": "1. Restrict what operations/data the user can access\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a hash function H(x)H(x) that takes a message xxx as input and produces a fixed-size output. Which of the following properties does NOT hold", "MaxTokenProbability": "1", "Perplexity": 5.07, "GroundTruth": "1. Restrict what operations/data the user can access"}, {"Index": 90, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The message must be encrypted at the sender site and decrypted at the Choices: 1. Site; 2. Sender Site; 3. Conferencing; 4. Receiver site Answer:\n", "Result": "2. Sender Site\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"IV\" in the AES encryption algorithm? Choices: 1. To provide randomness; 2. To provide padding; 3. To provide integrity; 4", "MaxTokenProbability": "2", "Perplexity": 6.79, "GroundTruth": "4. Receiver site"}, {"Index": 91, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A _________________ may be a hidden part of a program, a separate infected program a Trojan in disguise of an executable or code in the firmware of any system\u2019s hardware. Choices: 1. virus; 2. crypter; 3. backdoor; 4. key-logger Answer:\n", "Result": "3. backdoor\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a firewall? Choices: 1. To protect against malware; 2. To protect against unauthorized access to a network; 3. To protect against phishing;", "MaxTokenProbability": "3", "Perplexity": 6.28, "GroundTruth": "3. backdoor"}, {"Index": 92, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: How is IP address spoofing detected? Choices: 1. Identify all TCP sessions that are initiated but does not complete successfully; 2. Comparing the TTL values of the actual and spoofed addresses; 3. Installing and configuring a IDS that can read the IP header; 4. Implementing a firewall to the network Answer:\n", "Result": "2. Comparing the TTL values of the actual and spoofed addresses\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a digital signature? Choices: 1. To authenticate the sender of a message; 2. To ensure the integrity of", "MaxTokenProbability": "2", "Perplexity": 5.66, "GroundTruth": "2. Comparing the TTL values of the actual and spoofed addresses"}, {"Index": 93, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: 1. Secure boot chain; 2. The secure enclave\u2019s ephemeral key; 3. None of the above; 4. System software authorization  Answer:\n3. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not an example of presentation layer issues? Choices: 1. Cryptographic flaws in the system may get exploited to evade privacy; 2. Poor handling of unexpected input can lead to the execution of arbitrary instructions; 3. Weak or non-existent authentication mechanisms; 4. Unintentional or ill-directed use of superficially supplied input Answer:\n", "Result": "4. Unintentional or ill-directed use of superficially supplied input\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider the following statement: \u201cThe security of a system is not determined by the security of its individual components, but rather by the interactions between them.\u201d", "MaxTokenProbability": "4", "Perplexity": 6.67, "GroundTruth": "3. Weak or non-existent authentication mechanisms"}, {"Index": 94, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: 1. False, True; 2. False, False; 3. True, False; 4. True, True Answer:\n3. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose Unix did not provide a way of passing file descriptors between processes, but still allowed inheriting file descriptors from a parent on fork and exec. What aspects of the OKWS design would break without file descriptor passing?\n1. It would be impossible for services to send messages to oklogd.\n2. It would be impossible for services to get a TCP connection to a database proxy. Choices: 1. True, False; 2. False, False; 3. True, True; 4. False, True Answer:\n", "Result": "2. False, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201c-f\u201d option in the \u201cstrings\u201d command? Choices: 1. To filter out non-printable characters; 2. To display only the first 1", "MaxTokenProbability": "2", "Perplexity": 7.2, "GroundTruth": "2. False, False"}, {"Index": 95, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why would a ping sweep be used? Choices: 1. To identify open ports; 2. To locate firewalls; 3. To identify live systems; 4. To locate live systems Answer:\n", "Result": "3. To identify live systems\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a firewall? Choices: 1. To restrict access to a network; 2. To allow access to a network; 3. To provide a secure connection between two end", "MaxTokenProbability": "3", "Perplexity": 5.52, "GroundTruth": "3. To identify live systems"}, {"Index": 96, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: 1. Option text; 2. No, it cannot be done; 3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem; 4. It depends on the underlying PRG Answer:\n3. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: 1. H\u2019=D(m\u2019, E(m,H)); 2. H\u2019=E(m\u2019,E(m,H)); 3. H\u2019=E(m\u2019,D(m,H)); 4. H\u2019=D(m\u2019,D(m,H)) Answer:\n1. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The four Primary Security Principles related to messages are Choices: 1. Confidentiality, Access Control, Integrity, Non repudiation; 2. Availability, Authorization, Confidentiality, Integrity; 3. Confidentiality, Integrity, Non repudiation and Authentication; 4. Authentication, Authorization, Availability, Integrity Answer:\n", "Result": "3. Confidentiality, Integrity, Non repudiation and Authentication\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The main difference between a password and a passphrase is: Choices: 1. A password is a single word, while a passphrase is", "MaxTokenProbability": "3", "Perplexity": 4.98, "GroundTruth": "3. Confidentiality, Integrity, Non repudiation and Authentication"}, {"Index": 97, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: 1. True, True; 2. True, False; 3. False, True; 4. False, False Answer:\n2. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: 1. Whole-system testing for security flaws and bugs; 2. A security-minded form of unit testing that applies early in the development process; 3. All of the above; 4. A procedure for testing libraries or other program components for vulnerabilities Answer:\n1. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What was the first buffer overflow attack? Choices: 1. Morris Worm; 2. Code Red; 3. Love Bug; 4. SQL Slammer Answer:\n", "Result": "1. Morris Worm\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a firewall? Choices: 1. To protect the internal network from the external network; 2. To protect the external network from the internal network; 3. To protect both", "MaxTokenProbability": "1", "Perplexity": 5.92, "GroundTruth": "1. Morris Worm"}, {"Index": 98, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: 1. Violated; 2. Overview; 3. Changed; 4. Replaced Answer:\n3. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The ______________ can cost you money, by sending text messages from your mobile phone numbers. Choices: 1. Ransom Trojan; 2. SMS Trojan; 3. IM \u2013 Trojans; 4. Backdoor Trojans Answer:\n", "Result": "2. SMS Trojan\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a strong password? Choices: 1. It must contain at least one special character; 2. It must contain at least one uppercase letter; 3", "MaxTokenProbability": "2", "Perplexity": 5.84, "GroundTruth": "2. SMS Trojan"}, {"Index": 99, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: 1. True, True; 2. False, True; 3. False, False; 4. True, False Answer:\n4. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: 1. Restrict what operations/data the user can access; 2. Determine if the user is an attacker; 3. Flag the user if he/she misbehaves; 4. Determine who the user is Answer:\n4. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: 1. Anti-virus scanners tend to look for viruses and other malicious; 2. Heartbleed attacks the anti-virus scanner itself; 3. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ; 4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\n4. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Three of the following are classic security properties; which one is not? Choices: 1. Correctness; 2. Integrity; 3. Confidentiality; 4. Availability Answer:\n", "Result": "4. Availability\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a characteristic of a strong password? Choices: 1. It contains only lowercase letters; 2. It contains only uppercase letters; 3. It contains both uppercase", "MaxTokenProbability": "4", "Perplexity": 4.92, "GroundTruth": "4. Availability"}]}}