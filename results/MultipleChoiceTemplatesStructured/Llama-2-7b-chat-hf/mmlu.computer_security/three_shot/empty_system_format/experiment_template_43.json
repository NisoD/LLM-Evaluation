{"card": "cards.mmlu.computer_security", "template_name": "template_43", "model_name": "meta-llama/Llama-2-7b-chat-hf", "system_format": "empty_system_format", "max_instances": 14000, "num_demos": 3, "demos_pool_size": 20, "results": {"test": [{"Index": 0, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following styles of fuzzer is more likely to explore paths covering every line of code in the following program? Choices: I. Whitebox II. Blackbox III. Generational IV. Mutation-based Answer:\n", "Result": "II. Blackbox\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security benefit of using a hardware security module (HSM)? Choices: I. Protection against side-channel attacks II. Protection against replay attacks III. Protection against man", "MaxTokenProbability": "II", "Perplexity": 7.83, "GroundTruth": "I. Whitebox", "Score": 0.0}, {"Index": 1, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replaying bytes that a client sent earlier.\n2. An attacker impersonating the server. Choices: I. True, False II. True, True III. False, True IV. False, False Answer:\n", "Result": "II. True, True\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security consideration when using a password-based authentication system? Choices: I. The password is never stored in plaintext II. The password is always stored in plaintext III. The", "MaxTokenProbability": "II", "Perplexity": 7.7, "GroundTruth": "II. True, True", "Score": 1.0}, {"Index": 2, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: MIT\u2019s Kerberos KDC server has a maximum ticket lifetime of 24 hours (for most user principals). What ensures that an expired Kerberos ticket can no longer be used? Choices: I. When a client connects to a server, the server compares the ticket\u2019s expiration time to the server\u2019s current clock, and refuses to authenticate the user if the ticket expiration time is in the past. II. The Kerberos server (KDC) refuses to establish new connections between clients and servers for expired tickets. III. When a client connects to a server, the server sets a 24-hour timer to terminate the connection, which ensures a client cannot remain connected past the ticket\u2019s maximum lifetime. IV. When a client connects to a server, the server sends a query to the KDC to check if the ticket is still valid with respect to the KDC\u2019s clock, and refuses to authenticate the user if the KDC reports that the ticket is expired. Answer:\n", "Result": "IV. When a client connects to a server, the server sends a query to the KDC to check if the ticket is still valid with respect to the KDC\u2019s clock, and refuses to authenticate the user if the KDC reports that the ticket is expired.", "MaxTokenProbability": "IV", "Perplexity": 6.41, "GroundTruth": "I. When a client connects to a server, the server compares the ticket\u2019s expiration time to the server\u2019s current clock, and refuses to authenticate the user if the ticket expiration time is in the past.", "Score": 0.0}, {"Index": 3, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In Message Condentiality, the transmitted message must make sense to only intended Choices: I. Receiver II. Modulor III. Sender IV. Translator Answer:\n", "Result": "II. Modulor\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the Address Space Layout Randomization (ASLR) feature in an operating system? Choices: I. To make it more difficult for attackers to predict where a specific piece of code is", "MaxTokenProbability": "II", "Perplexity": 8.97, "GroundTruth": "I. Receiver", "Score": 0.0}, {"Index": 4, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a remote Trojan? Choices: I. BankerA II. Troya III. Game-Troj IV. DaCryptic Answer:\n", "Result": "I. BankerA\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the primary goal of penetration testing? Choices: I. To identify vulnerabilities in a system II. To prioritize vulnerabilities based on risk III. To fix identified vulnerabilities IV.", "MaxTokenProbability": "I", "Perplexity": 8.93, "GroundTruth": "II. Troya", "Score": 0.0}, {"Index": 5, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ______________ is a widespread app\u2019s coding mistake made by developers which could be exploited by an attacker for gaining access or malfunctioning your system. Choices: I. Memory leakage II. Inefficient programming III. Less processing power IV. Buffer-overrun Answer:\n", "Result": "III. Less processing power\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"security through obscurity\" principle? Choices: I. To make the security mechanism more secure II. To make the security mechanism more difficult to bypass III. To make the", "MaxTokenProbability": "III", "Perplexity": 10.35, "GroundTruth": "IV. Buffer-overrun", "Score": 0.0}, {"Index": 6, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider the paper Native Client: A Sandbox for Portable, Untrusted x86 Native Code by Yee et al. Ben Bitdiddle notes that NaCl uses Intel x86 segmentation to ensure that the sandboxed module does not read or write memory outside its own data area, and does not execute instructions outside its own code. Ben thinks that with these restrictions alone, executing the sandboxed module must be safe; that is, he thinks validation is not needed. Ben is wrong. Circle the types of x86 machine instructions that the validator always forbids in sandboxed code. Please ignore trampoline and springboard code. Choices: I. all indirect jumps (via an address in a register or variable) II. all loads or stores to addresses that are not 0 mod 32 III. all instructions that modify segment state IV. all indirect loads or stores (via an address in a register or variable) Answer:\n", "Result": "IV. all indirect loads or stores (via an address in a register or variable)\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the difference between a buffer overflow and a stack-based buffer overflow? Choices: I. A buffer overflow occurs when a program writes data to", "MaxTokenProbability": "IV", "Perplexity": 13.82, "GroundTruth": "III. all instructions that modify segment state", "Score": 0.0}, {"Index": 7, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ____________ is also a part of darknet that is employed for transferring files anonymously. Choices: I. Internet II. ARPANET III. Freenet IV. Stuxnet Answer:\n", "Result": "IV. Stuxnet\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a system that uses a combination of a hardware token and a software token for authentication. Which of the following is a vulnerability of this system?\n1. The hardware token can be stolen or compromised", "MaxTokenProbability": "IV", "Perplexity": 8.81, "GroundTruth": "III. Freenet", "Score": 0.0}, {"Index": 8, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why apps developed in languages like C, C++ is prone to Buffer-overflow? Choices: I. No processing power check II. No string boundary checks in predefined functions III. No storage check in the external memory IV. No database check Answer:\n", "Result": "III. No storage check in the external memory\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" in the TLS handshake? Choices: I. To ensure the client and server are using the same secret key II. To prevent re", "MaxTokenProbability": "III", "Perplexity": 11.63, "GroundTruth": "II. No string boundary checks in predefined functions", "Score": 0.0}, {"Index": 9, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Man in the middle attack can endanger the security of Diffie Hellman method if two parties are not Choices: I. Authenticated II. Shared III. Submitted IV. Joined Answer:\n", "Result": "II. Authenticated\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the difference between a hash function and a digital signature? Choices: I. A hash function produces a fixed-size output, while a digital signature produces a variable-size output. II. A hash", "MaxTokenProbability": "II", "Perplexity": 6.91, "GroundTruth": "I. Authenticated", "Score": 1.0}, {"Index": 10, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: An integer overflow occurs when Choices: I. an integer expression's result \"wraps around\"; instead of creating a very large number, a very small (or negative) number ends up getting created II. an integer is used to access a buffer outside of the buffer's bounds III. an integer is used as if it was a pointer IV. there is no more space to hold integers in the program Answer:\n", "Result": "I. an integer expression's result \"wraps around\"\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"replay\" attack in cryptography? Choices: I. To prevent an attacker from reusing a valid session key II.", "MaxTokenProbability": "I", "Perplexity": 9.95, "GroundTruth": "IV. there is no more space to hold integers in the program", "Score": 0.0}, {"Index": 11, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let HH be a Merkle-Damgard hash function is H:X^{\\leq L} \\to TH:X^\u2264L  \u2192T. Construct a MAC from this HH as follows: \\ \\ S(k,m) = H(k \\| m)  S(k,m)=H(k\u2225m). This mac is insecure because: Choices: I. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| \\text{PB} \\| w)H(k\u2225m\u2225PB\u2225w) for any ww II. Anyone can compute H( k \\| m )H(k\u2225m) for any mm III. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| w)H(k\u2225m\u2225w) for any ww IV. Given H(k \\| m)H(k\u2225m) anyone can compute H(w \\| k \\| m \\| \\text{PB})H(w\u2225k\u2225m\u2225PB) for any ww Answer:\n", "Result": "II. Anyone can compute H(k \\| m)H(k\u2225m) for any mm\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the difference between a vulnerability and a threat? Choices: I. A vulnerability is a weakness in a system that", "MaxTokenProbability": "II", "Perplexity": 7.84, "GroundTruth": "I. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| \\text{PB} \\| w)H(k\u2225m\u2225PB\u2225w) for any ww", "Score": 0.0}, {"Index": 12, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose that Alice and Bob sent confidential text messages to one another last month through an encrypted messaging system. Alice and Bob are worried that an adversary might compromise one of their computers today, while they are taking the 6.858 final exam, and would then be able to decrypt those messages. Which of the following security properties can address Alice and Bob\u2019s concern? Choices: I. Backward secrecy. II. Authentication. III. Forward secrecy IV. Deniability. Answer:\n", "Result": "IV. Deniability\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the main difference between the Boneh-Boyen and the NTRU encryption schemes? Choices: I. One uses a randomized padding scheme, while the other uses a deterministic padding scheme", "MaxTokenProbability": "IV", "Perplexity": 9.44, "GroundTruth": "III. Forward secrecy", "Score": 0.0}, {"Index": 13, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The AH Protocol provides source authentication and data integrity, but not Choices: I. Nonrepudiation II. Both A & C III. Integrity IV. Privacy Answer:\n", "Result": "II. Both A & C\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"padding\" in the AES-GCM mode of operation? Choices: I. To add randomness to the plaintext II. To add randomness to the ci", "MaxTokenProbability": "II", "Perplexity": 9.78, "GroundTruth": "IV. Privacy", "Score": 0.0}, {"Index": 14, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a security exploit? Choices: I. Authentication II. SQL Injection III. Eavesdropping IV. Cross-site scripting Answer:\n", "Result": "I. Authentication\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security threat? Choices: I. Malware II. Phishing III. Social Engineering IV. Denial of Service Answer:\nII. Phishing\n\nQuestion: [question] Cho", "MaxTokenProbability": "I", "Perplexity": 5.53, "GroundTruth": "I. Authentication", "Score": 1.0}, {"Index": 15, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: _______________ is the central node of 802.11 wireless operations. Choices: I. Access Point II. WPA III. WAP IV. Access Port Answer:\n", "Result": "I. Access Point\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the _______________ in a wireless network? Choices: I. Authentication II. Encryption III. Authentication and Encryption IV. Network Management Answer:\nIII. Authentication and Encryption", "MaxTokenProbability": "I", "Perplexity": 8.03, "GroundTruth": "I. Access Point", "Score": 1.0}, {"Index": 16, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In MD-5 the length of the message digest is Choices: I. 64 II. 128 III. 160 IV. 54 Answer:\n", "Result": "II. 128\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the padding in the output of a hash function? Choices: I. To make the output of the hash function longer II. To make the output of the hash function shorter III.", "MaxTokenProbability": "II", "Perplexity": 8.08, "GroundTruth": "II. 128", "Score": 1.0}, {"Index": 17, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is Nmap? Choices: I. It is a network fuzz testing tool II. It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might be at those addresses, based on the responses III. It is a map of the Internet IV. It is a suite of tools for scripting attacks: probe, construct, encode, inject, wait for response Answer:\n", "Result": "II. It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might be at those addresses, based on the responses\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" field in", "MaxTokenProbability": "II", "Perplexity": 9.51, "GroundTruth": "II. It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might be at those addresses, based on the responses", "Score": 1.0}, {"Index": 18, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: How do you prevent SQL injection? Choices: I. Interrupt requests II. All of the above III. Escape queries IV. Merge tables Answer:\n", "Result": "III. All of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security benefit of using a Content Delivery Network (CDN)? Choices: I. Reduced latency II. Increased availability III. Improved security", "MaxTokenProbability": "III", "Perplexity": 9.55, "GroundTruth": "III. Escape queries", "Score": 0.0}, {"Index": 19, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What does it mean to \"be stealthy\" during a penetration test? Choices: I. Performing penetration testing without the target organization knowing II. Taking care to avoid activities during a penetration test that might attract attention, e.g., by operators or IDS services III. Using encryption during tests to make the source of attacks impossible to determine IV. Performing the tests from an undisclosed location Answer:\n", "Result": "III. Using encryption during tests to make the source of attacks impossible to determine\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the primary goal of a penetration test? Choices: I. To identify vulnerabilities in a system II. To assess the likelihood of a", "MaxTokenProbability": "III", "Perplexity": 7.2, "GroundTruth": "II. Taking care to avoid activities during a penetration test that might attract attention, e.g., by operators or IDS services", "Score": 0.0}, {"Index": 20, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a transport layer vulnerability? Choices: I. Unauthorized network access II. Mishandling of undefined, poorly defined variables III. The Vulnerability that allows \u201cfingerprinting\u201d & other enumeration of host information IV. Overloading of transport-layer mechanisms Answer:\n", "Result": "IV. Overloading of transport-layer mechanisms\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a type of side-channel attack? Choices: I. Timing attack II. Buffer overflow attack III. Side-channel attack IV. Social engineering attack Answer", "MaxTokenProbability": "IV", "Perplexity": 8.26, "GroundTruth": "I. Unauthorized network access", "Score": 0.0}, {"Index": 21, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In Brumley and Boneh\u2019s paper on side-channel attacks, why does blinding prevent the timing attack from working? Choices: I. Blinding changes the p and q primes that are used, so an adversary cannot learn the server\u2019s true p and q values. II. Blinding adds a random amount of time to the decryption due to the multiplication and division by the blinding random value r, which obscures the timing differences used in the attack. III. Blinding randomizes the ciphertext being decrypted, thus obscuring the correlation between an adversary\u2019s input and the timing differences. IV. Blinding prevents the server from using the CRT optimization, which is essential to the timing attack. Answer:\n", "Result": "II. Blinding adds a random amount of time to the decryption due to the multiplication and division by the blinding random value r, which obscures the timing differences used in the attack.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In the context of cryptography, what does", "MaxTokenProbability": "II", "Perplexity": 8.74, "GroundTruth": "III. Blinding randomizes the ciphertext being decrypted, thus obscuring the correlation between an adversary\u2019s input and the timing differences.", "Score": 0.0}, {"Index": 22, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. RS and KM\n2. RS and MR Choices: I. True, True II. True, False III. False, False IV. False, True Answer:\n", "Result": "II. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"heartbeat\" mechanism in the OpenSSL implementation? Choices: I. To ensure that the client and server are synchronized II. To provide a way for the client to", "MaxTokenProbability": "II", "Perplexity": 5.92, "GroundTruth": "IV. False, True", "Score": 0.0}, {"Index": 23, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Public key encryption is advantageous over Symmetric key Cryptography because of Choices: I. Key length II. Key exchange III. Speed IV. Space Answer:\n", "Result": "I. Key length\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a disadvantage of using a digital signature? Choices: I. It is computationally expensive II. It is not secure III. It is not efficient IV. It is not reliable Answer", "MaxTokenProbability": "I", "Perplexity": 9.94, "GroundTruth": "II. Key exchange", "Score": 0.0}, {"Index": 24, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The __________ was a huge marketplace of Dark Web specifically famous for selling of illegal drugs & narcotics as well as you can find a wide range of other goods for sale. Choices: I. Cotton Road II. Drug Road III. Dark Road IV. Silk Road Answer:\n", "Result": "IV. Silk Road\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the name of the encryption algorithm used in PGP (Pretty Good Privacy) to encrypt and decrypt messages? Choices: I. AES II. RSA III. Blowfish IV", "MaxTokenProbability": "IV", "Perplexity": 9.91, "GroundTruth": "IV. Silk Road", "Score": 1.0}, {"Index": 25, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The ______________ is categorized as an unknown segment of the Deep Web which has been purposely kept hidden & is inaccessible using standard web browsers. Choices: I. World Wide Web II. Dark web III. Surface web IV. Haunted web Answer:\n", "Result": "III. Surface web\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security benefit of using a hardware security module (HSM)? Choices: I. Protects against side-channel attacks II. Protects against insider attacks III. Prote", "MaxTokenProbability": "III", "Perplexity": 7.6, "GroundTruth": "II. Dark web", "Score": 0.0}, {"Index": 26, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What does EXE do when the STP solver times out on a constraint query for a particular path? Choices: I. Remove a subset of the constraints and retry the query. II. Assume that the query is satisfiable and continue executing the path. III. Restart STP and retry the query, up to a limited number of retries. IV. Assume that the query is not satisfiable and stop executing the path Answer:\n", "Result": "III. Restart STP and retry the query, up to a limited number of retries.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"retry\" mechanism in the STP solver? Choices: I. To handle temporary fail", "MaxTokenProbability": "III", "Perplexity": 6.97, "GroundTruth": "IV. Assume that the query is not satisfiable and stop executing the path", "Score": 0.0}, {"Index": 27, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: To verify a digital signature we need the Choices: I. Receiver\u2019s Private key II. Receiver\u2019s Public key III. Sender\u2019s Public key IV. Sender\u2019s Private key Answer:\n", "Result": "III. Sender\u2019s Public key\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In the context of cryptography, what does the term \"side-channel attack\" refer to?\n1. An attack that exploits a weakness in the cryptographic algorithm itself.\n2", "MaxTokenProbability": "III", "Perplexity": 7.49, "GroundTruth": "III. Sender\u2019s Public key", "Score": 1.0}, {"Index": 28, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose you want to use fuzzing on a program to try to find memory errors; which of the following statements is true? Choices: I. Fuzzing doesn't find memory errors, it finds crashes and hangs II. Compiling the program with address sanitizer (ASAN) will make errors harder to reproduce III. You should not use a grammar-based fuzzer, because its adherence to the grammar means it will not find memory errors IV. Compiling the program with address sanitizer (ASAN) will make the source of a memory error easier to find Answer:\n", "Result": "II. Compiling the program with address sanitizer (ASAN) will make errors harder to reproduce\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" field in an IPsec packet? Choices: I. To prevent replay attacks", "MaxTokenProbability": "II", "Perplexity": 6.72, "GroundTruth": "IV. Compiling the program with address sanitizer (ASAN) will make the source of a memory error easier to find", "Score": 0.0}, {"Index": 29, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Based on the paper \u201cSoK: SSL and HTTPS: Revisiting past challenges and evaluating certificates trust model enhancements\u201d, which of the following statements are false? Choices: I. Server key-pinning makes it harder for an adversary to convince a CA to mint a certificate for a site and launch an MITM attack on that site. II. OCSP stapling allows a server to prove to a browser that its certificate hasn\u2019t been revoked. III. DANE makes it difficult for an adversary to launch a SSL stripping attack. IV. Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates. Answer:\n", "Result": "IV. Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security benefit of using a hardware security module (HSM)? Choices", "MaxTokenProbability": "IV", "Perplexity": 9.43, "GroundTruth": "IV. Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates.", "Score": 1.0}, {"Index": 30, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What tool can be used to perform SNMP enumeration? Choices: I. Nslookup II. DNSlookup III. IP Network Browser IV. Whois Answer:\n", "Result": "II. DNSLookup\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a honeypot? Choices: I. To detect and alert on suspicious activity II. To gather information about an attacker III. To distract an attacker IV.", "MaxTokenProbability": "II", "Perplexity": 7.66, "GroundTruth": "III. IP Network Browser", "Score": 0.0}, {"Index": 31, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which among them has the strongest wireless security? Choices: I. WPA2 II. WPA III. WEP IV. WPA3 Answer:\n", "Result": "I. WPA2\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security risk associated with using a password manager? Choices: I. The password manager may leak the master password. II. The password manager may be vulnerable to phishing attacks.", "MaxTokenProbability": "I", "Perplexity": 7.95, "GroundTruth": "IV. WPA3", "Score": 0.0}, {"Index": 32, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose Unix did not provide a way of passing file descriptors between processes, but still allowed inheriting file descriptors from a parent on fork and exec. What aspects of the OKWS design would break without file descriptor passing?\n1. It would be impossible for services to get a TCP connection to the client web browser.\n2. It would be impossible for okd to run as a non-root user. Choices: I. False, False II. True, True III. True, False IV. False, True Answer:\n", "Result": "I. False, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the main advantage of using a hardware security module (HSM) over software-based security solutions? Choices: I. HSMs are more secure than software-based solutions because they are less vulner", "MaxTokenProbability": "I", "Perplexity": 8.72, "GroundTruth": "III. True, False", "Score": 0.0}, {"Index": 33, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Failed sessions allow brute-force attacks on access credentials. This type of attacks are done in which layer of the OSI model? Choices: I. Presentation layer II. Data-link Layer III. Physical layer IV. Session layer Answer:\n", "Result": "IV. Session layer\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" field in the OCSP response? Choices: I. To prove that the response is fresh II. To prove that the response is valid III. To prove that", "MaxTokenProbability": "IV", "Perplexity": 10.17, "GroundTruth": "IV. Session layer", "Score": 1.0}, {"Index": 34, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is an authentication method? Choices: I. All of the above II. Secret question III. Biometric IV. SMS code Answer:\n", "Result": "I. All of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a security information and event management (SIEM) system? Choices: I. To monitor and analyze security-related data from various sources II. To provide real-time security threat", "MaxTokenProbability": "I", "Perplexity": 8.32, "GroundTruth": "I. All of the above", "Score": 1.0}, {"Index": 35, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: When does a buffer overflow occur, generally speaking? Choices: I. when copying a buffer from the stack to the heap II. when a pointer is used to access memory not allocated to it III. when the program notices a buffer has filled up, and so starts to reject requests IV. when writing to a pointer that has been freed Answer:\n", "Result": "II. when a pointer is used to access memory not allocated to it\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a vulnerability scanner? Choices: I. To identify potential security threats and vulnerabilities in a computer system II. To provide a", "MaxTokenProbability": "II", "Perplexity": 11.93, "GroundTruth": "II. when a pointer is used to access memory not allocated to it", "Score": 1.0}, {"Index": 36, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A digital signature needs a Choices: I. All of them II. Private-key system III. Shared-key system IV. Public-key system Answer:\n", "Result": "IV. Public-key system\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a system that uses a hash function H to produce a digital signature. An attacker can produce a forgery F by computing F = H(message) + x, where x is a random value.", "MaxTokenProbability": "IV", "Perplexity": 11.18, "GroundTruth": "IV. Public-key system", "Score": 1.0}, {"Index": 37, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A packet filter firewall filters at the Choices: I. Data link layer II. Physical Layer III. Network or transport layer IV. Application or transport Answer:\n", "Result": "IV. Application or transport layer\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a honeypot? Choices: I. To detect and alert on malicious activity II. To detect and alert on legitimate activity III. To confuse attackers IV", "MaxTokenProbability": "IV", "Perplexity": 8.43, "GroundTruth": "III. Network or transport layer", "Score": 0.0}, {"Index": 38, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let I = (S,V)I=(S,V) be a MAC. Suppose S(k,m)S(k,m) is always 5 bits long. Can this MAC be secure? Choices: I. Yes, the attacker cannot generate a valid tag for any message II. Yes, the PRG is pseudorandom III. It depends on the details of the MAC IV. No, an attacker can simply guess the tag for messages Answer:\n", "Result": "II. Yes, the PRG is pseudorandom\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a system that uses a password-based key exchange protocol. If an attacker obtains the password, can they use it to decrypt the encrypted data? Choices: I", "MaxTokenProbability": "II", "Perplexity": 9.05, "GroundTruth": "IV. No, an attacker can simply guess the tag for messages", "Score": 0.0}, {"Index": 39, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following deals with network intrusion detection and real-time traffic analysis? Choices: I. Snort II. Nessus III. John the Ripper IV. L0phtCrack Answer:\n", "Result": "II. Nessus\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"randomized padding\" feature in OpenSSL? Choices: I. To make it more difficult for an attacker to predict the length of a message II. To make it more", "MaxTokenProbability": "II", "Perplexity": 8.6, "GroundTruth": "I. Snort", "Score": 0.0}, {"Index": 40, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The Message condentiality or privacy means that the sender and the receiver expect Choices: I. Condentiality II. Authentication III. Integrity IV. Nonrepudiation Answer:\n", "Result": "I. Condentiality\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"heartbeat\" option in the OpenSSL configuration file? Choices: I. To enable the heartbeat extension II. To disable the heartbeat extension III. To", "MaxTokenProbability": "I", "Perplexity": 10.61, "GroundTruth": "I. Condentiality", "Score": 1.0}, {"Index": 41, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: When a wireless user authenticates to any AP, both of them go in the course of four-step authentication progression which is called _____________ Choices: I. wireless handshaking II. 4-way handshake III. 4-way connection IV. AP-handshaking Answer:\n", "Result": "III. 4-way handshake\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" field in the IEEE 802.11 authentication frame? Choices: I. To provide a random number for the encryption key", "MaxTokenProbability": "III", "Perplexity": 10.67, "GroundTruth": "II. 4-way handshake", "Score": 1.0}, {"Index": 42, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Message authentication is a service beyond Choices: I. Message Condentiality II. Message Splashing III. Message Integrity IV. Message Sending Answer:\n", "Result": "III. Message Integrity\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security benefit of using a hardware security module (HSM)? Choices: I. It provides a secure environment for cryptographic operations II. It provides a secure environment for key management III", "MaxTokenProbability": "III", "Perplexity": 11.3, "GroundTruth": "III. Message Integrity", "Score": 1.0}, {"Index": 43, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following are most vulnerable to injection attacks? Choices: I. SQL queries based on user input II. Network communications III. Session IDs IV. Registry keys Answer:\n", "Result": "I. SQL queries based on user input\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the Certificate Transparency (CT) log? Choices: I. To provide a mechanism for clients to verify that a certificate has been issued by a trusted certificate", "MaxTokenProbability": "I", "Perplexity": 8.99, "GroundTruth": "I. SQL queries based on user input", "Score": 1.0}, {"Index": 44, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replacing bytes sent by a client with bytes of the attacker\u2019s own choosing.\n2. An attacker reading the plaintext bytes sent by a client. Choices: I. True, False II. True, True III. False, False IV. False, True Answer:\n", "Result": "II. True, True\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the Secure Boot process? Choices: I. To ensure that the operating system and applications are running on the correct hardware II. To ensure that the operating system and applications are running on", "MaxTokenProbability": "II", "Perplexity": 9.72, "GroundTruth": "II. True, True", "Score": 1.0}, {"Index": 45, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a Wireless traffic Sniffing tool? Choices: I. BurpSuit II. Nessus III. Maltego IV. Wireshark Answer:\n", "Result": "IV. Wireshark\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a type of cryptanalysis attack? Choices: I. Brute Force II. Side-Channel III. Differential IV. Bias Answer:\nII. Side-Channel", "MaxTokenProbability": "IV", "Perplexity": 7.12, "GroundTruth": "IV. Wireshark", "Score": 1.0}, {"Index": 46, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A ___________ is a method in which a computer security mechanism is bypassed untraceable for accessing the computer or its information. Choices: I. clickjacking II. front-door III. key-logging IV. backdoor Answer:\n", "Result": "III. key-logging\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" field in the TLS handshake? Choices: I. To provide a random value for the initial secret key II. To provide a random value for the session", "MaxTokenProbability": "III", "Perplexity": 10.09, "GroundTruth": "IV. backdoor", "Score": 0.0}, {"Index": 47, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a block cipher operating mode? Choices: I. CBF II. ECB III. CBC IV. CFB Answer:\n", "Result": "IV. CFB\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security property of a cryptographic algorithm? Choices: I. Confusion and obscurity II. Authentication III. Integrity IV. Availability Answer:\nIII. Integrity\n", "MaxTokenProbability": "IV", "Perplexity": 7.77, "GroundTruth": "I. CBF", "Score": 0.0}, {"Index": 48, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a web proxy? Choices: I. An agent that makes decisions on the client's behalf when interacting with web applications II. A simulator for the web, for use when off-line III. A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server IV. A piece of software that makes a web application look like a standalone application, making it easier to test Answer:\n", "Result": "II. A simulator for the web, for use when off-line\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" field in an SSL/TLS record? Choices: I. To prevent replay attacks II. To prevent", "MaxTokenProbability": "II", "Perplexity": 8.96, "GroundTruth": "III. A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server", "Score": 0.0}, {"Index": 49, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Buffer-overflow may remain as a bug in apps if __________ are not done fully. Choices: I. boundary checks II. boundary hacks III. buffer checks IV. memory checks Answer:\n", "Result": "II. boundary hacks\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The attacker can use the following information to launch a man-in-the-middle attack: Choices: I. The IP address of the target server II. The target server's public key III.", "MaxTokenProbability": "II", "Perplexity": 7.62, "GroundTruth": "I. boundary checks", "Score": 0.0}, {"Index": 50, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Applications developed by programming languages like ____ and ______ have this common buffer-overflow error. Choices: I. C, Ruby II. Tcl, C# III. C, C++ IV. Python, Ruby Answer:\n", "Result": "II. Tcl, C#\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the primary goal of a security audit? Choices: I. To identify vulnerabilities in a system II. To assess the likelihood of a security breach III. To evaluate the effect", "MaxTokenProbability": "II", "Perplexity": 9.53, "GroundTruth": "III. C, C++", "Score": 0.0}, {"Index": 51, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Encryption and decryption provide secrecy, or condentiality, but not Choices: I. Integrity II. All of the above III. Privacy IV. Authentication Answer:\n", "Result": "I. Integrity\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security benefit of using a hardware security module (HSM)? Choices: I. It provides a secure environment for cryptographic operations II. It provides a secure environment for key management III.", "MaxTokenProbability": "I", "Perplexity": 9.29, "GroundTruth": "I. Integrity", "Score": 1.0}, {"Index": 52, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A/an ___________ is a program that steals your logins & passwords for instant messaging applications. Choices: I. IM \u2013 Trojans II. Ransom Trojan III. Backdoor Trojans IV. Trojan-Downloader Answer:\n", "Result": "II. Ransom Trojan\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" in the TLS handshake? Choices: I. To ensure the client and server are using the same secret key II. To prevent replay attacks", "MaxTokenProbability": "II", "Perplexity": 7.9, "GroundTruth": "I. IM \u2013 Trojans", "Score": 0.0}, {"Index": 53, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The sub key length at each round of DES is__________ Choices: I. 56 II. 64 III. 48 IV. 32 Answer:\n", "Result": "I. 56\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" field in the TLS 1.3 handshake message? Choices: I. To prevent replay attacks II. To authenticate the client III. To", "MaxTokenProbability": "I", "Perplexity": 7.84, "GroundTruth": "I. 56", "Score": 1.0}, {"Index": 54, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is true of mutation-based fuzzing? Choices: I. Each input is mutation that follows a given grammar II. It only makes sense for file-based fuzzing, not network-based fuzzing III. It works by making small mutations to the target program to induce faults IV. It generates each different input by modifying a prior input Answer:\n", "Result": "I. Each input is a mutation that follows a given grammar\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security benefit of using a hardware security module (HSM)? Choices: I. It provides a secure environment for cryptographic operations II. It", "MaxTokenProbability": "I", "Perplexity": 7.36, "GroundTruth": "IV. It generates each different input by modifying a prior input", "Score": 0.0}, {"Index": 55, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What are the types of scanning? Choices: I. Server, client, and network II. Passive, active, and interactive III. Network, vulnerability, and port  IV. Port, network, and services Answer:\n", "Result": "III. Network, vulnerability, and port\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a honeypot? Choices: I. To detect and analyze attacks II. To monitor network traffic III. To gather information about potential attackers IV. To", "MaxTokenProbability": "III", "Perplexity": 6.17, "GroundTruth": "III. Network, vulnerability, and port ", "Score": 1.0}, {"Index": 56, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A sender must not be able to deny sending a message that was sent, is known as Choices: I. Message Nonrepudiation II. Message Integrity III. Message Sending IV. Message Condentiality Answer:\n", "Result": "II. Message Integrity\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security risk associated with using a password as a second factor? Choices: I. The password is not secure II. The user may not be able to remember the password III. The", "MaxTokenProbability": "II", "Perplexity": 7.02, "GroundTruth": "I. Message Nonrepudiation", "Score": 0.0}, {"Index": 57, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A proxy rewall lters at the Choices: I. Data link layer II. Physical layer III. Network layer IV. Application layer Answer:\n", "Result": "III. Network layer\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a type of cryptanalysis attack? Choices: I. Brute force attack II. Side-channel attack III. Differential attack IV. Linear cryptanalysis attack Answer:\nIII.", "MaxTokenProbability": "III", "Perplexity": 10.43, "GroundTruth": "IV. Application layer", "Score": 0.0}, {"Index": 58, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Encapsulating Security Payload (ESP) belongs to which Internet Security Protocol? Choices: I. Secure Http Protocol II. Transport Layer Security Protocol III. Secure IP Protocol IV. Secure Socket Layer Protocol Answer:\n", "Result": "IV. Secure Socket Layer Protocol\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security consideration when using SSL/TLS? Choices: I. The client\u2019s private key is compromised II. The server\u2019s private key is comprom", "MaxTokenProbability": "IV", "Perplexity": 9.77, "GroundTruth": "III. Secure IP Protocol", "Score": 0.0}, {"Index": 59, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A special tool is necessary for entering the network which is _______________ that helps the anonymous internet users to access into the Tor\u2019s network and use various Tor services. Choices: I. Tor browser II. Firefox III. Opera browser IV. Chrome Answer:\n", "Result": "I. Tor browser\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the main advantage of using a VPN? Choices: I. To hide your IP address II. To encrypt your internet traffic III. To access geo-restricted content IV. To bypass", "MaxTokenProbability": "I", "Perplexity": 9.09, "GroundTruth": "I. Tor browser", "Score": 1.0}, {"Index": 60, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: How does a buffer overflow on the stack facilitate running attacker-injected code? Choices: I. By writing directly to the instruction pointer register the address of the code II. By changing the name of the running executable, stored on the stack III. By writing directly to %eax the address of the code IV. By overwriting the return address to point to the location of that code Answer:\n", "Result": "II. By changing the name of the running executable, stored on the stack\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the Address Space Layout Randomization (ASLR) feature? Choices: I. To make it more difficult for attackers to predict where", "MaxTokenProbability": "II", "Perplexity": 6.85, "GroundTruth": "IV. By overwriting the return address to point to the location of that code", "Score": 0.0}, {"Index": 61, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The digest created by a hash function is normally called a Choices: I. Message authentication control II. Modication detection code (MDC) III. Modify authentication connection IV. Message authentication cipher Answer:\n", "Result": "II. Modification detection code (MDC)\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" field in an SSL/TLS handshake? Choices: I. To prevent replay attacks II. To prevent man-in", "MaxTokenProbability": "II", "Perplexity": 10.06, "GroundTruth": "II. Modication detection code (MDC)", "Score": 1.0}, {"Index": 62, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let F: K \\times R \\to MF:K\u00d7R\u2192M be a secure PRF. For m \\in Mm\u2208M define E(k,m) = \\big[ r \\gets R,\\ \\text{output } \\big(r,\\ F(k,r) \\oplus m\\big)\\ \\big]E(k,m)=[r\u2190R, output (r, F(k,r)\u2295m) ] Is EE symantically secure under CPA? Choices: I. Yes, but only if R is large enough so r never repeats (w.h.p) II. No, there is always a CPA attack on this system III. Yes, whenever F is a secure PRF IV. It depends on what F is used Answer:\n", "Result": "IV. It depends on what F is used\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let G be a probabilistic algorithm that computes a function f: N \u2192 Nf:N\u2192N. Suppose that G is secure under chosen ciphertext attack (CCA2).", "MaxTokenProbability": "IV", "Perplexity": 10.2, "GroundTruth": "I. Yes, but only if R is large enough so r never repeats (w.h.p)", "Score": 0.0}, {"Index": 63, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Old operating systems like _______ and NT-based systems have buffer-overflow attack a common vulnerability. Choices: I. IOS12 II. UNIX III. Windows 7 IV. Chrome Answer:\n", "Result": "III. Windows 7\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security benefit of using a hardware security module (HSM)? Choices: I. It provides secure storage for cryptographic keys II. It provides secure computation for cryptographic algorithms III.", "MaxTokenProbability": "III", "Perplexity": 7.7, "GroundTruth": "II. UNIX", "Score": 0.0}, {"Index": 64, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a replay attack? Choices: I. An attack that continuously repeats, probing for a weakness II. When the attacker replies to a message sent to it by the system III. The attacker resends a captured message, and the site accept its and responds in the attacker's favor IV. An attack that uses the system's own messages and so cannot be defended against Answer:\n", "Result": "II. When the attacker replies to a message sent to it by the system\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a man-in-the-middle attack? Choices: I. An attacker intercepts and alters messages between two parties II.", "MaxTokenProbability": "II", "Perplexity": 9.93, "GroundTruth": "III. The attacker resends a captured message, and the site accept its and responds in the attacker's favor", "Score": 0.0}, {"Index": 65, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| A U2F USB dongle prevents malware on the user\u2019s computer from stealing the user\u2019s second factor to authenticate as that user even when the user\u2019s computer is turned off. Statement 2| A server using U2F can reliably determine that the user who is attempting to login is indeed behind the computer that sent the login request. Choices: I. False, False II. True, True III. True, False IV. False, True Answer:\n", "Result": "II. True, True\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security consideration when using a password-authenticated key exchange (PAKE)? Choices: I. The password must be kept secret II. The password must be transmitted in plaintext", "MaxTokenProbability": "II", "Perplexity": 8.79, "GroundTruth": "III. True, False", "Score": 0.0}, {"Index": 66, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ____________________ is the anticipation of unauthorized access or break to computers or data by means of wireless networks. Choices: I. Wireless security II. Wired device apps III. Wired Security IV. Wireless access Answer:\n", "Result": "I. Wireless security\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"rekey\" command in OpenSSL? Choices: I. To change the encryption algorithm used for the session II. To change the key used for the session III. To", "MaxTokenProbability": "I", "Perplexity": 7.23, "GroundTruth": "I. Wireless security", "Score": 1.0}, {"Index": 67, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following are benefits of penetration testing? Choices: I. Full evidence of security: a clean test means a secure system II. Makes an adversarial neural network converge more quickly III. Compositionality of security properties means tested components are secure even if others change IV. Results are often reproducible Answer:\n", "Result": "II. Makes an adversarial neural network converge more quickly\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security benefit of using a hardware security module (HSM)? Choices: I. Protection against side-channel attacks II. Protection against", "MaxTokenProbability": "II", "Perplexity": 9.0, "GroundTruth": "IV. Results are often reproducible", "Score": 0.0}, {"Index": 68, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: 1. _________ framework made cracking of vulnerabilities easy like point and click. Choices: I. Ettercap II. .Net III. Zeus IV. Metasploit Answer:\n", "Result": "IV. Metasploit\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"replay\" attack? Choices: I. To prevent the recipient from recognizing the message as a replay II. To make the recipient believe the message is", "MaxTokenProbability": "IV", "Perplexity": 8.52, "GroundTruth": "IV. Metasploit", "Score": 1.0}, {"Index": 69, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: You are given a message (m) and its OTP encryption (c). Can you compute the OTP key from m and c ? Choices: I. Yes, the key is k = m xor m. II. I can only compute half the bits of the key. III. Yes, the key is k = m xor c. IV. No, I cannot compute the key. Answer:\n", "Result": "IV. No, I cannot compute the key.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" field in an SSL/TLS record? Choices: I. To prevent replay attacks II. To prevent man-in-the", "MaxTokenProbability": "IV", "Perplexity": 7.15, "GroundTruth": "III. Yes, the key is k = m xor c.", "Score": 0.0}, {"Index": 70, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR and MR\n2. CR Choices: I. True, True II. False, False III. True, False IV. False, True Answer:\n", "Result": "IV. False, True\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a system that uses a password-based authentication scheme. The password is hashed using a cryptographic hash function, and the resulting hash value is stored in the user\u2019s account. An attacker tries to", "MaxTokenProbability": "IV", "Perplexity": 9.76, "GroundTruth": "I. True, True", "Score": 0.0}, {"Index": 71, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: When the data must arrive at the receiver exactly as they were sent, its called Choices: I. Message Sending II. Message Condentiality III. Message Integrity IV. Message Splashing Answer:\n", "Result": "II. Message Condentiality\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security benefit of using a hardware security module (HSM)? Choices: I. It provides a secure environment for cryptographic operations II. It provides a secure environment for non-", "MaxTokenProbability": "II", "Perplexity": 7.76, "GroundTruth": "III. Message Integrity", "Score": 0.0}, {"Index": 72, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the difference between a direct leak and a side channel? Choices: I. A direct leak comes via the software system's intended interaction mechanism, where as a side channel leak comes from measurements of other system features, like timing, power usage, or space usage II. A direct leak is one that is intentional, rather than by unintentional III. There is no difference IV. A direct leak creates a denial of service by failing to free memory, while a channel frees memory as a side effect Answer:\n", "Result": "II. A direct leak is one that is intentional, rather than by unintentional\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a digital signature? Choices: I. To prove ownership of a message II. To prove the authenticity of a message", "MaxTokenProbability": "II", "Perplexity": 7.92, "GroundTruth": "I. A direct leak comes via the software system's intended interaction mechanism, where as a side channel leak comes from measurements of other system features, like timing, power usage, or space usage", "Score": 0.0}, {"Index": 73, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A session symmetric key between two parties is used Choices: I. Twice II. Conditions dependant III. Multiple times IV. Only once Answer:\n", "Result": "IV. Only once\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A cryptographic hash function is used to: Choices: I. Generate a message digest II. Generate a digital signature III. Generate a public key IV. Generate a private key Answer:\n", "MaxTokenProbability": "IV", "Perplexity": 11.46, "GroundTruth": "IV. Only once", "Score": 1.0}, {"Index": 74, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a nop sled Choices: I. It is another name for a branch instruction at the end of sequence of nops II. It is an anonymous version of a mop sled III. It is a sequence of nops preceding injected shellcode, useful when the return address is unknown IV. It is a method of removing zero bytes from shellcode Answer:\n", "Result": "III. It is a sequence of nops preceding injected shellcode, useful when the return address is unknown\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"heartbeat\" mechanism in the OpenSSL Heartbleed vulnerability? Choices: I", "MaxTokenProbability": "III", "Perplexity": 9.92, "GroundTruth": "III. It is a sequence of nops preceding injected shellcode, useful when the return address is unknown", "Score": 1.0}, {"Index": 75, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which Nmap scan is does not completely open a TCP connection? Choices: I. XMAS tree scan II. ACK scan III. SYN stealth scan IV. TCP connect Answer:\n", "Result": "III. SYN stealth scan\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" field in the TLS handshake? Choices: I. To ensure the client and server are using the same IV for encryption II. To provide a", "MaxTokenProbability": "III", "Perplexity": 6.7, "GroundTruth": "III. SYN stealth scan", "Score": 1.0}, {"Index": 76, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Based on the paper \u201cClick Trajectories: End-to-End Analysis of the Spam Value Chain\u201d, which of the following statements are true? \u201cSpammers\u201d here refer to operators of various parts of the \u201cspam value chain.\u201d Choices: I. B and C II. There is a high cost for spammers to switch acquiring banks. III. Spammers run their spam-advertised web sites on compromised user machines that are part of a botnet. IV. Spammers need to register domain names in order for their spam-based advertisements to be effective. Answer:\n", "Result": "II. There is a high cost for spammers to switch acquiring banks.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \u201cnonce\u201d field in the IPsec ESP protocol? Choices: I. To provide a unique identifier for each ESP", "MaxTokenProbability": "II", "Perplexity": 7.74, "GroundTruth": "I. B and C", "Score": 0.0}, {"Index": 77, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In a _____________ attack, the extra data that holds some specific instructions in the memory for actions is projected by a cyber-criminal or penetration tester to crack the system. Choices: I. Buffer-overflow II. Phishing III. Clickjacking IV. MiTM Answer:\n", "Result": "I. Buffer-overflow\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider a system that uses a symmetric key algorithm (e.g. AES) with a fixed key size (e.g. 128 bits). If an attacker is able to obtain the key", "MaxTokenProbability": "I", "Perplexity": 8.72, "GroundTruth": "I. Buffer-overflow", "Score": 1.0}, {"Index": 78, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: _______________ is a popular tool used for network analysis in multiprotocol diverse network. Choices: I. EtterPeak II. Snort III. SuperScan IV. Burp Suit Answer:\n", "Result": "III. SuperScan\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the primary goal of a penetration test? Choices: I. To identify vulnerabilities in a system II. To fix vulnerabilities in a system III. To determine the likelihood of a successful attack", "MaxTokenProbability": "III", "Perplexity": 9.49, "GroundTruth": "I. EtterPeak", "Score": 0.0}, {"Index": 79, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ___________________ is alike as that of Access Point (AP) from 802.11, & the mobile operators uses it for offering signal coverage. Choices: I. Base Transmitter Station II. Base Signal Station III. Transceiver Station IV. Base Transceiver Station Answer:\n", "Result": "IV. Base Transceiver Station\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the primary goal of a penetration test? Choices: I. To identify vulnerabilities in a computer system II. To assess the security posture of an organization III. To identify potential", "MaxTokenProbability": "IV", "Perplexity": 7.98, "GroundTruth": "IV. Base Transceiver Station", "Score": 1.0}, {"Index": 80, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A __________ is a sequential segment of the memory location that is allocated for containing some data such as a character string or an array of integers. Choices: I. stack II. queue III. external storage IV. buffer Answer:\n", "Result": "III. external storage\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security benefit of using a hardware security module (HSM)? Choices: I. It provides secure storage for cryptographic keys. II. It provides secure computation for cryptographic algorithms. III", "MaxTokenProbability": "III", "Perplexity": 8.22, "GroundTruth": "IV. buffer", "Score": 0.0}, {"Index": 81, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which form of encryption does WPA use? Choices: I. TKIP II. LEAP III. Shared key IV. AES Answer:\n", "Result": "II. LEAP\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the Secure Boot feature in a modern computer system? Choices: I. To ensure that only trusted software can run on the system II. To protect the system from malware III.", "MaxTokenProbability": "II", "Perplexity": 8.24, "GroundTruth": "I. TKIP", "Score": 0.0}, {"Index": 82, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let suppose a search box of an application can take at most 200 words, and you\u2019ve inserted more than that and pressed the search button; the system crashes. Usually this is because of limited __________ Choices: I. buffer II. local storage III. external storage IV. processing power Answer:\n", "Result": "II. local storage\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" field in an HTTP request? Choices: I. To prevent replay attacks II. To prevent cache poisoning III. To prevent request forgery IV. To prevent", "MaxTokenProbability": "II", "Perplexity": 8.94, "GroundTruth": "I. buffer", "Score": 0.0}, {"Index": 83, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ___________________ began to show up few years back on wireless access points as a new way of adding or connecting new devices. Choices: I. WPS II. WPA III. WEP IV. WPA2 Answer:\n", "Result": "II. WPA\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the main advantage of using a hardware security module (HSM) over a software-based security solution? Choices: I. Cost II. Performance III. Security IV. Ease of use Answer:\n", "MaxTokenProbability": "II", "Perplexity": 7.81, "GroundTruth": "I. WPS", "Score": 0.0}, {"Index": 84, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What are the port states determined by Nmap? Choices: I. Active, closed, unused II. Open, filtered, unfiltered III. Open, half-open, closed  IV. Active, inactive, standby Answer:\n", "Result": "II. Open, filtered, unfiltered\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a honeypot? Choices: I. To detect and alert on malicious activity II. To detect and alert on legitimate activity III. To detect and", "MaxTokenProbability": "II", "Perplexity": 6.86, "GroundTruth": "II. Open, filtered, unfiltered", "Score": 1.0}, {"Index": 85, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which among the following is the least strong security encryption standard? Choices: I. WEP II. WPA2 III. WPA IV. WPA3 Answer:\n", "Result": "II. WPA2\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" field in an SSL/TLS handshake? Choices: I. To ensure that the client and server have the same IV values. II. To provide", "MaxTokenProbability": "II", "Perplexity": 6.03, "GroundTruth": "I. WEP", "Score": 0.0}, {"Index": 86, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that the compiler does not know the absolute address of a local variable? Choices: I. Compiler writers are not very good at that sort of thing II. As a stack-allocated variable, it could have different addresses depending on when its containing function is called III. The size of the address depends on the architecture the program will run on IV. Programs are not allowed to reference memory using absolute addresses Answer:\n", "Result": "III. The size of the address depends on the architecture the program will run on\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"ret\" instruction in a program? Choices: I. To return a value from a function II. To jump to a", "MaxTokenProbability": "III", "Perplexity": 7.07, "GroundTruth": "II. As a stack-allocated variable, it could have different addresses depending on when its containing function is called", "Score": 0.0}, {"Index": 87, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The stack is memory for storing Choices: I. Global variables II. Local variables III. Dynamically linked libraries IV. Program code Answer:\n", "Result": "II. Local variables\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the verification process in SSL/TLS? Choices: I. To ensure that the client and server are who they claim to be II. To ensure that the client and server are using", "MaxTokenProbability": "II", "Perplexity": 7.47, "GroundTruth": "II. Local variables", "Score": 1.0}, {"Index": 88, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can a stream cipher have perfect secrecy? Choices: I. No, since the key is shorter than the message II. No, there are no ciphers with perfect secrecy III. Yes, if the PRG is really \u201csecure\u201d IV. Yes, every cipher has perfect secrecy Answer:\n", "Result": "III. Yes, if the PRG is really \u201csecure\u201d\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the difference between a side-channel attack and a traditional attack? Choices: I. A side-channel attack exploits a weakness in the implementation of a", "MaxTokenProbability": "III", "Perplexity": 8.73, "GroundTruth": "I. No, since the key is shorter than the message", "Score": 0.0}, {"Index": 89, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authorization aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Flag the user if he/she misbehaves III. Determine if the user is an attacker IV. Determine who the user is Answer:\n", "Result": "II. Flag the user if he/she misbehaves\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a security concern in the context of web applications? Choices: I. SQL injection II. Cross-site scripting (XSS) III.", "MaxTokenProbability": "II", "Perplexity": 6.4, "GroundTruth": "I. Restrict what operations/data the user can access", "Score": 0.0}, {"Index": 90, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The message must be encrypted at the sender site and decrypted at the Choices: I. Site II. Sender Site III. Conferencing IV. Receiver site Answer:\n", "Result": "I. Site\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the Verify message in the SSL/TLS handshake? Choices: I. To verify the identity of the server II. To verify the identity of the client III. To verify the", "MaxTokenProbability": "I", "Perplexity": 9.0, "GroundTruth": "IV. Receiver site", "Score": 0.0}, {"Index": 91, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A _________________ may be a hidden part of a program, a separate infected program a Trojan in disguise of an executable or code in the firmware of any system\u2019s hardware. Choices: I. virus II. crypter III. backdoor IV. key-logger Answer:\n", "Result": "II. crypter\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a honeypot? Choices: I. To detect and alert on malicious activity II. To detect and alert on legitimate activity III. To distract attackers with fake", "MaxTokenProbability": "II", "Perplexity": 9.04, "GroundTruth": "III. backdoor", "Score": 0.0}, {"Index": 92, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: How is IP address spoofing detected? Choices: I. Identify all TCP sessions that are initiated but does not complete successfully II. Comparing the TTL values of the actual and spoofed addresses III. Installing and configuring a IDS that can read the IP header IV. Implementing a firewall to the network Answer:\n", "Result": "III. Installing and configuring a IDS that can read the IP header\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the OCSP (Online Certificate Status Protocol)? Choices: I. To provide a mechanism for clients to check the", "MaxTokenProbability": "III", "Perplexity": 7.16, "GroundTruth": "II. Comparing the TTL values of the actual and spoofed addresses", "Score": 0.0}, {"Index": 93, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain II. The secure enclave\u2019s ephemeral key III. None of the above IV. System software authorization  Answer:\nIII. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not an example of presentation layer issues? Choices: I. Cryptographic flaws in the system may get exploited to evade privacy II. Poor handling of unexpected input can lead to the execution of arbitrary instructions III. Weak or non-existent authentication mechanisms IV. Unintentional or ill-directed use of superficially supplied input Answer:\n", "Result": "IV. Unintentional or ill-directed use of superficially supplied input\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a potential security risk associated with the use of a hardware security module (HSM)? Choices: I. The HSM", "MaxTokenProbability": "IV", "Perplexity": 8.64, "GroundTruth": "III. Weak or non-existent authentication mechanisms", "Score": 0.0}, {"Index": 94, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. False, True II. False, False III. True, False IV. True, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose Unix did not provide a way of passing file descriptors between processes, but still allowed inheriting file descriptors from a parent on fork and exec. What aspects of the OKWS design would break without file descriptor passing?\n1. It would be impossible for services to send messages to oklogd.\n2. It would be impossible for services to get a TCP connection to a database proxy. Choices: I. True, False II. False, False III. True, True IV. False, True Answer:\n", "Result": "I. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"replay\" attack in cryptography? Choices: I. To make a copy of a cryptographic key II. To make a copy of a cryptographic message III. To", "MaxTokenProbability": "I", "Perplexity": 10.1, "GroundTruth": "II. False, False", "Score": 0.0}, {"Index": 95, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why would a ping sweep be used? Choices: I. To identify open ports II. To locate firewalls III. To identify live systems IV. To locate live systems Answer:\n", "Result": "I. To identify open ports\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a honeypot? Choices: I. To detect intruders II. To monitor network traffic III. To gather information IV. To distribute malware Answer:\n", "MaxTokenProbability": "I", "Perplexity": 7.55, "GroundTruth": "III. To identify live systems", "Score": 0.0}, {"Index": 96, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. Option text II. No, it cannot be done III. Yes, just plug the GGM PRF into the Luby-Rackoff theorem IV. It depends on the underlying PRG Answer:\nIII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) II. H\u2019=E(m\u2019,E(m,H)) III. H\u2019=E(m\u2019,D(m,H)) IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The four Primary Security Principles related to messages are Choices: I. Confidentiality, Access Control, Integrity, Non repudiation II. Availability, Authorization, Confidentiality, Integrity III. Confidentiality, Integrity, Non repudiation and Authentication IV. Authentication, Authorization, Availability, Integrity Answer:\n", "Result": "III. Confidentiality, Integrity, Non repudiation and Authentication\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the HMAC-MD5 and HMAC-RIPEMD algorithms? Choices: I. To provide a message authentication", "MaxTokenProbability": "III", "Perplexity": 6.16, "GroundTruth": "III. Confidentiality, Integrity, Non repudiation and Authentication", "Score": 1.0}, {"Index": 97, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True II. True, False III. False, True IV. False, False Answer:\nII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. Whole-system testing for security flaws and bugs II. A security-minded form of unit testing that applies early in the development process III. All of the above IV. A procedure for testing libraries or other program components for vulnerabilities Answer:\nI. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What was the first buffer overflow attack? Choices: I. Morris Worm II. Code Red III. Love Bug IV. SQL Slammer Answer:\n", "Result": "I. Morris Worm\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the primary goal of a vulnerability scanner? Choices: I. To identify potential security threats II. To provide a comprehensive security assessment III. To prioritize vulnerabilities based on", "MaxTokenProbability": "I", "Perplexity": 8.07, "GroundTruth": "I. Morris Worm", "Score": 1.0}, {"Index": 98, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Violated II. Overview III. Changed IV. Replaced Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The ______________ can cost you money, by sending text messages from your mobile phone numbers. Choices: I. Ransom Trojan II. SMS Trojan III. IM \u2013 Trojans IV. Backdoor Trojans Answer:\n", "Result": "II. SMS Trojan\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of the \"nonce\" in the OAuth 2.0 protocol? Choices: I. To ensure that a user's account is not compromised by an attacker II", "MaxTokenProbability": "II", "Perplexity": 7.94, "GroundTruth": "II. SMS Trojan", "Score": 1.0}, {"Index": 99, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True II. False, True III. False, False IV. True, False Answer:\nIV. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access II. Determine if the user is an attacker III. Flag the user if he/she misbehaves IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. Anti-virus scanners tend to look for viruses and other malicious II. Heartbleed attacks the anti-virus scanner itself III. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Three of the following are classic security properties; which one is not? Choices: I. Correctness II. Integrity III. Confidentiality IV. Availability Answer:\n", "Result": "IV. Availability\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the purpose of a security policy? Choices: I. To provide a set of rules for security II. To ensure that security is integrated into all aspects of the organization III. To provide a set of", "MaxTokenProbability": "IV", "Perplexity": 6.55, "GroundTruth": "IV. Availability", "Score": 1.0}]}}