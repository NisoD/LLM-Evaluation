{"card": "cards.mmlu.computer_security", "template_name": "template_54", "model_name": "allenai/OLMo-1.7-7B-hf", "system_format": "empty_system_format", "max_instances": 1600, "num_demos": 3, "demos_pool_size": 20, "results": {"test": [{"Index": 0, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following styles of fuzzer is more likely to explore paths covering every line of code in the following program? Choices: I. Generational or II. Blackbox or III. Whitebox or IV. Mutation-based Answer:\n", "Result": "III. Whitebox\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion", "MaxTokenProbability": null, "GroundTruth": "III. Whitebox", "Score": 1.0}, {"Index": 1, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replaying bytes that a client sent earlier.\n2. An attacker impersonating the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\n", "Result": "I. True, True", "MaxTokenProbability": null, "GroundTruth": "I. True, True", "Score": 1.0}, {"Index": 2, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: MIT\u2019s Kerberos KDC server has a maximum ticket lifetime of 24 hours (for most user principals). What ensures that an expired Kerberos ticket can no longer be used? Choices: I. The Kerberos server (KDC) refuses to establish new connections between clients and servers for expired tickets. or II. When a client connects to a server, the server sets a 24-hour timer to terminate the connection, which ensures a client cannot remain connected past the ticket\u2019s maximum lifetime. or III. When a client connects to a server, the server compares the ticket\u2019s expiration time to the server\u2019s current clock, and refuses to authenticate the user if the ticket expiration time is in the past. or IV. When a client connects to a server, the server sends a query to the KDC to check if the ticket is still valid with respect to the KDC\u2019s clock, and refuses to authenticate the user if the KDC reports that the ticket is expired. Answer:\n", "Result": "III. When a client connects to a server, the server compares the ticket\u2019s expiration time to the server\u2019s current", "MaxTokenProbability": null, "GroundTruth": "III. When a client connects to a server, the server compares the ticket\u2019s expiration time to the server\u2019s current clock, and refuses to authenticate the user if the ticket expiration time is in the past.", "Score": 1.0}, {"Index": 3, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In Message Condentiality, the transmitted message must make sense to only intended Choices: I. Receiver or II. Sender or III. Modulor or IV. Translator Answer:\n", "Result": "I. Receiver", "MaxTokenProbability": null, "GroundTruth": "I. Receiver", "Score": 1.0}, {"Index": 4, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a remote Trojan? Choices: I. Troya or II. DaCryptic or III. BankerA or IV. Game-Troj Answer:\n", "Result": "I. Troya", "MaxTokenProbability": null, "GroundTruth": "I. Troya", "Score": 1.0}, {"Index": 5, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ______________ is a widespread app\u2019s coding mistake made by developers which could be exploited by an attacker for gaining access or malfunctioning your system. Choices: I. Memory leakage or II. Buffer-overrun or III. Less processing power or IV. Inefficient programming Answer:\n", "Result": "II. Buffer-overrun", "MaxTokenProbability": null, "GroundTruth": "II. Buffer-overrun", "Score": 1.0}, {"Index": 6, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider the paper Native Client: A Sandbox for Portable, Untrusted x86 Native Code by Yee et al. Ben Bitdiddle notes that NaCl uses Intel x86 segmentation to ensure that the sandboxed module does not read or write memory outside its own data area, and does not execute instructions outside its own code. Ben thinks that with these restrictions alone, executing the sandboxed module must be safe; that is, he thinks validation is not needed. Ben is wrong. Circle the types of x86 machine instructions that the validator always forbids in sandboxed code. Please ignore trampoline and springboard code. Choices: I. all instructions that modify segment state or II. all loads or stores to addresses that are not 0 mod 32 or III. all indirect loads or stores (via an address in a register or variable) or IV. all indirect jumps (via an address in a register or variable) Answer:\n", "Result": "III. all indirect loads or stores (via an address in a register or variable)", "MaxTokenProbability": null, "GroundTruth": "I. all instructions that modify segment state", "Score": 0.0}, {"Index": 7, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ____________ is also a part of darknet that is employed for transferring files anonymously. Choices: I. Freenet or II. ARPANET or III. Stuxnet or IV. Internet Answer:\n", "Result": "I. Freenet", "MaxTokenProbability": null, "GroundTruth": "I. Freenet", "Score": 1.0}, {"Index": 8, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why apps developed in languages like C, C++ is prone to Buffer-overflow? Choices: I. No string boundary checks in predefined functions or II. No storage check in the external memory or III. No processing power check or IV. No database check Answer:\n", "Result": "I. No string boundary checks in predefined functions", "MaxTokenProbability": null, "GroundTruth": "I. No string boundary checks in predefined functions", "Score": 1.0}, {"Index": 9, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Man in the middle attack can endanger the security of Diffie Hellman method if two parties are not Choices: I. Joined or II. Authenticated or III. Submitted or IV. Shared Answer:\n", "Result": "II. Authenticated", "MaxTokenProbability": null, "GroundTruth": "II. Authenticated", "Score": 1.0}, {"Index": 10, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: An integer overflow occurs when Choices: I. an integer expression's result \"wraps around\"; instead of creating a very large number, a very small (or negative) number ends up getting created or II. an integer is used as if it was a pointer or III. an integer is used to access a buffer outside of the buffer's bounds or IV. there is no more space to hold integers in the program Answer:\n", "Result": "III. an integer is used to access a buffer outside of the buffer's bounds", "MaxTokenProbability": null, "GroundTruth": "IV. there is no more space to hold integers in the program", "Score": 0.0}, {"Index": 11, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let HH be a Merkle-Damgard hash function is H:X^{\\leq L} \\to TH:X^\u2264L  \u2192T. Construct a MAC from this HH as follows: \\ \\ S(k,m) = H(k \\| m)  S(k,m)=H(k\u2225m). This mac is insecure because: Choices: I. Given H(k \\| m)H(k\u2225m) anyone can compute H(w \\| k \\| m \\| \\text{PB})H(w\u2225k\u2225m\u2225PB) for any ww or II. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| w)H(k\u2225m\u2225w) for any ww or III. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| \\text{PB} \\| w)H(k\u2225m\u2225PB\u2225w) for any ww or IV. Anyone can compute H( k \\| m )H(k\u2225m) for any mm Answer:\n", "Result": "I. Given H(k \\| m)H(k\u2225m) anyone can compute H(w \\| k \\|", "MaxTokenProbability": null, "GroundTruth": "III. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| \\text{PB} \\| w)H(k\u2225m\u2225PB\u2225w) for any ww", "Score": 0.0}, {"Index": 12, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose that Alice and Bob sent confidential text messages to one another last month through an encrypted messaging system. Alice and Bob are worried that an adversary might compromise one of their computers today, while they are taking the 6.858 final exam, and would then be able to decrypt those messages. Which of the following security properties can address Alice and Bob\u2019s concern? Choices: I. Authentication. or II. Deniability. or III. Forward secrecy or IV. Backward secrecy. Answer:\n", "Result": "III. Forward secrecy", "MaxTokenProbability": null, "GroundTruth": "III. Forward secrecy", "Score": 1.0}, {"Index": 13, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The AH Protocol provides source authentication and data integrity, but not Choices: I. Integrity or II. Privacy or III. Nonrepudiation or IV. Both A & C Answer:\n", "Result": "IV. Both A & C", "MaxTokenProbability": null, "GroundTruth": "II. Privacy", "Score": 0.0}, {"Index": 14, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a security exploit? Choices: I. Eavesdropping or II. Cross-site scripting or III. Authentication or IV. SQL Injection Answer:\n", "Result": "I. Eavesdropping or", "MaxTokenProbability": null, "GroundTruth": "III. Authentication", "Score": 0.0}, {"Index": 15, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: _______________ is the central node of 802.11 wireless operations. Choices: I. WPA or II. Access Point or III. WAP or IV. Access Port Answer:\n", "Result": "I. WPA or", "MaxTokenProbability": null, "GroundTruth": "II. Access Point", "Score": 0.0}, {"Index": 16, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In MD-5 the length of the message digest is Choices: I. 160 or II. 128 or III. 64 or IV. 54 Answer:\n", "Result": "I. 160", "MaxTokenProbability": null, "GroundTruth": "II. 128", "Score": 0.0}, {"Index": 17, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is Nmap? Choices: I. It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might be at those addresses, based on the responses or II. It is a network fuzz testing tool or III. It is a map of the Internet or IV. It is a suite of tools for scripting attacks: probe, construct, encode, inject, wait for response Answer:\n", "Result": "I. It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might", "MaxTokenProbability": null, "GroundTruth": "I. It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might be at those addresses, based on the responses", "Score": 1.0}, {"Index": 18, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: How do you prevent SQL injection? Choices: I. Escape queries or II. Interrupt requests or III. Merge tables or IV. All of the above Answer:\n", "Result": "I. Escape queries", "MaxTokenProbability": null, "GroundTruth": "I. Escape queries", "Score": 1.0}, {"Index": 19, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What does it mean to \"be stealthy\" during a penetration test? Choices: I. Performing the tests from an undisclosed location or II. Using encryption during tests to make the source of attacks impossible to determine or III. Performing penetration testing without the target organization knowing or IV. Taking care to avoid activities during a penetration test that might attract attention, e.g., by operators or IDS services Answer:\n", "Result": "III. Performing penetration testing without the target organization knowing", "MaxTokenProbability": null, "GroundTruth": "IV. Taking care to avoid activities during a penetration test that might attract attention, e.g., by operators or IDS services", "Score": 0.0}, {"Index": 20, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a transport layer vulnerability? Choices: I. Mishandling of undefined, poorly defined variables or II. The Vulnerability that allows \u201cfingerprinting\u201d & other enumeration of host information or III. Overloading of transport-layer mechanisms or IV. Unauthorized network access Answer:\n", "Result": "III. Overloading of transport-layer mechanisms\n\nQuestion: [question] Choices: [choices] Answer:", "MaxTokenProbability": null, "GroundTruth": "IV. Unauthorized network access", "Score": 0.0}, {"Index": 21, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In Brumley and Boneh\u2019s paper on side-channel attacks, why does blinding prevent the timing attack from working? Choices: I. Blinding prevents the server from using the CRT optimization, which is essential to the timing attack. or II. Blinding changes the p and q primes that are used, so an adversary cannot learn the server\u2019s true p and q values. or III. Blinding randomizes the ciphertext being decrypted, thus obscuring the correlation between an adversary\u2019s input and the timing differences. or IV. Blinding adds a random amount of time to the decryption due to the multiplication and division by the blinding random value r, which obscures the timing differences used in the attack. Answer:\n", "Result": "IV. Blinding adds a random amount of time to the decryption due to the multiplication and division by the blinding random value", "MaxTokenProbability": null, "GroundTruth": "III. Blinding randomizes the ciphertext being decrypted, thus obscuring the correlation between an adversary\u2019s input and the timing differences.", "Score": 0.0}, {"Index": 22, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. RS and KM\n2. RS and MR Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\n", "Result": "I. True, True", "MaxTokenProbability": null, "GroundTruth": "IV. False, True", "Score": 0.0}, {"Index": 23, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Public key encryption is advantageous over Symmetric key Cryptography because of Choices: I. Speed or II. Space or III. Key exchange or IV. Key length Answer:\n", "Result": "III. Key exchange", "MaxTokenProbability": null, "GroundTruth": "III. Key exchange", "Score": 1.0}, {"Index": 24, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The __________ was a huge marketplace of Dark Web specifically famous for selling of illegal drugs & narcotics as well as you can find a wide range of other goods for sale. Choices: I. Silk Road or II. Cotton Road or III. Dark Road or IV. Drug Road Answer:\n", "Result": "I. Silk Road", "MaxTokenProbability": null, "GroundTruth": "I. Silk Road", "Score": 1.0}, {"Index": 25, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The ______________ is categorized as an unknown segment of the Deep Web which has been purposely kept hidden & is inaccessible using standard web browsers. Choices: I. Haunted web or II. World Wide Web or III. Dark web or IV. Surface web Answer:\n", "Result": "III. Dark web", "MaxTokenProbability": null, "GroundTruth": "III. Dark web", "Score": 1.0}, {"Index": 26, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What does EXE do when the STP solver times out on a constraint query for a particular path? Choices: I. Assume that the query is satisfiable and continue executing the path. or II. Assume that the query is not satisfiable and stop executing the path or III. Restart STP and retry the query, up to a limited number of retries. or IV. Remove a subset of the constraints and retry the query. Answer:\n", "Result": "III. Restart STP and retry the query, up to a limited number of retries.", "MaxTokenProbability": null, "GroundTruth": "II. Assume that the query is not satisfiable and stop executing the path", "Score": 0.0}, {"Index": 27, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: To verify a digital signature we need the Choices: I. Sender\u2019s Private key or II. Sender\u2019s Public key or III. Receiver\u2019s Private key or IV. Receiver\u2019s Public key Answer:\n", "Result": "I. Sender\u2019s Private key", "MaxTokenProbability": null, "GroundTruth": "II. Sender\u2019s Public key", "Score": 0.0}, {"Index": 28, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose you want to use fuzzing on a program to try to find memory errors; which of the following statements is true? Choices: I. You should not use a grammar-based fuzzer, because its adherence to the grammar means it will not find memory errors or II. Compiling the program with address sanitizer (ASAN) will make errors harder to reproduce or III. Compiling the program with address sanitizer (ASAN) will make the source of a memory error easier to find or IV. Fuzzing doesn't find memory errors, it finds crashes and hangs Answer:\n", "Result": "I. You should not use a grammar-based fuzzer, because its adherence to the grammar means it will not find", "MaxTokenProbability": null, "GroundTruth": "III. Compiling the program with address sanitizer (ASAN) will make the source of a memory error easier to find", "Score": 0.0}, {"Index": 29, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Based on the paper \u201cSoK: SSL and HTTPS: Revisiting past challenges and evaluating certificates trust model enhancements\u201d, which of the following statements are false? Choices: I. Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates. or II. OCSP stapling allows a server to prove to a browser that its certificate hasn\u2019t been revoked. or III. DANE makes it difficult for an adversary to launch a SSL stripping attack. or IV. Server key-pinning makes it harder for an adversary to convince a CA to mint a certificate for a site and launch an MITM attack on that site. Answer:\n", "Result": "IV. Server key-pinning makes it harder for an adversary to convince a CA to mint a certificate for a site and", "MaxTokenProbability": null, "GroundTruth": "I. Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates.", "Score": 0.0}, {"Index": 30, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What tool can be used to perform SNMP enumeration? Choices: I. DNSlookup or II. Whois or III. Nslookup or IV. IP Network Browser Answer:\n", "Result": "III. Nslookup", "MaxTokenProbability": null, "GroundTruth": "IV. IP Network Browser", "Score": 0.0}, {"Index": 31, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which among them has the strongest wireless security? Choices: I. WEP or II. WPA or III. WPA2 or IV. WPA3 Answer:\n", "Result": "III. WPA2", "MaxTokenProbability": null, "GroundTruth": "IV. WPA3", "Score": 0.0}, {"Index": 32, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose Unix did not provide a way of passing file descriptors between processes, but still allowed inheriting file descriptors from a parent on fork and exec. What aspects of the OKWS design would break without file descriptor passing?\n1. It would be impossible for services to get a TCP connection to the client web browser.\n2. It would be impossible for okd to run as a non-root user. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\n", "Result": "I. True, True", "MaxTokenProbability": null, "GroundTruth": "III. True, False", "Score": 0.0}, {"Index": 33, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Failed sessions allow brute-force attacks on access credentials. This type of attacks are done in which layer of the OSI model? Choices: I. Physical layer or II. Data-link Layer or III. Session layer or IV. Presentation layer Answer:\n", "Result": "III. Session layer", "MaxTokenProbability": null, "GroundTruth": "III. Session layer", "Score": 1.0}, {"Index": 34, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is an authentication method? Choices: I. Secret question or II. Biometric or III. SMS code or IV. All of the above Answer:\n", "Result": "I. Secret question or", "MaxTokenProbability": null, "GroundTruth": "IV. All of the above", "Score": 0.0}, {"Index": 35, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: When does a buffer overflow occur, generally speaking? Choices: I. when writing to a pointer that has been freed or II. when copying a buffer from the stack to the heap or III. when a pointer is used to access memory not allocated to it or IV. when the program notices a buffer has filled up, and so starts to reject requests Answer:\n", "Result": "III. when a pointer is used to access memory not allocated to it", "MaxTokenProbability": null, "GroundTruth": "III. when a pointer is used to access memory not allocated to it", "Score": 1.0}, {"Index": 36, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A digital signature needs a Choices: I. Private-key system or II. Shared-key system or III. Public-key system or IV. All of them Answer:\n", "Result": "III. Public-key system", "MaxTokenProbability": null, "GroundTruth": "III. Public-key system", "Score": 1.0}, {"Index": 37, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A packet filter firewall filters at the Choices: I. Application or transport or II. Data link layer or III. Physical Layer or IV. Network or transport layer Answer:\n", "Result": "II. Data link layer", "MaxTokenProbability": null, "GroundTruth": "IV. Network or transport layer", "Score": 0.0}, {"Index": 38, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let I = (S,V)I=(S,V) be a MAC. Suppose S(k,m)S(k,m) is always 5 bits long. Can this MAC be secure? Choices: I. No, an attacker can simply guess the tag for messages or II. It depends on the details of the MAC or III. Yes, the attacker cannot generate a valid tag for any message or IV. Yes, the PRG is pseudorandom Answer:\n", "Result": "III. Yes, the PRG is pseudorandom\n\nQuestion: [question] Choices: [choices]", "MaxTokenProbability": null, "GroundTruth": "I. No, an attacker can simply guess the tag for messages", "Score": 0.0}, {"Index": 39, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following deals with network intrusion detection and real-time traffic analysis? Choices: I. John the Ripper or II. L0phtCrack or III. Snort or IV. Nessus Answer:\n", "Result": "III. Snort\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion", "MaxTokenProbability": null, "GroundTruth": "III. Snort", "Score": 1.0}, {"Index": 40, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The Message condentiality or privacy means that the sender and the receiver expect Choices: I. Integrity or II. Condentiality or III. Authentication or IV. Nonrepudiation Answer:\n", "Result": "I. Integrity or", "MaxTokenProbability": null, "GroundTruth": "II. Condentiality", "Score": 0.0}, {"Index": 41, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: When a wireless user authenticates to any AP, both of them go in the course of four-step authentication progression which is called _____________ Choices: I. AP-handshaking or II. 4-way handshake or III. 4-way connection or IV. wireless handshaking Answer:\n", "Result": "II. 4-way handshake", "MaxTokenProbability": null, "GroundTruth": "II. 4-way handshake", "Score": 1.0}, {"Index": 42, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Message authentication is a service beyond Choices: I. Message Condentiality or II. Message Integrity or III. Message Splashing or IV. Message Sending Answer:\n", "Result": "II. Message Integrity", "MaxTokenProbability": null, "GroundTruth": "II. Message Integrity", "Score": 1.0}, {"Index": 43, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following are most vulnerable to injection attacks? Choices: I. Session IDs or II. Registry keys or III. Network communications or IV. SQL queries based on user input Answer:\n", "Result": "III. Network communications", "MaxTokenProbability": null, "GroundTruth": "IV. SQL queries based on user input", "Score": 0.0}, {"Index": 44, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replacing bytes sent by a client with bytes of the attacker\u2019s own choosing.\n2. An attacker reading the plaintext bytes sent by a client. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\n", "Result": "II. False, False", "MaxTokenProbability": null, "GroundTruth": "I. True, True", "Score": 0.0}, {"Index": 45, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a Wireless traffic Sniffing tool? Choices: I. Maltego or II. BurpSuit or III. Nessus or IV. Wireshark Answer:\n", "Result": "IV. Wireshark\n\nQuestion: [question] Choices: [choices] Answer: [answer]", "MaxTokenProbability": null, "GroundTruth": "IV. Wireshark", "Score": 1.0}, {"Index": 46, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A ___________ is a method in which a computer security mechanism is bypassed untraceable for accessing the computer or its information. Choices: I. front-door or II. backdoor or III. clickjacking or IV. key-logging Answer:\n", "Result": "II. backdoor", "MaxTokenProbability": null, "GroundTruth": "II. backdoor", "Score": 1.0}, {"Index": 47, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a block cipher operating mode? Choices: I. ECB or II. CFB or III. CBF or IV. CBC Answer:\n", "Result": "III. CBF", "MaxTokenProbability": null, "GroundTruth": "III. CBF", "Score": 1.0}, {"Index": 48, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a web proxy? Choices: I. A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server or II. An agent that makes decisions on the client's behalf when interacting with web applications or III. A piece of software that makes a web application look like a standalone application, making it easier to test or IV. A simulator for the web, for use when off-line Answer:\n", "Result": "I. A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server", "MaxTokenProbability": null, "GroundTruth": "I. A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server", "Score": 1.0}, {"Index": 49, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Buffer-overflow may remain as a bug in apps if __________ are not done fully. Choices: I. boundary hacks or II. memory checks or III. boundary checks or IV. buffer checks Answer:\n", "Result": "III. boundary checks", "MaxTokenProbability": null, "GroundTruth": "III. boundary checks", "Score": 1.0}, {"Index": 50, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Applications developed by programming languages like ____ and ______ have this common buffer-overflow error. Choices: I. C, Ruby or II. Python, Ruby or III. C, C++ or IV. Tcl, C# Answer:\n", "Result": "I. C, Ruby", "MaxTokenProbability": null, "GroundTruth": "III. C, C++", "Score": 0.0}, {"Index": 51, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Encryption and decryption provide secrecy, or condentiality, but not Choices: I. Authentication or II. Integrity or III. Privacy or IV. All of the above Answer:\n", "Result": "IV. All of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]", "MaxTokenProbability": null, "GroundTruth": "II. Integrity", "Score": 0.0}, {"Index": 52, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A/an ___________ is a program that steals your logins & passwords for instant messaging applications. Choices: I. IM \u2013 Trojans or II. Backdoor Trojans or III. Trojan-Downloader or IV. Ransom Trojan Answer:\n", "Result": "III. Trojan-Downloader", "MaxTokenProbability": null, "GroundTruth": "I. IM \u2013 Trojans", "Score": 0.0}, {"Index": 53, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The sub key length at each round of DES is__________ Choices: I. 32 or II. 56 or III. 48 or IV. 64 Answer:\n", "Result": "IV. 64", "MaxTokenProbability": null, "GroundTruth": "II. 56", "Score": 0.0}, {"Index": 54, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is true of mutation-based fuzzing? Choices: I. It generates each different input by modifying a prior input or II. It works by making small mutations to the target program to induce faults or III. Each input is mutation that follows a given grammar or IV. It only makes sense for file-based fuzzing, not network-based fuzzing Answer:\n", "Result": "I. It generates each different input by modifying a prior input or", "MaxTokenProbability": null, "GroundTruth": "I. It generates each different input by modifying a prior input", "Score": 1.0}, {"Index": 55, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What are the types of scanning? Choices: I. Port, network, and services or II. Network, vulnerability, and port  or III. Passive, active, and interactive or IV. Server, client, and network Answer:\n", "Result": "I. Port, network, and services", "MaxTokenProbability": null, "GroundTruth": "II. Network, vulnerability, and port ", "Score": 0.0}, {"Index": 56, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A sender must not be able to deny sending a message that was sent, is known as Choices: I. Message Nonrepudiation or II. Message Integrity or III. Message Condentiality or IV. Message Sending Answer:\n", "Result": "I. Message Nonrepudiation", "MaxTokenProbability": null, "GroundTruth": "I. Message Nonrepudiation", "Score": 1.0}, {"Index": 57, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A proxy rewall lters at the Choices: I. Physical layer or II. Application layer or III. Data link layer or IV. Network layer Answer:\n", "Result": "IV. Network layer", "MaxTokenProbability": null, "GroundTruth": "II. Application layer", "Score": 0.0}, {"Index": 58, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Encapsulating Security Payload (ESP) belongs to which Internet Security Protocol? Choices: I. Secure Socket Layer Protocol or II. Secure IP Protocol or III. Secure Http Protocol or IV. Transport Layer Security Protocol Answer:\n", "Result": "IV. Transport Layer Security Protocol\n\nQuestion: [question] Choices: [choices] Answer: [answer]", "MaxTokenProbability": null, "GroundTruth": "II. Secure IP Protocol", "Score": 0.0}, {"Index": 59, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A special tool is necessary for entering the network which is _______________ that helps the anonymous internet users to access into the Tor\u2019s network and use various Tor services. Choices: I. Opera browser or II. Firefox or III. Chrome or IV. Tor browser Answer:\n", "Result": "IV. Tor browser", "MaxTokenProbability": null, "GroundTruth": "IV. Tor browser", "Score": 1.0}, {"Index": 60, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: How does a buffer overflow on the stack facilitate running attacker-injected code? Choices: I. By overwriting the return address to point to the location of that code or II. By writing directly to the instruction pointer register the address of the code or III. By writing directly to %eax the address of the code or IV. By changing the name of the running executable, stored on the stack Answer:\n", "Result": "I. By overwriting the return address to point to the location of that code", "MaxTokenProbability": null, "GroundTruth": "I. By overwriting the return address to point to the location of that code", "Score": 1.0}, {"Index": 61, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The digest created by a hash function is normally called a Choices: I. Modication detection code (MDC) or II. Modify authentication connection or III. Message authentication control or IV. Message authentication cipher Answer:\n", "Result": "III. Message authentication control", "MaxTokenProbability": null, "GroundTruth": "I. Modication detection code (MDC)", "Score": 0.0}, {"Index": 62, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let F: K \\times R \\to MF:K\u00d7R\u2192M be a secure PRF. For m \\in Mm\u2208M define E(k,m) = \\big[ r \\gets R,\\ \\text{output } \\big(r,\\ F(k,r) \\oplus m\\big)\\ \\big]E(k,m)=[r\u2190R, output (r, F(k,r)\u2295m) ] Is EE symantically secure under CPA? Choices: I. Yes, whenever F is a secure PRF or II. No, there is always a CPA attack on this system or III. Yes, but only if R is large enough so r never repeats (w.h.p) or IV. It depends on what F is used Answer:\n", "Result": "I. Yes, whenever F is a secure PRF", "MaxTokenProbability": null, "GroundTruth": "III. Yes, but only if R is large enough so r never repeats (w.h.p)", "Score": 0.0}, {"Index": 63, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Old operating systems like _______ and NT-based systems have buffer-overflow attack a common vulnerability. Choices: I. Windows 7 or II. Chrome or III. IOS12 or IV. UNIX Answer:\n", "Result": "I. Windows 7", "MaxTokenProbability": null, "GroundTruth": "IV. UNIX", "Score": 0.0}, {"Index": 64, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a replay attack? Choices: I. When the attacker replies to a message sent to it by the system or II. An attack that continuously repeats, probing for a weakness or III. An attack that uses the system's own messages and so cannot be defended against or IV. The attacker resends a captured message, and the site accept its and responds in the attacker's favor Answer:\n", "Result": "IV. The attacker resends a captured message, and the site accept its and responds in the attacker's favor\n\nQuestion", "MaxTokenProbability": null, "GroundTruth": "IV. The attacker resends a captured message, and the site accept its and responds in the attacker's favor", "Score": 1.0}, {"Index": 65, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| A U2F USB dongle prevents malware on the user\u2019s computer from stealing the user\u2019s second factor to authenticate as that user even when the user\u2019s computer is turned off. Statement 2| A server using U2F can reliably determine that the user who is attempting to login is indeed behind the computer that sent the login request. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\n", "Result": "III. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\n", "MaxTokenProbability": null, "GroundTruth": "III. True, False", "Score": 1.0}, {"Index": 66, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ____________________ is the anticipation of unauthorized access or break to computers or data by means of wireless networks. Choices: I. Wireless access or II. Wireless security or III. Wired Security or IV. Wired device apps Answer:\n", "Result": "I. Wireless access or", "MaxTokenProbability": null, "GroundTruth": "II. Wireless security", "Score": 0.0}, {"Index": 67, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following are benefits of penetration testing? Choices: I. Results are often reproducible or II. Full evidence of security: a clean test means a secure system or III. Compositionality of security properties means tested components are secure even if others change or IV. Makes an adversarial neural network converge more quickly Answer:\n", "Result": "III. Compositionality of security properties means tested components are secure even if others change\n\nQuestion: [question] Cho", "MaxTokenProbability": null, "GroundTruth": "I. Results are often reproducible", "Score": 0.0}, {"Index": 68, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: 1. _________ framework made cracking of vulnerabilities easy like point and click. Choices: I. .Net or II. Metasploit or III. Zeus or IV. Ettercap Answer:\n", "Result": "II. Metasploit", "MaxTokenProbability": null, "GroundTruth": "II. Metasploit", "Score": 1.0}, {"Index": 69, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: You are given a message (m) and its OTP encryption (c). Can you compute the OTP key from m and c ? Choices: I. No, I cannot compute the key. or II. Yes, the key is k = m xor c. or III. I can only compute half the bits of the key. or IV. Yes, the key is k = m xor m. Answer:\n", "Result": "III. I can only compute half the bits of the key.\n\nQuestion: [question] Choices: [cho", "MaxTokenProbability": null, "GroundTruth": "II. Yes, the key is k = m xor c.", "Score": 0.0}, {"Index": 70, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR and MR\n2. CR Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\n", "Result": "I. True, True", "MaxTokenProbability": null, "GroundTruth": "I. True, True", "Score": 1.0}, {"Index": 71, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: When the data must arrive at the receiver exactly as they were sent, its called Choices: I. Message Condentiality or II. Message Integrity or III. Message Splashing or IV. Message Sending Answer:\n", "Result": "II. Message Integrity", "MaxTokenProbability": null, "GroundTruth": "II. Message Integrity", "Score": 1.0}, {"Index": 72, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is the difference between a direct leak and a side channel? Choices: I. A direct leak creates a denial of service by failing to free memory, while a channel frees memory as a side effect or II. A direct leak is one that is intentional, rather than by unintentional or III. A direct leak comes via the software system's intended interaction mechanism, where as a side channel leak comes from measurements of other system features, like timing, power usage, or space usage or IV. There is no difference Answer:\n", "Result": "II. A direct leak is one that is intentional, rather than by unintentional or", "MaxTokenProbability": null, "GroundTruth": "III. A direct leak comes via the software system's intended interaction mechanism, where as a side channel leak comes from measurements of other system features, like timing, power usage, or space usage", "Score": 0.0}, {"Index": 73, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A session symmetric key between two parties is used Choices: I. Only once or II. Twice or III. Multiple times or IV. Conditions dependant Answer:\n", "Result": "III. Multiple times", "MaxTokenProbability": null, "GroundTruth": "I. Only once", "Score": 0.0}, {"Index": 74, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a nop sled Choices: I. It is an anonymous version of a mop sled or II. It is a sequence of nops preceding injected shellcode, useful when the return address is unknown or III. It is a method of removing zero bytes from shellcode or IV. It is another name for a branch instruction at the end of sequence of nops Answer:\n", "Result": "I. It is an anonymous version of a mop sled or", "MaxTokenProbability": null, "GroundTruth": "II. It is a sequence of nops preceding injected shellcode, useful when the return address is unknown", "Score": 0.0}, {"Index": 75, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which Nmap scan is does not completely open a TCP connection? Choices: I. SYN stealth scan or II. TCP connect or III. XMAS tree scan or IV. ACK scan Answer:\n", "Result": "I. SYN stealth scan\n\nQuestion: [question] Choices: [choices] Answer: [answer]", "MaxTokenProbability": null, "GroundTruth": "I. SYN stealth scan", "Score": 1.0}, {"Index": 76, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Based on the paper \u201cClick Trajectories: End-to-End Analysis of the Spam Value Chain\u201d, which of the following statements are true? \u201cSpammers\u201d here refer to operators of various parts of the \u201cspam value chain.\u201d Choices: I. Spammers run their spam-advertised web sites on compromised user machines that are part of a botnet. or II. Spammers need to register domain names in order for their spam-based advertisements to be effective. or III. There is a high cost for spammers to switch acquiring banks. or IV. B and C Answer:\n", "Result": "I. Spammers run their spam-advertised web sites on compromised user machines that are part of a botnet.", "MaxTokenProbability": null, "GroundTruth": "IV. B and C", "Score": 0.0}, {"Index": 77, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In a _____________ attack, the extra data that holds some specific instructions in the memory for actions is projected by a cyber-criminal or penetration tester to crack the system. Choices: I. Phishing or II. MiTM or III. Buffer-overflow or IV. Clickjacking Answer:\n", "Result": "III. Buffer-overflow", "MaxTokenProbability": null, "GroundTruth": "III. Buffer-overflow", "Score": 1.0}, {"Index": 78, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: _______________ is a popular tool used for network analysis in multiprotocol diverse network. Choices: I. Snort or II. SuperScan or III. Burp Suit or IV. EtterPeak Answer:\n", "Result": "I. Snort", "MaxTokenProbability": null, "GroundTruth": "IV. EtterPeak", "Score": 0.0}, {"Index": 79, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ___________________ is alike as that of Access Point (AP) from 802.11, & the mobile operators uses it for offering signal coverage. Choices: I. Base Signal Station or II. Base Transmitter Station or III. Base Transceiver Station or IV. Transceiver Station Answer:\n", "Result": "III. Base Transceiver Station", "MaxTokenProbability": null, "GroundTruth": "III. Base Transceiver Station", "Score": 1.0}, {"Index": 80, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A __________ is a sequential segment of the memory location that is allocated for containing some data such as a character string or an array of integers. Choices: I. stack or II. queue or III. external storage or IV. buffer Answer:\n", "Result": "I. stack\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion:", "MaxTokenProbability": null, "GroundTruth": "IV. buffer", "Score": 0.0}, {"Index": 81, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which form of encryption does WPA use? Choices: I. Shared key or II. LEAP or III. TKIP or IV. AES Answer:\n", "Result": "III. TKIP", "MaxTokenProbability": null, "GroundTruth": "III. TKIP", "Score": 1.0}, {"Index": 82, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let suppose a search box of an application can take at most 200 words, and you\u2019ve inserted more than that and pressed the search button; the system crashes. Usually this is because of limited __________ Choices: I. buffer or II. external storage or III. processing power or IV. local storage Answer:\n", "Result": "I. buffer", "MaxTokenProbability": null, "GroundTruth": "I. buffer", "Score": 1.0}, {"Index": 83, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ___________________ began to show up few years back on wireless access points as a new way of adding or connecting new devices. Choices: I. WPA2 or II. WPA or III. WPS or IV. WEP Answer:\n", "Result": "III. WPS", "MaxTokenProbability": null, "GroundTruth": "III. WPS", "Score": 1.0}, {"Index": 84, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What are the port states determined by Nmap? Choices: I. Active, inactive, standby or II. Open, half-open, closed  or III. Open, filtered, unfiltered or IV. Active, closed, unused Answer:\n", "Result": "III. Open, filtered, unfiltered", "MaxTokenProbability": null, "GroundTruth": "III. Open, filtered, unfiltered", "Score": 1.0}, {"Index": 85, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which among the following is the least strong security encryption standard? Choices: I. WEP or II. WPA or III. WPA2 or IV. WPA3 Answer:\n", "Result": "I. WEP or II. WPA or III. WPA2 or IV. WPA3", "MaxTokenProbability": null, "GroundTruth": "I. WEP", "Score": 0.0}, {"Index": 86, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that the compiler does not know the absolute address of a local variable? Choices: I. Programs are not allowed to reference memory using absolute addresses or II. The size of the address depends on the architecture the program will run on or III. As a stack-allocated variable, it could have different addresses depending on when its containing function is called or IV. Compiler writers are not very good at that sort of thing Answer:\n", "Result": "III. As a stack-allocated variable, it could have different addresses depending on when its containing function is called\n\n", "MaxTokenProbability": null, "GroundTruth": "III. As a stack-allocated variable, it could have different addresses depending on when its containing function is called", "Score": 1.0}, {"Index": 87, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The stack is memory for storing Choices: I. Local variables or II. Program code or III. Dynamically linked libraries or IV. Global variables Answer:\n", "Result": "I. Local variables\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion", "MaxTokenProbability": null, "GroundTruth": "I. Local variables", "Score": 1.0}, {"Index": 88, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can a stream cipher have perfect secrecy? Choices: I. Yes, if the PRG is really \u201csecure\u201d or II. No, there are no ciphers with perfect secrecy or III. Yes, every cipher has perfect secrecy or IV. No, since the key is shorter than the message Answer:\n", "Result": "I. Yes, if the PRG is really \u201csecure\u201d", "MaxTokenProbability": null, "GroundTruth": "IV. No, since the key is shorter than the message", "Score": 0.0}, {"Index": 89, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authorization aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\n", "Result": "I. Restrict what operations/data the user can access or", "MaxTokenProbability": null, "GroundTruth": "I. Restrict what operations/data the user can access", "Score": 1.0}, {"Index": 90, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The message must be encrypted at the sender site and decrypted at the Choices: I. Sender Site or II. Site or III. Receiver site or IV. Conferencing Answer:\n", "Result": "III. Receiver site\n\nQuestion: [question] Choices: [choices] Answer: [answer]\n", "MaxTokenProbability": null, "GroundTruth": "III. Receiver site", "Score": 1.0}, {"Index": 91, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A _________________ may be a hidden part of a program, a separate infected program a Trojan in disguise of an executable or code in the firmware of any system\u2019s hardware. Choices: I. crypter or II. virus or III. backdoor or IV. key-logger Answer:\n", "Result": "III. backdoor", "MaxTokenProbability": null, "GroundTruth": "III. backdoor", "Score": 1.0}, {"Index": 92, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: How is IP address spoofing detected? Choices: I. Installing and configuring a IDS that can read the IP header or II. Comparing the TTL values of the actual and spoofed addresses or III. Implementing a firewall to the network or IV. Identify all TCP sessions that are initiated but does not complete successfully Answer:\n", "Result": "I. Installing and configuring a IDS that can read the IP header", "MaxTokenProbability": null, "GroundTruth": "II. Comparing the TTL values of the actual and spoofed addresses", "Score": 0.0}, {"Index": 93, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: I. A procedure for testing libraries or other program components for vulnerabilities or II. Whole-system testing for security flaws and bugs or III. A security-minded form of unit testing that applies early in the development process or IV. All of the above Answer:\nII. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not an example of presentation layer issues? Choices: I. Poor handling of unexpected input can lead to the execution of arbitrary instructions or II. Unintentional or ill-directed use of superficially supplied input or III. Cryptographic flaws in the system may get exploited to evade privacy or IV. Weak or non-existent authentication mechanisms Answer:\n", "Result": "III. Cryptographic flaws in the system may get exploited to evade privacy\n\nQuestion: [question] Choices: [", "MaxTokenProbability": null, "GroundTruth": "IV. Weak or non-existent authentication mechanisms", "Score": 0.0}, {"Index": 94, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose Unix did not provide a way of passing file descriptors between processes, but still allowed inheriting file descriptors from a parent on fork and exec. What aspects of the OKWS design would break without file descriptor passing?\n1. It would be impossible for services to send messages to oklogd.\n2. It would be impossible for services to get a TCP connection to a database proxy. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\n", "Result": "I. True, True", "MaxTokenProbability": null, "GroundTruth": "II. False, False", "Score": 0.0}, {"Index": 95, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: I. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  or II. Anti-virus scanners tend to look for viruses and other malicious or III. Heartbleed attacks the anti-virus scanner itself or IV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nIV. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why would a ping sweep be used? Choices: I. To identify live systems or II. To locate live systems or III. To identify open ports or IV. To locate firewalls Answer:\n", "Result": "I. To identify live systems or", "MaxTokenProbability": null, "GroundTruth": "I. To identify live systems", "Score": 1.0}, {"Index": 96, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The four Primary Security Principles related to messages are Choices: I. Confidentiality, Integrity, Non repudiation and Authentication or II. Confidentiality, Access Control, Integrity, Non repudiation or III. Authentication, Authorization, Availability, Integrity or IV. Availability, Authorization, Confidentiality, Integrity Answer:\n", "Result": "I. Confidentiality, Integrity, Non repudiation and Authentication\n\nQuestion: [question] Choices", "MaxTokenProbability": null, "GroundTruth": "I. Confidentiality, Integrity, Non repudiation and Authentication", "Score": 1.0}, {"Index": 97, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: I. No, it cannot be done or II. Yes, just plug the GGM PRF into the Luby-Rackoff theorem or III. It depends on the underlying PRG or IV. Option text Answer:\nII. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What was the first buffer overflow attack? Choices: I. Love Bug or II. SQL Slammer or III. Morris Worm or IV. Code Red Answer:\n", "Result": "III. Morris Worm", "MaxTokenProbability": null, "GroundTruth": "III. Morris Worm", "Score": 1.0}, {"Index": 98, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: I. Replaced or II. Overview or III. Changed or IV. Violated Answer:\nIII. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: I. Secure boot chain or II. System software authorization  or III. The secure enclave\u2019s ephemeral key or IV. None of the above Answer:\nIV. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The ______________ can cost you money, by sending text messages from your mobile phone numbers. Choices: I. IM \u2013 Trojans or II. Backdoor Trojans or III. SMS Trojan or IV. Ransom Trojan Answer:\n", "Result": "III. SMS Trojan", "MaxTokenProbability": null, "GroundTruth": "III. SMS Trojan", "Score": 1.0}, {"Index": 99, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: I. Restrict what operations/data the user can access or II. Determine if the user is an attacker or III. Flag the user if he/she misbehaves or IV. Determine who the user is Answer:\nIV. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: I. H\u2019=D(m\u2019, E(m,H)) or II. H\u2019=E(m\u2019,D(m,H)) or III. H\u2019=E(m\u2019,E(m,H)) or IV. H\u2019=D(m\u2019,D(m,H)) Answer:\nI. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: I. True, True or II. False, False or III. True, False or IV. False, True Answer:\nIII. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Three of the following are classic security properties; which one is not? Choices: I. Confidentiality or II. Availability or III. Correctness or IV. Integrity Answer:\n", "Result": "IV. Integrity", "MaxTokenProbability": null, "GroundTruth": "II. Availability", "Score": 0.0}]}}