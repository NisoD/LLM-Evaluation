{"card": "cards.mmlu.computer_security", "template_name": "template_5", "model_name": "allenai/OLMo-1.7-7B-hf", "system_format": "empty_system_format", "max_instances": 1600, "num_demos": 3, "demos_pool_size": 20, "results": {"test": [{"Index": 0, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: A. True, True, B. True, False, C. False, True, D. False, False Answer:\nB. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following styles of fuzzer is more likely to explore paths covering every line of code in the following program? Choices: A. Whitebox, B. Blackbox, C. Generational, D. Mutation-based Answer:\n", "Result": "C. Generational\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion", "MaxTokenProbability": null, "GroundTruth": "A. Whitebox"}, {"Index": 1, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replaying bytes that a client sent earlier.\n2. An attacker impersonating the server. Choices: A. True, False, B. True, True, C. False, True, D. False, False Answer:\n", "Result": "C. False, True", "MaxTokenProbability": null, "GroundTruth": "B. True, True"}, {"Index": 2, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: A. True, True, B. True, False, C. False, True, D. False, False Answer:\nB. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: A. False, True, B. False, False, C. True, False, D. True, True Answer:\nC. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: MIT\u2019s Kerberos KDC server has a maximum ticket lifetime of 24 hours (for most user principals). What ensures that an expired Kerberos ticket can no longer be used? Choices: A. When a client connects to a server, the server compares the ticket\u2019s expiration time to the server\u2019s current clock, and refuses to authenticate the user if the ticket expiration time is in the past., B. The Kerberos server (KDC) refuses to establish new connections between clients and servers for expired tickets., C. When a client connects to a server, the server sets a 24-hour timer to terminate the connection, which ensures a client cannot remain connected past the ticket\u2019s maximum lifetime., D. When a client connects to a server, the server sends a query to the KDC to check if the ticket is still valid with respect to the KDC\u2019s clock, and refuses to authenticate the user if the KDC reports that the ticket is expired. Answer:\n", "Result": "D. When a client connects to a server, the server sends a query to the KDC to check if the ticket is", "MaxTokenProbability": null, "GroundTruth": "A. When a client connects to a server, the server compares the ticket\u2019s expiration time to the server\u2019s current clock, and refuses to authenticate the user if the ticket expiration time is in the past."}, {"Index": 3, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: A. Secure boot chain, B. The secure enclave\u2019s ephemeral key, C. None of the above, D. System software authorization  Answer:\nC. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In Message Condentiality, the transmitted message must make sense to only intended Choices: A. Receiver, B. Modulor, C. Sender, D. Translator Answer:\n", "Result": "A. Receiver", "MaxTokenProbability": null, "GroundTruth": "A. Receiver"}, {"Index": 4, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: A. Restrict what operations/data the user can access, B. Determine if the user is an attacker, C. Flag the user if he/she misbehaves, D. Determine who the user is Answer:\nD. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a remote Trojan? Choices: A. BankerA, B. Troya, C. Game-Troj, D. DaCryptic Answer:\n", "Result": "B. Troya", "MaxTokenProbability": null, "GroundTruth": "B. Troya"}, {"Index": 5, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: A. True, True, B. True, False, C. False, True, D. False, False Answer:\nB. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: A. Secure boot chain, B. The secure enclave\u2019s ephemeral key, C. None of the above, D. System software authorization  Answer:\nC. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ______________ is a widespread app\u2019s coding mistake made by developers which could be exploited by an attacker for gaining access or malfunctioning your system. Choices: A. Memory leakage, B. Inefficient programming, C. Less processing power, D. Buffer-overrun Answer:\n", "Result": "D. Buffer-overrun", "MaxTokenProbability": null, "GroundTruth": "D. Buffer-overrun"}, {"Index": 6, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: A. Restrict what operations/data the user can access, B. Determine if the user is an attacker, C. Flag the user if he/she misbehaves, D. Determine who the user is Answer:\nD. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: A. True, True, B. True, False, C. False, True, D. False, False Answer:\nB. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Consider the paper Native Client: A Sandbox for Portable, Untrusted x86 Native Code by Yee et al. Ben Bitdiddle notes that NaCl uses Intel x86 segmentation to ensure that the sandboxed module does not read or write memory outside its own data area, and does not execute instructions outside its own code. Ben thinks that with these restrictions alone, executing the sandboxed module must be safe; that is, he thinks validation is not needed. Ben is wrong. Circle the types of x86 machine instructions that the validator always forbids in sandboxed code. Please ignore trampoline and springboard code. Choices: A. all indirect jumps (via an address in a register or variable), B. all loads or stores to addresses that are not 0 mod 32, C. all instructions that modify segment state, D. all indirect loads or stores (via an address in a register or variable) Answer:\n", "Result": "D. all indirect loads or stores (via an address in a register or variable)", "MaxTokenProbability": null, "GroundTruth": "C. all instructions that modify segment state"}, {"Index": 7, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: A. Secure boot chain, B. The secure enclave\u2019s ephemeral key, C. None of the above, D. System software authorization  Answer:\nC. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: ____________ is also a part of darknet that is employed for transferring files anonymously. Choices: A. Internet, B. ARPANET, C. Freenet, D. Stuxnet Answer:\n", "Result": "C. Freenet", "MaxTokenProbability": null, "GroundTruth": "C. Freenet"}, {"Index": 8, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: A. Secure boot chain, B. The secure enclave\u2019s ephemeral key, C. None of the above, D. System software authorization  Answer:\nC. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: A. True, True, B. True, False, C. False, True, D. False, False Answer:\nB. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why apps developed in languages like C, C++ is prone to Buffer-overflow? Choices: A. No processing power check, B. No string boundary checks in predefined functions, C. No storage check in the external memory, D. No database check Answer:\n", "Result": "A. No processing power check", "MaxTokenProbability": null, "GroundTruth": "B. No string boundary checks in predefined functions"}, {"Index": 9, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: A. False, True, B. False, False, C. True, False, D. True, True Answer:\nC. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Man in the middle attack can endanger the security of Diffie Hellman method if two parties are not Choices: A. Authenticated, B. Shared, C. Submitted, D. Joined Answer:\n", "Result": "A. Authenticated", "MaxTokenProbability": null, "GroundTruth": "A. Authenticated"}, {"Index": 10, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: An integer overflow occurs when Choices: A. an integer expression's result \"wraps around\"; instead of creating a very large number, a very small (or negative) number ends up getting created, B. an integer is used to access a buffer outside of the buffer's bounds, C. an integer is used as if it was a pointer, D. there is no more space to hold integers in the program Answer:\n", "Result": "A. an integer expression's result \"wraps around\"; instead of creating a very large number, a very small (", "MaxTokenProbability": null, "GroundTruth": "D. there is no more space to hold integers in the program"}, {"Index": 11, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: A. True, True, B. True, False, C. False, True, D. False, False Answer:\nB. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let HH be a Merkle-Damgard hash function is H:X^{\\leq L} \\to TH:X^\u2264L  \u2192T. Construct a MAC from this HH as follows: \\ \\ S(k,m) = H(k \\| m)  S(k,m)=H(k\u2225m). This mac is insecure because: Choices: A. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| \\text{PB} \\| w)H(k\u2225m\u2225PB\u2225w) for any ww, B. Anyone can compute H( k \\| m )H(k\u2225m) for any mm, C. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| w)H(k\u2225m\u2225w) for any ww, D. Given H(k \\| m)H(k\u2225m) anyone can compute H(w \\| k \\| m \\| \\text{PB})H(w\u2225k\u2225m\u2225PB) for any ww Answer:\n", "Result": "A. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\|", "MaxTokenProbability": null, "GroundTruth": "A. Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| \\text{PB} \\| w)H(k\u2225m\u2225PB\u2225w) for any ww"}, {"Index": 12, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: A. Restrict what operations/data the user can access, B. Determine if the user is an attacker, C. Flag the user if he/she misbehaves, D. Determine who the user is Answer:\nD. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose that Alice and Bob sent confidential text messages to one another last month through an encrypted messaging system. Alice and Bob are worried that an adversary might compromise one of their computers today, while they are taking the 6.858 final exam, and would then be able to decrypt those messages. Which of the following security properties can address Alice and Bob\u2019s concern? Choices: A. Backward secrecy., B. Authentication., C. Forward secrecy, D. Deniability. Answer:\n", "Result": "C. Forward secrecy.\n\nQuestion: [question] Choices: [choices] Answer: [answer]\n", "MaxTokenProbability": null, "GroundTruth": "C. Forward secrecy"}, {"Index": 13, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: A. False, True, B. False, False, C. True, False, D. True, True Answer:\nC. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The AH Protocol provides source authentication and data integrity, but not Choices: A. Nonrepudiation, B. Both A & C, C. Integrity, D. Privacy Answer:\n", "Result": "B. Both A & C", "MaxTokenProbability": null, "GroundTruth": "D. Privacy"}, {"Index": 14, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: A. Secure boot chain, B. The secure enclave\u2019s ephemeral key, C. None of the above, D. System software authorization  Answer:\nC. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a security exploit? Choices: A. Authentication, B. SQL Injection, C. Eavesdropping, D. Cross-site scripting Answer:\n", "Result": "C. Eavesdropping", "MaxTokenProbability": null, "GroundTruth": "A. Authentication"}, {"Index": 15, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: _______________ is the central node of 802.11 wireless operations. Choices: A. Access Point, B. WPA, C. WAP, D. Access Port Answer:\n", "Result": "A. Access Point,", "MaxTokenProbability": null, "GroundTruth": "A. Access Point"}, {"Index": 16, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: A. Restrict what operations/data the user can access, B. Determine if the user is an attacker, C. Flag the user if he/she misbehaves, D. Determine who the user is Answer:\nD. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In MD-5 the length of the message digest is Choices: A. 64, B. 128, C. 160, D. 54 Answer:\n", "Result": "C. 160", "MaxTokenProbability": null, "GroundTruth": "B. 128"}, {"Index": 17, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: A. Secure boot chain, B. The secure enclave\u2019s ephemeral key, C. None of the above, D. System software authorization  Answer:\nC. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: A. True, True, B. True, False, C. False, True, D. False, False Answer:\nB. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is Nmap? Choices: A. It is a network fuzz testing tool, B. It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might be at those addresses, based on the responses, C. It is a map of the Internet, D. It is a suite of tools for scripting attacks: probe, construct, encode, inject, wait for response Answer:\n", "Result": "B. It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might", "MaxTokenProbability": null, "GroundTruth": "B. It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might be at those addresses, based on the responses"}, {"Index": 18, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: A. False, True, B. False, False, C. True, False, D. True, True Answer:\nC. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: How do you prevent SQL injection? Choices: A. Interrupt requests, B. All of the above, C. Escape queries, D. Merge tables Answer:\n", "Result": "C. Escape queries", "MaxTokenProbability": null, "GroundTruth": "C. Escape queries"}, {"Index": 19, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: A. Restrict what operations/data the user can access, B. Determine if the user is an attacker, C. Flag the user if he/she misbehaves, D. Determine who the user is Answer:\nD. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What does it mean to \"be stealthy\" during a penetration test? Choices: A. Performing penetration testing without the target organization knowing, B. Taking care to avoid activities during a penetration test that might attract attention, e.g., by operators or IDS services, C. Using encryption during tests to make the source of attacks impossible to determine, D. Performing the tests from an undisclosed location Answer:\n", "Result": "A. Performing penetration testing without the target organization knowing", "MaxTokenProbability": null, "GroundTruth": "B. Taking care to avoid activities during a penetration test that might attract attention, e.g., by operators or IDS services"}, {"Index": 20, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: A. False, True, B. False, False, C. True, False, D. True, True Answer:\nC. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a transport layer vulnerability? Choices: A. Unauthorized network access, B. Mishandling of undefined, poorly defined variables, C. The Vulnerability that allows \u201cfingerprinting\u201d & other enumeration of host information, D. Overloading of transport-layer mechanisms Answer:\n", "Result": "C. The Vulnerability that allows \u201cfingerprinting\u201d & other enumeration of host information\n\nQuestion: [question", "MaxTokenProbability": null, "GroundTruth": "A. Unauthorized network access"}, {"Index": 21, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: A. Restrict what operations/data the user can access, B. Determine if the user is an attacker, C. Flag the user if he/she misbehaves, D. Determine who the user is Answer:\nD. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: In Brumley and Boneh\u2019s paper on side-channel attacks, why does blinding prevent the timing attack from working? Choices: A. Blinding changes the p and q primes that are used, so an adversary cannot learn the server\u2019s true p and q values., B. Blinding adds a random amount of time to the decryption due to the multiplication and division by the blinding random value r, which obscures the timing differences used in the attack., C. Blinding randomizes the ciphertext being decrypted, thus obscuring the correlation between an adversary\u2019s input and the timing differences., D. Blinding prevents the server from using the CRT optimization, which is essential to the timing attack. Answer:\n", "Result": "C. Blinding randomizes the ciphertext being decrypted, thus obscuring the correlation between an adversary\u2019s input and", "MaxTokenProbability": null, "GroundTruth": "C. Blinding randomizes the ciphertext being decrypted, thus obscuring the correlation between an adversary\u2019s input and the timing differences."}, {"Index": 22, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. RS and KM\n2. RS and MR Choices: A. True, True, B. True, False, C. False, False, D. False, True Answer:\n", "Result": "D. False, True", "MaxTokenProbability": null, "GroundTruth": "D. False, True"}, {"Index": 23, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: A. True, True, B. True, False, C. False, True, D. False, False Answer:\nB. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Public key encryption is advantageous over Symmetric key Cryptography because of Choices: A. Key length, B. Key exchange, C. Speed, D. Space Answer:\n", "Result": "B. Key exchange", "MaxTokenProbability": null, "GroundTruth": "B. Key exchange"}, {"Index": 24, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: A. False, True, B. False, False, C. True, False, D. True, True Answer:\nC. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: A. True, True, B. True, False, C. False, True, D. False, False Answer:\nB. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The __________ was a huge marketplace of Dark Web specifically famous for selling of illegal drugs & narcotics as well as you can find a wide range of other goods for sale. Choices: A. Cotton Road, B. Drug Road, C. Dark Road, D. Silk Road Answer:\n", "Result": "D. Silk Road\n\nQuestion: [question] Choices: [choices] Answer: [answer]\n", "MaxTokenProbability": null, "GroundTruth": "D. Silk Road"}, {"Index": 25, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The ______________ is categorized as an unknown segment of the Deep Web which has been purposely kept hidden & is inaccessible using standard web browsers. Choices: A. World Wide Web, B. Dark web, C. Surface web, D. Haunted web Answer:\n", "Result": "B. Dark web", "MaxTokenProbability": null, "GroundTruth": "B. Dark web"}, {"Index": 26, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What does EXE do when the STP solver times out on a constraint query for a particular path? Choices: A. Remove a subset of the constraints and retry the query., B. Assume that the query is satisfiable and continue executing the path., C. Restart STP and retry the query, up to a limited number of retries., D. Assume that the query is not satisfiable and stop executing the path Answer:\n", "Result": "A. Remove a subset of the constraints and retry the query.", "MaxTokenProbability": null, "GroundTruth": "D. Assume that the query is not satisfiable and stop executing the path"}, {"Index": 27, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: A. True, True, B. True, False, C. False, True, D. False, False Answer:\nB. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: A. Restrict what operations/data the user can access, B. Determine if the user is an attacker, C. Flag the user if he/she misbehaves, D. Determine who the user is Answer:\nD. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: To verify a digital signature we need the Choices: A. Receiver\u2019s Private key, B. Receiver\u2019s Public key, C. Sender\u2019s Public key, D. Sender\u2019s Private key Answer:\n", "Result": "B. Receiver\u2019s Public key", "MaxTokenProbability": null, "GroundTruth": "C. Sender\u2019s Public key"}, {"Index": 28, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose you want to use fuzzing on a program to try to find memory errors; which of the following statements is true? Choices: A. Fuzzing doesn't find memory errors, it finds crashes and hangs, B. Compiling the program with address sanitizer (ASAN) will make errors harder to reproduce, C. You should not use a grammar-based fuzzer, because its adherence to the grammar means it will not find memory errors, D. Compiling the program with address sanitizer (ASAN) will make the source of a memory error easier to find Answer:\n", "Result": "A. Fuzzing doesn't find memory errors, it finds crashes and hangs", "MaxTokenProbability": null, "GroundTruth": "D. Compiling the program with address sanitizer (ASAN) will make the source of a memory error easier to find"}, {"Index": 29, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: A. False, True, B. False, False, C. True, False, D. True, True Answer:\nC. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: A. True, True, B. True, False, C. False, True, D. False, False Answer:\nB. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Based on the paper \u201cSoK: SSL and HTTPS: Revisiting past challenges and evaluating certificates trust model enhancements\u201d, which of the following statements are false? Choices: A. Server key-pinning makes it harder for an adversary to convince a CA to mint a certificate for a site and launch an MITM attack on that site., B. OCSP stapling allows a server to prove to a browser that its certificate hasn\u2019t been revoked., C. DANE makes it difficult for an adversary to launch a SSL stripping attack., D. Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates. Answer:\n", "Result": "D. Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates.\n", "MaxTokenProbability": null, "GroundTruth": "D. Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates."}, {"Index": 30, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What tool can be used to perform SNMP enumeration? Choices: A. Nslookup, B. DNSlookup, C. IP Network Browser, D. Whois Answer:\n", "Result": "C. IP Network Browser", "MaxTokenProbability": null, "GroundTruth": "C. IP Network Browser"}, {"Index": 31, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: A. Restrict what operations/data the user can access, B. Determine if the user is an attacker, C. Flag the user if he/she misbehaves, D. Determine who the user is Answer:\nD. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which among them has the strongest wireless security? Choices: A. WPA2, B. WPA, C. WEP, D. WPA3 Answer:\n", "Result": "A. WPA2,", "MaxTokenProbability": null, "GroundTruth": "D. WPA3"}, {"Index": 32, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: A. Restrict what operations/data the user can access, B. Determine if the user is an attacker, C. Flag the user if he/she misbehaves, D. Determine who the user is Answer:\nD. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: A. Secure boot chain, B. The secure enclave\u2019s ephemeral key, C. None of the above, D. System software authorization  Answer:\nC. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose Unix did not provide a way of passing file descriptors between processes, but still allowed inheriting file descriptors from a parent on fork and exec. What aspects of the OKWS design would break without file descriptor passing?\n1. It would be impossible for services to get a TCP connection to the client web browser.\n2. It would be impossible for okd to run as a non-root user. Choices: A. False, False, B. True, True, C. True, False, D. False, True Answer:\n", "Result": "C. True, False", "MaxTokenProbability": null, "GroundTruth": "C. True, False"}, {"Index": 33, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: A. False, True, B. False, False, C. True, False, D. True, True Answer:\nC. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Failed sessions allow brute-force attacks on access credentials. This type of attacks are done in which layer of the OSI model? Choices: A. Presentation layer, B. Data-link Layer, C. Physical layer, D. Session layer Answer:\n", "Result": "C. Physical layer", "MaxTokenProbability": null, "GroundTruth": "D. Session layer"}, {"Index": 34, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: A. Secure boot chain, B. The secure enclave\u2019s ephemeral key, C. None of the above, D. System software authorization  Answer:\nC. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is an authentication method? Choices: A. All of the above, B. Secret question, C. Biometric, D. SMS code Answer:\n", "Result": "C. Biometric", "MaxTokenProbability": null, "GroundTruth": "A. All of the above"}, {"Index": 35, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: A. False, True, B. False, False, C. True, False, D. True, True Answer:\nC. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: A. True, True, B. True, False, C. False, True, D. False, False Answer:\nB. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: When does a buffer overflow occur, generally speaking? Choices: A. when copying a buffer from the stack to the heap, B. when a pointer is used to access memory not allocated to it, C. when the program notices a buffer has filled up, and so starts to reject requests, D. when writing to a pointer that has been freed Answer:\n", "Result": "B. when a pointer is used to access memory not allocated to it", "MaxTokenProbability": null, "GroundTruth": "B. when a pointer is used to access memory not allocated to it"}, {"Index": 36, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: A. Secure boot chain, B. The secure enclave\u2019s ephemeral key, C. None of the above, D. System software authorization  Answer:\nC. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A digital signature needs a Choices: A. All of them, B. Private-key system, C. Shared-key system, D. Public-key system Answer:\n", "Result": "D. Public-key system", "MaxTokenProbability": null, "GroundTruth": "D. Public-key system"}, {"Index": 37, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A packet filter firewall filters at the Choices: A. Data link layer, B. Physical Layer, C. Network or transport layer, D. Application or transport Answer:\n", "Result": "C. Network or transport layer", "MaxTokenProbability": null, "GroundTruth": "C. Network or transport layer"}, {"Index": 38, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: A. False, True, B. False, False, C. True, False, D. True, True Answer:\nC. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Let I = (S,V)I=(S,V) be a MAC. Suppose S(k,m)S(k,m) is always 5 bits long. Can this MAC be secure? Choices: A. Yes, the attacker cannot generate a valid tag for any message, B. Yes, the PRG is pseudorandom, C. It depends on the details of the MAC, D. No, an attacker can simply guess the tag for messages Answer:\n", "Result": "D. No, an attacker can simply guess the tag for messages", "MaxTokenProbability": null, "GroundTruth": "D. No, an attacker can simply guess the tag for messages"}, {"Index": 39, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: A. Restrict what operations/data the user can access, B. Determine if the user is an attacker, C. Flag the user if he/she misbehaves, D. Determine who the user is Answer:\nD. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: A. False, True, B. False, False, C. True, False, D. True, True Answer:\nC. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following deals with network intrusion detection and real-time traffic analysis? Choices: A. Snort, B. Nessus, C. John the Ripper, D. L0phtCrack Answer:\n", "Result": "A. Snort,", "MaxTokenProbability": null, "GroundTruth": "A. Snort"}, {"Index": 40, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The Message condentiality or privacy means that the sender and the receiver expect Choices: A. Condentiality, B. Authentication, C. Integrity, D. Nonrepudiation Answer:\n", "Result": "A. Condentiality,", "MaxTokenProbability": null, "GroundTruth": "A. Condentiality"}, {"Index": 41, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: A. Secure boot chain, B. The secure enclave\u2019s ephemeral key, C. None of the above, D. System software authorization  Answer:\nC. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: When a wireless user authenticates to any AP, both of them go in the course of four-step authentication progression which is called _____________ Choices: A. wireless handshaking, B. 4-way handshake, C. 4-way connection, D. AP-handshaking Answer:\n", "Result": "B. 4-way handshake", "MaxTokenProbability": null, "GroundTruth": "B. 4-way handshake"}, {"Index": 42, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Message authentication is a service beyond Choices: A. Message Condentiality, B. Message Splashing, C. Message Integrity, D. Message Sending Answer:\n", "Result": "C. Message Integrity", "MaxTokenProbability": null, "GroundTruth": "C. Message Integrity"}, {"Index": 43, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: A. True, True, B. True, False, C. False, True, D. False, False Answer:\nB. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: A. Secure boot chain, B. The secure enclave\u2019s ephemeral key, C. None of the above, D. System software authorization  Answer:\nC. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following are most vulnerable to injection attacks? Choices: A. SQL queries based on user input, B. Network communications, C. Session IDs, D. Registry keys Answer:\n", "Result": "A. SQL queries based on user input", "MaxTokenProbability": null, "GroundTruth": "A. SQL queries based on user input"}, {"Index": 44, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A hash function guarantees the integrity of a message. It guarantees that the message has not be Choices: A. Violated, B. Overview, C. Changed, D. Replaced Answer:\nC. Changed\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server. Choices: A. True, True, B. True, False, C. False, True, D. False, False Answer:\nB. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replacing bytes sent by a client with bytes of the attacker\u2019s own choosing.\n2. An attacker reading the plaintext bytes sent by a client. Choices: A. True, False, B. True, True, C. False, False, D. False, True Answer:\n", "Result": "A. True, False", "MaxTokenProbability": null, "GroundTruth": "B. True, True"}, {"Index": 45, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: A. False, True, B. False, False, C. True, False, D. True, True Answer:\nC. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is a Wireless traffic Sniffing tool? Choices: A. BurpSuit, B. Nessus, C. Maltego, D. Wireshark Answer:\n", "Result": "D. Wireshark\n\nQuestion: [question] Choices: [choices] Answer: [answer]", "MaxTokenProbability": null, "GroundTruth": "D. Wireshark"}, {"Index": 46, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following does authentication aim to accomplish? Choices: A. Restrict what operations/data the user can access, B. Determine if the user is an attacker, C. Flag the user if he/she misbehaves, D. Determine who the user is Answer:\nD. Determine who the user is\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: A ___________ is a method in which a computer security mechanism is bypassed untraceable for accessing the computer or its information. Choices: A. clickjacking, B. front-door, C. key-logging, D. backdoor Answer:\n", "Result": "D. Backdoor", "MaxTokenProbability": null, "GroundTruth": "D. backdoor"}, {"Index": 47, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is penetration testing? Choices: A. Whole-system testing for security flaws and bugs, B. A security-minded form of unit testing that applies early in the development process, C. All of the above, D. A procedure for testing libraries or other program components for vulnerabilities Answer:\nA. Whole-system testing for security flaws and bugs\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Which of the following is not a block cipher operating mode? Choices: A. CBF, B. ECB, C. CBC, D. CFB Answer:\n", "Result": "A. CBF,", "MaxTokenProbability": null, "GroundTruth": "A. CBF"}, {"Index": 48, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS Choices: A. False, True, B. False, False, C. True, False, D. True, True Answer:\nC. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: A. Secure boot chain, B. The secure enclave\u2019s ephemeral key, C. None of the above, D. System software authorization  Answer:\nC. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: What is a web proxy? Choices: A. An agent that makes decisions on the client's behalf when interacting with web applications, B. A simulator for the web, for use when off-line, C. A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server, D. A piece of software that makes a web application look like a standalone application, making it easier to test Answer:\n", "Result": "C. A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server", "MaxTokenProbability": null, "GroundTruth": "C. A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server"}, {"Index": 49, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account. Choices: A. True, True, B. False, True, C. False, False, D. True, False Answer:\nD. True, False\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Why is it that anti-virus scanners would not have found an exploitation of Heartbleed? Choices: A. Anti-virus scanners tend to look for viruses and other malicious, B. Heartbleed attacks the anti-virus scanner itself, C. It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit , D. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code  Answer:\nD. Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code \n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: A. Secure boot chain, B. The secure enclave\u2019s ephemeral key, C. None of the above, D. System software authorization  Answer:\nC. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Buffer-overflow may remain as a bug in apps if __________ are not done fully. Choices: A. boundary checks, B. boundary hacks, C. buffer checks, D. memory checks Answer:\n", "Result": "A. boundary checks,", "MaxTokenProbability": null, "GroundTruth": "A. boundary checks"}, {"Index": 50, "Instance": "Question: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows: Choices: A. H\u2019=D(m\u2019, E(m,H)), B. H\u2019=E(m\u2019,E(m,H)), C. H\u2019=E(m\u2019,D(m,H)), D. H\u2019=D(m\u2019,D(m,H)) Answer:\nA. H\u2019=D(m\u2019, E(m,H))\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone. Choices: A. Secure boot chain, B. The secure enclave\u2019s ephemeral key, C. None of the above, D. System software authorization  Answer:\nC. None of the above\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Can we build a secure PRP from a secure PRG? Choices: A. Option text, B. No, it cannot be done, C. Yes, just plug the GGM PRF into the Luby-Rackoff theorem, D. It depends on the underlying PRG Answer:\nC. Yes, just plug the GGM PRF into the Luby-Rackoff theorem\n\nQuestion: [question] Choices: [choices] Answer: [answer]\nQuestion: Applications developed by programming languages like ____ and ______ have this common buffer-overflow error. Choices: A. C, Ruby, B. Tcl, C#, C. C, C++, D. Python, Ruby Answer:\n", "Result": "A. C, Ruby", "MaxTokenProbability": null, "GroundTruth": "C. C, C++"}]}}